com.amazonaws.AmazonClientException -> com.amazonaws.AmazonClientException:
com.amazonaws.AmazonServiceException -> com.amazonaws.AmazonServiceException:
    java.lang.String requestId -> a
    java.lang.String errorCode -> b
    com.amazonaws.AmazonServiceException$ErrorType errorType -> c
    int statusCode -> d
    java.lang.String serviceName -> e
    void setRequestId(java.lang.String) -> setRequestId
    java.lang.String getRequestId() -> getRequestId
    void setServiceName(java.lang.String) -> setServiceName
    java.lang.String getServiceName() -> getServiceName
    void setErrorCode(java.lang.String) -> setErrorCode
    java.lang.String getErrorCode() -> getErrorCode
    void setErrorType(com.amazonaws.AmazonServiceException$ErrorType) -> setErrorType
    com.amazonaws.AmazonServiceException$ErrorType getErrorType() -> getErrorType
    void setStatusCode(int) -> setStatusCode
    int getStatusCode() -> getStatusCode
    java.lang.String toString() -> toString
com.amazonaws.AmazonServiceException$ErrorType -> com.amazonaws.AmazonServiceException$ErrorType:
    com.amazonaws.AmazonServiceException$ErrorType Client -> Client
    com.amazonaws.AmazonServiceException$ErrorType Service -> Service
    com.amazonaws.AmazonServiceException$ErrorType Unknown -> Unknown
    com.amazonaws.AmazonServiceException$ErrorType[] $VALUES -> a
    com.amazonaws.AmazonServiceException$ErrorType[] values() -> values
    com.amazonaws.AmazonServiceException$ErrorType valueOf(java.lang.String) -> valueOf
com.amazonaws.AmazonWebServiceClient -> com.amazonaws.AmazonWebServiceClient:
    java.net.URI endpoint -> a
    com.amazonaws.ClientConfiguration clientConfiguration -> d
    com.amazonaws.http.AmazonHttpClient client -> b
    java.util.List requestHandlers -> c
    void setEndpoint(java.lang.String) -> setEndpoint
    void shutdown() -> shutdown
    void addRequestHandler(com.amazonaws.handlers.RequestHandler) -> addRequestHandler
    void removeRequestHandler(com.amazonaws.handlers.RequestHandler) -> removeRequestHandler
    com.amazonaws.http.ExecutionContext createExecutionContext() -> a
com.amazonaws.AmazonWebServiceRequest -> com.amazonaws.AmazonWebServiceRequest:
    com.amazonaws.RequestClientOptions requestClientOptions -> a
    java.lang.String delegationToken -> b
    com.amazonaws.auth.AWSCredentials credentials -> c
    java.lang.String getDelegationToken() -> getDelegationToken
    void setDelegationToken(java.lang.String) -> setDelegationToken
    void setRequestCredentials(com.amazonaws.auth.AWSCredentials) -> setRequestCredentials
    com.amazonaws.auth.AWSCredentials getRequestCredentials() -> getRequestCredentials
    java.util.Map copyPrivateRequestParameters() -> copyPrivateRequestParameters
    com.amazonaws.RequestClientOptions getRequestClientOptions() -> getRequestClientOptions
com.amazonaws.AmazonWebServiceResponse -> com.amazonaws.AmazonWebServiceResponse:
    java.lang.Object result -> a
    com.amazonaws.ResponseMetadata responseMetadata -> b
    java.lang.Object getResult() -> getResult
    void setResult(java.lang.Object) -> setResult
    void setResponseMetadata(com.amazonaws.ResponseMetadata) -> setResponseMetadata
    com.amazonaws.ResponseMetadata getResponseMetadata() -> getResponseMetadata
    java.lang.String getRequestId() -> getRequestId
com.amazonaws.ClientConfiguration -> com.amazonaws.ClientConfiguration:
    java.lang.String DEFAULT_USER_AGENT -> DEFAULT_USER_AGENT
    java.lang.String userAgent -> a
    int maxErrorRetry -> b
    com.amazonaws.Protocol protocol -> c
    java.lang.String proxyHost -> d
    int proxyPort -> e
    java.lang.String proxyUsername -> f
    java.lang.String proxyPassword -> g
    java.lang.String proxyDomain -> h
    java.lang.String proxyWorkstation -> i
    int maxConnections -> j
    int socketTimeout -> k
    int connectionTimeout -> l
    int socketSendBufferSizeHint -> m
    int socketReceiveBufferSizeHint -> n
    com.amazonaws.Protocol getProtocol() -> getProtocol
    void setProtocol(com.amazonaws.Protocol) -> setProtocol
    com.amazonaws.ClientConfiguration withProtocol(com.amazonaws.Protocol) -> withProtocol
    int getMaxConnections() -> getMaxConnections
    void setMaxConnections(int) -> setMaxConnections
    com.amazonaws.ClientConfiguration withMaxConnections(int) -> withMaxConnections
    java.lang.String getUserAgent() -> getUserAgent
    void setUserAgent(java.lang.String) -> setUserAgent
    com.amazonaws.ClientConfiguration withUserAgent(java.lang.String) -> withUserAgent
    java.lang.String getProxyHost() -> getProxyHost
    void setProxyHost(java.lang.String) -> setProxyHost
    com.amazonaws.ClientConfiguration withProxyHost(java.lang.String) -> withProxyHost
    int getProxyPort() -> getProxyPort
    void setProxyPort(int) -> setProxyPort
    com.amazonaws.ClientConfiguration withProxyPort(int) -> withProxyPort
    java.lang.String getProxyUsername() -> getProxyUsername
    void setProxyUsername(java.lang.String) -> setProxyUsername
    com.amazonaws.ClientConfiguration withProxyUsername(java.lang.String) -> withProxyUsername
    java.lang.String getProxyPassword() -> getProxyPassword
    void setProxyPassword(java.lang.String) -> setProxyPassword
    com.amazonaws.ClientConfiguration withProxyPassword(java.lang.String) -> withProxyPassword
    java.lang.String getProxyDomain() -> getProxyDomain
    void setProxyDomain(java.lang.String) -> setProxyDomain
    com.amazonaws.ClientConfiguration withProxyDomain(java.lang.String) -> withProxyDomain
    java.lang.String getProxyWorkstation() -> getProxyWorkstation
    void setProxyWorkstation(java.lang.String) -> setProxyWorkstation
    com.amazonaws.ClientConfiguration withProxyWorkstation(java.lang.String) -> withProxyWorkstation
    int getMaxErrorRetry() -> getMaxErrorRetry
    void setMaxErrorRetry(int) -> setMaxErrorRetry
    com.amazonaws.ClientConfiguration withMaxErrorRetry(int) -> withMaxErrorRetry
    int getSocketTimeout() -> getSocketTimeout
    void setSocketTimeout(int) -> setSocketTimeout
    com.amazonaws.ClientConfiguration withSocketTimeout(int) -> withSocketTimeout
    int getConnectionTimeout() -> getConnectionTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    com.amazonaws.ClientConfiguration withConnectionTimeout(int) -> withConnectionTimeout
    int[] getSocketBufferSizeHints() -> getSocketBufferSizeHints
    void setSocketBufferSizeHints(int,int) -> setSocketBufferSizeHints
    com.amazonaws.ClientConfiguration withSocketBufferSizeHints(int,int) -> withSocketBufferSizeHints
com.amazonaws.DefaultRequest -> com.amazonaws.DefaultRequest:
    java.lang.String resourcePath -> a
    java.util.Map parameters -> b
    java.util.Map headers -> c
    java.net.URI endpoint -> d
    java.lang.String serviceName -> e
    com.amazonaws.AmazonWebServiceRequest originalRequest -> f
    com.amazonaws.http.HttpMethodName httpMethod -> g
    java.io.InputStream content -> h
    com.amazonaws.AmazonWebServiceRequest getOriginalRequest() -> getOriginalRequest
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    java.util.Map getHeaders() -> getHeaders
    void setResourcePath(java.lang.String) -> setResourcePath
    java.lang.String getResourcePath() -> getResourcePath
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    java.util.Map getParameters() -> getParameters
    com.amazonaws.Request withParameter(java.lang.String,java.lang.String) -> withParameter
    com.amazonaws.http.HttpMethodName getHttpMethod() -> getHttpMethod
    void setHttpMethod(com.amazonaws.http.HttpMethodName) -> setHttpMethod
    void setEndpoint(java.net.URI) -> setEndpoint
    java.net.URI getEndpoint() -> getEndpoint
    java.lang.String getServiceName() -> getServiceName
    java.io.InputStream getContent() -> getContent
    void setContent(java.io.InputStream) -> setContent
    void setHeaders(java.util.Map) -> setHeaders
    void setParameters(java.util.Map) -> setParameters
    java.lang.String toString() -> toString
com.amazonaws.HttpMethod -> com.amazonaws.HttpMethod:
    com.amazonaws.HttpMethod GET -> GET
    com.amazonaws.HttpMethod POST -> POST
    com.amazonaws.HttpMethod PUT -> PUT
    com.amazonaws.HttpMethod DELETE -> DELETE
    com.amazonaws.HttpMethod HEAD -> HEAD
    com.amazonaws.HttpMethod[] $VALUES -> a
    com.amazonaws.HttpMethod[] values() -> values
    com.amazonaws.HttpMethod valueOf(java.lang.String) -> valueOf
com.amazonaws.Protocol -> com.amazonaws.Protocol:
    com.amazonaws.Protocol HTTP -> HTTP
    com.amazonaws.Protocol HTTPS -> HTTPS
    java.lang.String protocol -> a
    com.amazonaws.Protocol[] $VALUES -> b
    com.amazonaws.Protocol[] values() -> values
    com.amazonaws.Protocol valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.amazonaws.Request -> com.amazonaws.Request:
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    java.util.Map getHeaders() -> getHeaders
    void setHeaders(java.util.Map) -> setHeaders
    void setResourcePath(java.lang.String) -> setResourcePath
    java.lang.String getResourcePath() -> getResourcePath
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    com.amazonaws.Request withParameter(java.lang.String,java.lang.String) -> withParameter
    java.util.Map getParameters() -> getParameters
    void setParameters(java.util.Map) -> setParameters
    java.net.URI getEndpoint() -> getEndpoint
    void setEndpoint(java.net.URI) -> setEndpoint
    com.amazonaws.http.HttpMethodName getHttpMethod() -> getHttpMethod
    void setHttpMethod(com.amazonaws.http.HttpMethodName) -> setHttpMethod
    java.io.InputStream getContent() -> getContent
    void setContent(java.io.InputStream) -> setContent
    java.lang.String getServiceName() -> getServiceName
    com.amazonaws.AmazonWebServiceRequest getOriginalRequest() -> getOriginalRequest
com.amazonaws.RequestClientOptions -> com.amazonaws.RequestClientOptions:
    java.lang.String clientMarker -> a
    java.lang.String getClientMarker() -> getClientMarker
    void addClientMarker(java.lang.String) -> addClientMarker
com.amazonaws.ResponseMetadata -> com.amazonaws.ResponseMetadata:
    java.lang.String AWS_REQUEST_ID -> AWS_REQUEST_ID
    java.util.Map metadata -> a
    java.lang.String getRequestId() -> getRequestId
    java.lang.String toString() -> toString
com.amazonaws.auth.AWS3Signer -> com.amazonaws.auth.AWS3Signer:
    java.lang.String AUTHORIZATION_HEADER -> AUTHORIZATION_HEADER
    java.lang.String NONCE_HEADER -> NONCE_HEADER
    java.lang.String HTTP_SCHEME -> HTTP_SCHEME
    java.lang.String HTTPS_SCHEME -> HTTPS_SCHEME
    java.lang.String overriddenDate -> overriddenDate
    com.amazonaws.util.DateUtils dateUtils -> dateUtils
    org.apache.commons.logging.Log log -> log
    void sign(com.amazonaws.Request,com.amazonaws.auth.AWSCredentials) -> sign
    java.lang.String getRequestPayload(com.amazonaws.Request) -> getRequestPayload
    java.lang.String getSignedHeadersComponent(com.amazonaws.Request) -> getSignedHeadersComponent
    byte[] hash(java.lang.String) -> hash
    java.util.List getHeadersForStringToSign(com.amazonaws.Request) -> getHeadersForStringToSign
    void overrideDate(java.lang.String) -> overrideDate
    java.lang.String getCanonicalizedHeadersForStringToSign(com.amazonaws.Request) -> getCanonicalizedHeadersForStringToSign
    boolean isHttpsRequest(com.amazonaws.Request) -> isHttpsRequest
    void addSessionCredentials(com.amazonaws.Request,com.amazonaws.auth.AWSSessionCredentials) -> addSessionCredentials
com.amazonaws.auth.AWSCredentials -> com.amazonaws.auth.AWSCredentials:
    java.lang.String getAWSAccessKeyId() -> getAWSAccessKeyId
    java.lang.String getAWSSecretKey() -> getAWSSecretKey
com.amazonaws.auth.AWSCredentialsProvider -> com.amazonaws.auth.AWSCredentialsProvider:
    com.amazonaws.auth.AWSCredentials getCredentials() -> getCredentials
    void refresh() -> refresh
com.amazonaws.auth.AWSRefreshableSessionCredentials -> com.amazonaws.auth.AWSRefreshableSessionCredentials:
    void refreshCredentials() -> refreshCredentials
com.amazonaws.auth.AWSSessionCredentials -> com.amazonaws.auth.AWSSessionCredentials:
    java.lang.String getSessionToken() -> getSessionToken
com.amazonaws.auth.AbstractAWSSigner -> com.amazonaws.auth.AbstractAWSSigner:
    java.lang.String DEFAULT_ENCODING -> DEFAULT_ENCODING
    java.lang.String sign(java.lang.String,java.lang.String,com.amazonaws.auth.SigningAlgorithm) -> sign
    java.lang.String sign(byte[],java.lang.String,com.amazonaws.auth.SigningAlgorithm) -> sign
    java.lang.String getCanonicalizedQueryString(java.util.Map) -> getCanonicalizedQueryString
    java.lang.String getCanonicalizedResourcePath(java.net.URI) -> getCanonicalizedResourcePath
    java.lang.String getCanonicalizedEndpoint(java.net.URI) -> getCanonicalizedEndpoint
    com.amazonaws.auth.AWSCredentials sanitizeCredentials(com.amazonaws.auth.AWSCredentials) -> sanitizeCredentials
    void addSessionCredentials(com.amazonaws.Request,com.amazonaws.auth.AWSSessionCredentials) -> addSessionCredentials
com.amazonaws.auth.BasicAWSCredentials -> com.amazonaws.auth.BasicAWSCredentials:
    java.lang.String accessKey -> accessKey
    java.lang.String secretKey -> secretKey
    java.lang.String getAWSAccessKeyId() -> getAWSAccessKeyId
    java.lang.String getAWSSecretKey() -> getAWSSecretKey
com.amazonaws.auth.BasicSessionCredentials -> com.amazonaws.auth.BasicSessionCredentials:
    java.lang.String awsAccessKey -> awsAccessKey
    java.lang.String awsSecretKey -> awsSecretKey
    java.lang.String sessionToken -> sessionToken
    java.lang.String getAWSAccessKeyId() -> getAWSAccessKeyId
    java.lang.String getAWSSecretKey() -> getAWSSecretKey
    java.lang.String getSessionToken() -> getSessionToken
com.amazonaws.auth.PropertiesCredentials -> com.amazonaws.auth.PropertiesCredentials:
    java.lang.String accessKey -> accessKey
    java.lang.String secretAccessKey -> secretAccessKey
    java.lang.String getAWSAccessKeyId() -> getAWSAccessKeyId
    java.lang.String getAWSSecretKey() -> getAWSSecretKey
com.amazonaws.auth.QueryStringSigner -> com.amazonaws.auth.QueryStringSigner:
    void sign(com.amazonaws.Request,com.amazonaws.auth.AWSCredentials) -> sign
    void sign(com.amazonaws.Request,com.amazonaws.auth.SignatureVersion,com.amazonaws.auth.SigningAlgorithm,com.amazonaws.auth.AWSCredentials) -> sign
    java.lang.String calculateStringToSignV1(java.util.Map) -> calculateStringToSignV1
    java.lang.String calculateStringToSignV2(java.net.URI,java.util.Map) -> calculateStringToSignV2
    java.lang.String getFormattedTimestamp() -> getFormattedTimestamp
    void addSessionCredentials(com.amazonaws.Request,com.amazonaws.auth.AWSSessionCredentials) -> addSessionCredentials
com.amazonaws.auth.RenewableAWSSessionCredentials -> com.amazonaws.auth.RenewableAWSSessionCredentials:
    com.amazonaws.auth.AWSSessionCredentials getImmutableCredentials() -> getImmutableCredentials
com.amazonaws.auth.SignatureVersion -> com.amazonaws.auth.SignatureVersion:
    com.amazonaws.auth.SignatureVersion V1 -> V1
    com.amazonaws.auth.SignatureVersion V2 -> V2
    java.lang.String value -> value
    com.amazonaws.auth.SignatureVersion[] $VALUES -> $VALUES
    com.amazonaws.auth.SignatureVersion[] values() -> values
    com.amazonaws.auth.SignatureVersion valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.amazonaws.auth.Signer -> com.amazonaws.auth.Signer:
    void sign(com.amazonaws.Request,com.amazonaws.auth.AWSCredentials) -> sign
com.amazonaws.auth.SigningAlgorithm -> com.amazonaws.auth.SigningAlgorithm:
    com.amazonaws.auth.SigningAlgorithm HmacSHA1 -> HmacSHA1
    com.amazonaws.auth.SigningAlgorithm HmacSHA256 -> HmacSHA256
    com.amazonaws.auth.SigningAlgorithm[] $VALUES -> $VALUES
    com.amazonaws.auth.SigningAlgorithm[] values() -> values
    com.amazonaws.auth.SigningAlgorithm valueOf(java.lang.String) -> valueOf
com.amazonaws.auth.policy.Action -> com.amazonaws.auth.policy.Action:
    java.lang.String getActionName() -> getActionName
com.amazonaws.auth.policy.Condition -> com.amazonaws.auth.policy.Condition:
    java.lang.String type -> a
    java.lang.String conditionKey -> b
    java.util.List values -> c
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getConditionKey() -> getConditionKey
    void setConditionKey(java.lang.String) -> setConditionKey
    java.util.List getValues() -> getValues
    void setValues(java.util.List) -> setValues
    com.amazonaws.auth.policy.Condition withType(java.lang.String) -> withType
    com.amazonaws.auth.policy.Condition withConditionKey(java.lang.String) -> withConditionKey
    com.amazonaws.auth.policy.Condition withValues(java.lang.String[]) -> withValues
    com.amazonaws.auth.policy.Condition withValues(java.util.List) -> withValues
com.amazonaws.auth.policy.Policy -> com.amazonaws.auth.policy.Policy:
    java.lang.String id -> a
    java.lang.String version -> b
    java.util.List statements -> c
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.auth.policy.Policy withId(java.lang.String) -> withId
    java.lang.String getVersion() -> getVersion
    java.util.Collection getStatements() -> getStatements
    void setStatements(java.util.Collection) -> setStatements
    com.amazonaws.auth.policy.Policy withStatements(com.amazonaws.auth.policy.Statement[]) -> withStatements
    java.lang.String toJson() -> toJson
    void assignUniqueStatementIds() -> a
com.amazonaws.auth.policy.Principal -> com.amazonaws.auth.policy.Principal:
    com.amazonaws.auth.policy.Principal AllUsers -> AllUsers
    java.lang.String id -> a
    java.lang.String getProvider() -> getProvider
    java.lang.String getId() -> getId
com.amazonaws.auth.policy.Resource -> com.amazonaws.auth.policy.Resource:
    java.lang.String resource -> a
    java.lang.String getId() -> getId
com.amazonaws.auth.policy.Statement -> com.amazonaws.auth.policy.Statement:
    java.lang.String id -> a
    com.amazonaws.auth.policy.Statement$Effect effect -> b
    java.util.List principals -> c
    java.util.List actions -> d
    java.util.List resources -> e
    java.util.List conditions -> f
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.auth.policy.Statement withId(java.lang.String) -> withId
    com.amazonaws.auth.policy.Statement$Effect getEffect() -> getEffect
    void setEffect(com.amazonaws.auth.policy.Statement$Effect) -> setEffect
    java.util.List getActions() -> getActions
    void setActions(java.util.Collection) -> setActions
    com.amazonaws.auth.policy.Statement withActions(com.amazonaws.auth.policy.Action[]) -> withActions
    java.util.List getResources() -> getResources
    void setResources(java.util.Collection) -> setResources
    com.amazonaws.auth.policy.Statement withResources(com.amazonaws.auth.policy.Resource[]) -> withResources
    java.util.List getConditions() -> getConditions
    void setConditions(java.util.List) -> setConditions
    com.amazonaws.auth.policy.Statement withConditions(com.amazonaws.auth.policy.Condition[]) -> withConditions
    java.util.List getPrincipals() -> getPrincipals
    void setPrincipals(java.util.Collection) -> setPrincipals
    com.amazonaws.auth.policy.Statement withPrincipals(com.amazonaws.auth.policy.Principal[]) -> withPrincipals
com.amazonaws.auth.policy.Statement$Effect -> com.amazonaws.auth.policy.Statement$Effect:
    com.amazonaws.auth.policy.Statement$Effect Allow -> Allow
    com.amazonaws.auth.policy.Statement$Effect Deny -> Deny
    com.amazonaws.auth.policy.Statement$Effect[] $VALUES -> a
    com.amazonaws.auth.policy.Statement$Effect[] values() -> values
    com.amazonaws.auth.policy.Statement$Effect valueOf(java.lang.String) -> valueOf
com.amazonaws.auth.policy.actions.S3Actions -> com.amazonaws.auth.policy.actions.S3Actions:
    com.amazonaws.auth.policy.actions.S3Actions AllS3Actions -> AllS3Actions
    com.amazonaws.auth.policy.actions.S3Actions GetObject -> GetObject
    com.amazonaws.auth.policy.actions.S3Actions GetObjectVersion -> GetObjectVersion
    com.amazonaws.auth.policy.actions.S3Actions PutObject -> PutObject
    com.amazonaws.auth.policy.actions.S3Actions GetObjectAcl -> GetObjectAcl
    com.amazonaws.auth.policy.actions.S3Actions GetObjectVersionAcl -> GetObjectVersionAcl
    com.amazonaws.auth.policy.actions.S3Actions SetObjectAcl -> SetObjectAcl
    com.amazonaws.auth.policy.actions.S3Actions SetObjectVersionAcl -> SetObjectVersionAcl
    com.amazonaws.auth.policy.actions.S3Actions DeleteObject -> DeleteObject
    com.amazonaws.auth.policy.actions.S3Actions DeleteObjectVersion -> DeleteObjectVersion
    com.amazonaws.auth.policy.actions.S3Actions CreateBucket -> CreateBucket
    com.amazonaws.auth.policy.actions.S3Actions DeleteBucket -> DeleteBucket
    com.amazonaws.auth.policy.actions.S3Actions ListObjects -> ListObjects
    com.amazonaws.auth.policy.actions.S3Actions ListObjectVersions -> ListObjectVersions
    com.amazonaws.auth.policy.actions.S3Actions ListBuckets -> ListBuckets
    com.amazonaws.auth.policy.actions.S3Actions GetBucketAcl -> GetBucketAcl
    com.amazonaws.auth.policy.actions.S3Actions SetBucketAcl -> SetBucketAcl
    com.amazonaws.auth.policy.actions.S3Actions GetBucketVersioningConfiguration -> GetBucketVersioningConfiguration
    com.amazonaws.auth.policy.actions.S3Actions SetBucketVersioningConfiguration -> SetBucketVersioningConfiguration
    com.amazonaws.auth.policy.actions.S3Actions GetBucketRequesterPays -> GetBucketRequesterPays
    com.amazonaws.auth.policy.actions.S3Actions SetBucketRequesterPays -> SetBucketRequesterPays
    com.amazonaws.auth.policy.actions.S3Actions GetBucketLocation -> GetBucketLocation
    com.amazonaws.auth.policy.actions.S3Actions GetBucketPolicy -> GetBucketPolicy
    com.amazonaws.auth.policy.actions.S3Actions SetBucketPolicy -> SetBucketPolicy
    com.amazonaws.auth.policy.actions.S3Actions GetBucketNotificationConfiguration -> GetBucketNotificationConfiguration
    com.amazonaws.auth.policy.actions.S3Actions SetBucketNotificationConfiguration -> SetBucketNotificationConfiguration
    java.lang.String action -> a
    com.amazonaws.auth.policy.actions.S3Actions[] $VALUES -> b
    com.amazonaws.auth.policy.actions.S3Actions[] values() -> values
    com.amazonaws.auth.policy.actions.S3Actions valueOf(java.lang.String) -> valueOf
    java.lang.String getActionName() -> getActionName
com.amazonaws.auth.policy.actions.SNSActions -> com.amazonaws.auth.policy.actions.SNSActions:
    com.amazonaws.auth.policy.actions.SNSActions AddPermission -> AddPermission
    com.amazonaws.auth.policy.actions.SNSActions DeleteTopic -> DeleteTopic
    com.amazonaws.auth.policy.actions.SNSActions GetTopicAttributes -> GetTopicAttributes
    com.amazonaws.auth.policy.actions.SNSActions ListSubscriptionsByTopic -> ListSubscriptionsByTopic
    com.amazonaws.auth.policy.actions.SNSActions Publish -> Publish
    com.amazonaws.auth.policy.actions.SNSActions RemovePermission -> RemovePermission
    com.amazonaws.auth.policy.actions.SNSActions SetTopicAttributes -> SetTopicAttributes
    com.amazonaws.auth.policy.actions.SNSActions Subscribe -> Subscribe
    java.lang.String action -> a
    com.amazonaws.auth.policy.actions.SNSActions[] $VALUES -> b
    com.amazonaws.auth.policy.actions.SNSActions[] values() -> values
    com.amazonaws.auth.policy.actions.SNSActions valueOf(java.lang.String) -> valueOf
    java.lang.String getActionName() -> getActionName
com.amazonaws.auth.policy.actions.SQSActions -> com.amazonaws.auth.policy.actions.SQSActions:
    com.amazonaws.auth.policy.actions.SQSActions AllSqsActions -> AllSqsActions
    com.amazonaws.auth.policy.actions.SQSActions AddPermission -> AddPermission
    com.amazonaws.auth.policy.actions.SQSActions ChangeMessageVisibility -> ChangeMessageVisibility
    com.amazonaws.auth.policy.actions.SQSActions CreateQueue -> CreateQueue
    com.amazonaws.auth.policy.actions.SQSActions DeleteMessage -> DeleteMessage
    com.amazonaws.auth.policy.actions.SQSActions DeleteQueue -> DeleteQueue
    com.amazonaws.auth.policy.actions.SQSActions GetQueueAttributes -> GetQueueAttributes
    com.amazonaws.auth.policy.actions.SQSActions ListQueues -> ListQueues
    com.amazonaws.auth.policy.actions.SQSActions ReceiveMessage -> ReceiveMessage
    com.amazonaws.auth.policy.actions.SQSActions RemovePermission -> RemovePermission
    com.amazonaws.auth.policy.actions.SQSActions SendMessage -> SendMessage
    com.amazonaws.auth.policy.actions.SQSActions SetQueueAttributes -> SetQueueAttributes
    java.lang.String action -> a
    com.amazonaws.auth.policy.actions.SQSActions[] $VALUES -> b
    com.amazonaws.auth.policy.actions.SQSActions[] values() -> values
    com.amazonaws.auth.policy.actions.SQSActions valueOf(java.lang.String) -> valueOf
    java.lang.String getActionName() -> getActionName
com.amazonaws.auth.policy.actions.package-info -> com.amazonaws.auth.policy.actions.package-info:
com.amazonaws.auth.policy.conditions.ArnCondition -> com.amazonaws.auth.policy.conditions.ArnCondition:
com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType -> com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType:
    com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType ArnEquals -> ArnEquals
    com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType ArnLike -> ArnLike
    com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType ArnNotEquals -> ArnNotEquals
    com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType ArnNotLike -> ArnNotLike
    com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType[] $VALUES -> a
    com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType[] values() -> values
    com.amazonaws.auth.policy.conditions.ArnCondition$ArnComparisonType valueOf(java.lang.String) -> valueOf
com.amazonaws.auth.policy.conditions.BooleanCondition -> com.amazonaws.auth.policy.conditions.BooleanCondition:
com.amazonaws.auth.policy.conditions.ConditionFactory -> com.amazonaws.auth.policy.conditions.ConditionFactory:
    java.lang.String CURRENT_TIME_CONDITION_KEY -> CURRENT_TIME_CONDITION_KEY
    java.lang.String SECURE_TRANSPORT_CONDITION_KEY -> SECURE_TRANSPORT_CONDITION_KEY
    java.lang.String SOURCE_IP_CONDITION_KEY -> SOURCE_IP_CONDITION_KEY
    java.lang.String USER_AGENT_CONDITION_KEY -> USER_AGENT_CONDITION_KEY
    java.lang.String EPOCH_TIME_CONDITION_KEY -> EPOCH_TIME_CONDITION_KEY
    java.lang.String REFERER_CONDITION_KEY -> REFERER_CONDITION_KEY
    java.lang.String SOURCE_ARN_CONDITION_KEY -> SOURCE_ARN_CONDITION_KEY
    com.amazonaws.auth.policy.Condition newSourceArnCondition(java.lang.String) -> newSourceArnCondition
    com.amazonaws.auth.policy.Condition newSecureTransportCondition() -> newSecureTransportCondition
    com.amazonaws.auth.policy.Condition newUserAgentCondition(com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType,java.lang.String) -> newUserAgentCondition
    com.amazonaws.auth.policy.Condition newRefererCondition(com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType,java.lang.String) -> newRefererCondition
com.amazonaws.auth.policy.conditions.DateCondition -> com.amazonaws.auth.policy.conditions.DateCondition:
    com.amazonaws.util.DateUtils dateUtils -> d
com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType -> com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType:
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType DateEquals -> DateEquals
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType DateGreaterThan -> DateGreaterThan
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType DateGreaterThanEquals -> DateGreaterThanEquals
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType DateLessThan -> DateLessThan
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType DateLessThanEquals -> DateLessThanEquals
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType DateNotEquals -> DateNotEquals
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType[] $VALUES -> a
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType[] values() -> values
    com.amazonaws.auth.policy.conditions.DateCondition$DateComparisonType valueOf(java.lang.String) -> valueOf
com.amazonaws.auth.policy.conditions.IpAddressCondition -> com.amazonaws.auth.policy.conditions.IpAddressCondition:
com.amazonaws.auth.policy.conditions.IpAddressCondition$IpAddressComparisonType -> com.amazonaws.auth.policy.conditions.IpAddressCondition$IpAddressComparisonType:
    com.amazonaws.auth.policy.conditions.IpAddressCondition$IpAddressComparisonType IpAddress -> IpAddress
    com.amazonaws.auth.policy.conditions.IpAddressCondition$IpAddressComparisonType NotIpAddress -> NotIpAddress
    com.amazonaws.auth.policy.conditions.IpAddressCondition$IpAddressComparisonType[] $VALUES -> a
    com.amazonaws.auth.policy.conditions.IpAddressCondition$IpAddressComparisonType[] values() -> values
    com.amazonaws.auth.policy.conditions.IpAddressCondition$IpAddressComparisonType valueOf(java.lang.String) -> valueOf
com.amazonaws.auth.policy.conditions.NumericCondition -> com.amazonaws.auth.policy.conditions.NumericCondition:
com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType -> com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType:
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType NumericEquals -> NumericEquals
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType NumericGreaterThan -> NumericGreaterThan
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType NumericGreaterThanEquals -> NumericGreaterThanEquals
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType NumericLessThan -> NumericLessThan
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType NumericLessThanEquals -> NumericLessThanEquals
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType NumericNotEquals -> NumericNotEquals
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType[] $VALUES -> a
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType[] values() -> values
    com.amazonaws.auth.policy.conditions.NumericCondition$NumericComparisonType valueOf(java.lang.String) -> valueOf
com.amazonaws.auth.policy.conditions.S3ConditionFactory -> com.amazonaws.auth.policy.conditions.S3ConditionFactory:
    java.lang.String CANNED_ACL_CONDITION_KEY -> CANNED_ACL_CONDITION_KEY
    java.lang.String LOCATION_CONSTRAINT_CONDITION_KEY -> LOCATION_CONSTRAINT_CONDITION_KEY
    java.lang.String PREFIX_CONDITION_KEY -> PREFIX_CONDITION_KEY
    java.lang.String DELIMITER_CONDITION_KEY -> DELIMITER_CONDITION_KEY
    java.lang.String MAX_KEYS_CONDITION_KEY -> MAX_KEYS_CONDITION_KEY
    java.lang.String COPY_SOURCE_CONDITION_KEY -> COPY_SOURCE_CONDITION_KEY
    java.lang.String METADATA_DIRECTIVE_CONDITION_KEY -> METADATA_DIRECTIVE_CONDITION_KEY
    java.lang.String VERSION_ID_CONDITION_KEY -> VERSION_ID_CONDITION_KEY
    com.amazonaws.auth.policy.Condition newCannedACLCondition(com.amazonaws.services.s3.model.CannedAccessControlList) -> newCannedACLCondition
com.amazonaws.auth.policy.conditions.SNSConditionFactory -> com.amazonaws.auth.policy.conditions.SNSConditionFactory:
    java.lang.String ENDPOINT_CONDITION_KEY -> ENDPOINT_CONDITION_KEY
    java.lang.String PROTOCOL_CONDITION_KEY -> PROTOCOL_CONDITION_KEY
    com.amazonaws.auth.policy.Condition newEndpointCondition(java.lang.String) -> newEndpointCondition
    com.amazonaws.auth.policy.Condition newProtocolCondition(java.lang.String) -> newProtocolCondition
com.amazonaws.auth.policy.conditions.StringCondition -> com.amazonaws.auth.policy.conditions.StringCondition:
com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType -> com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType:
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType StringEquals -> StringEquals
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType StringEqualsIgnoreCase -> StringEqualsIgnoreCase
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType StringLike -> StringLike
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType StringNotEquals -> StringNotEquals
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType StringNotEqualsIgnoreCase -> StringNotEqualsIgnoreCase
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType StringNotLike -> StringNotLike
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType[] $VALUES -> a
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType[] values() -> values
    com.amazonaws.auth.policy.conditions.StringCondition$StringComparisonType valueOf(java.lang.String) -> valueOf
com.amazonaws.auth.policy.conditions.package-info -> com.amazonaws.auth.policy.conditions.package-info:
com.amazonaws.auth.policy.internal.JsonPolicyWriter -> com.amazonaws.auth.policy.internal.a:
    java.lang.String writePolicyToString(com.amazonaws.auth.policy.Policy) -> a
    void writePolicy(com.amazonaws.auth.policy.Policy,com.amazonaws.util.json.JSONWriter) -> a
    void writeConditions(com.amazonaws.auth.policy.Statement,com.amazonaws.util.json.JSONWriter) -> a
    java.util.Map sortConditionsByKey(java.util.List) -> a
    void writeResources(com.amazonaws.auth.policy.Statement,com.amazonaws.util.json.JSONWriter) -> b
    void writeActions(com.amazonaws.auth.policy.Statement,com.amazonaws.util.json.JSONWriter) -> c
com.amazonaws.auth.policy.package-info -> com.amazonaws.auth.policy.package-info:
com.amazonaws.auth.policy.resources.S3BucketResource -> com.amazonaws.auth.policy.resources.S3BucketResource:
com.amazonaws.auth.policy.resources.S3ObjectResource -> com.amazonaws.auth.policy.resources.S3ObjectResource:
com.amazonaws.auth.policy.resources.SQSQueueResource -> com.amazonaws.auth.policy.resources.SQSQueueResource:
com.amazonaws.auth.policy.resources.package-info -> com.amazonaws.auth.policy.resources.package-info:
com.amazonaws.handlers.AbstractRequestHandler -> com.amazonaws.handlers.AbstractRequestHandler:
    void beforeRequest(com.amazonaws.Request) -> beforeRequest
    void afterResponse(com.amazonaws.Request,java.lang.Object,com.amazonaws.util.TimingInfo) -> afterResponse
    void afterError(com.amazonaws.Request,java.lang.Exception) -> afterError
com.amazonaws.handlers.HandlerChainFactory -> com.amazonaws.handlers.HandlerChainFactory:
    java.util.List newRequestHandlerChain(java.lang.String) -> newRequestHandlerChain
com.amazonaws.handlers.RequestHandler -> com.amazonaws.handlers.RequestHandler:
    void beforeRequest(com.amazonaws.Request) -> beforeRequest
    void afterResponse(com.amazonaws.Request,java.lang.Object,com.amazonaws.util.TimingInfo) -> afterResponse
    void afterError(com.amazonaws.Request,java.lang.Exception) -> afterError
com.amazonaws.http.AmazonHttpClient -> com.amazonaws.http.AmazonHttpClient:
    org.apache.commons.logging.Log requestLog -> b
    org.apache.commons.logging.Log log -> a
    org.apache.http.client.HttpClient httpClient -> c
    com.amazonaws.ClientConfiguration config -> d
    com.amazonaws.util.ResponseMetadataCache responseMetadataCache -> e
    java.util.Random random -> f
    com.amazonaws.http.HttpRequestFactory httpRequestFactory -> g
    com.amazonaws.http.HttpClientFactory httpClientFactory -> h
    java.lang.String PROFILING_SYSTEM_PROPERTY -> PROFILING_SYSTEM_PROPERTY
    com.amazonaws.ResponseMetadata getResponseMetadataForRequest(com.amazonaws.AmazonWebServiceRequest) -> getResponseMetadataForRequest
    java.lang.Object execute(com.amazonaws.Request,com.amazonaws.http.HttpResponseHandler,com.amazonaws.http.HttpResponseHandler,com.amazonaws.http.ExecutionContext) -> execute
    java.lang.Object executeHelper(com.amazonaws.Request,com.amazonaws.http.HttpResponseHandler,com.amazonaws.http.HttpResponseHandler,com.amazonaws.http.ExecutionContext) -> a
    void shutdown() -> shutdown
    boolean shouldRetry(org.apache.http.client.methods.HttpRequestBase,java.lang.Exception,int) -> a
    java.lang.Object handleResponse(com.amazonaws.Request,com.amazonaws.http.HttpResponseHandler,org.apache.http.client.methods.HttpRequestBase,org.apache.http.HttpResponse,com.amazonaws.http.ExecutionContext) -> a
    com.amazonaws.AmazonServiceException handleErrorResponse(com.amazonaws.Request,com.amazonaws.http.HttpResponseHandler,org.apache.http.client.methods.HttpRequestBase,org.apache.http.HttpResponse) -> a
    com.amazonaws.http.HttpResponse createResponse$6af63dd4(com.amazonaws.Request,org.apache.http.HttpResponse) -> a
    boolean isThrottlingException(com.amazonaws.AmazonServiceException) -> a
    void finalize() -> finalize
com.amazonaws.http.ConnectionManagerFactory -> com.amazonaws.http.ConnectionManagerFactory:
    org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager createThreadSafeClientConnManager(com.amazonaws.ClientConfiguration,org.apache.http.params.HttpParams) -> createThreadSafeClientConnManager
com.amazonaws.http.DefaultErrorResponseHandler -> com.amazonaws.http.DefaultErrorResponseHandler:
    java.util.List unmarshallerList -> a
    com.amazonaws.AmazonServiceException handle(com.amazonaws.http.HttpResponse) -> handle
    boolean needsConnectionLeftOpen() -> needsConnectionLeftOpen
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.http.ExecutionContext -> com.amazonaws.http.ExecutionContext:
    java.util.List requestHandlers -> a
    java.lang.String contextUserAgent -> b
    com.amazonaws.util.TimingInfo timingInfo -> c
    com.amazonaws.auth.Signer signer -> d
    com.amazonaws.auth.AWSCredentials credentials -> e
    java.lang.String getContextUserAgent() -> getContextUserAgent
    void setContextUserAgent(java.lang.String) -> setContextUserAgent
    java.util.List getRequestHandlers() -> getRequestHandlers
    com.amazonaws.util.TimingInfo getTimingInfo() -> getTimingInfo
    void setTimingInfo(com.amazonaws.util.TimingInfo) -> setTimingInfo
    com.amazonaws.auth.Signer getSigner() -> getSigner
    void setSigner(com.amazonaws.auth.Signer) -> setSigner
    com.amazonaws.auth.AWSCredentials getCredentials() -> getCredentials
    void setCredentials(com.amazonaws.auth.AWSCredentials) -> setCredentials
com.amazonaws.http.HttpClientFactory -> com.amazonaws.http.HttpClientFactory:
    org.apache.http.client.HttpClient createHttpClient(com.amazonaws.ClientConfiguration) -> createHttpClient
com.amazonaws.http.HttpClientFactory$1 -> com.amazonaws.http.HttpClientFactory$1:
com.amazonaws.http.HttpClientFactory$TrustingSocketFactory -> com.amazonaws.http.HttpClientFactory$TrustingSocketFactory:
    javax.net.ssl.SSLContext sslcontext -> a
    javax.net.ssl.SSLContext createSSLContext() -> a
    javax.net.ssl.SSLContext getSSLContext() -> b
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
com.amazonaws.http.HttpClientFactory$TrustingX509TrustManager -> com.amazonaws.http.HttpClientFactory$TrustingX509TrustManager:
    java.security.cert.X509Certificate[] X509_CERTIFICATES -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
com.amazonaws.http.HttpMethodName -> com.amazonaws.http.HttpMethodName:
    com.amazonaws.http.HttpMethodName GET -> GET
    com.amazonaws.http.HttpMethodName POST -> POST
    com.amazonaws.http.HttpMethodName PUT -> PUT
    com.amazonaws.http.HttpMethodName DELETE -> DELETE
    com.amazonaws.http.HttpMethodName HEAD -> HEAD
    com.amazonaws.http.HttpMethodName[] $VALUES -> a
    com.amazonaws.http.HttpMethodName[] values() -> values
    com.amazonaws.http.HttpMethodName valueOf(java.lang.String) -> valueOf
com.amazonaws.http.HttpMethodReleaseInputStream -> com.amazonaws.http.HttpMethodReleaseInputStream:
    org.apache.commons.logging.Log log -> a
    java.io.InputStream inputStream -> b
    org.apache.http.HttpEntityEnclosingRequest httpRequest -> c
    boolean alreadyReleased -> d
    boolean underlyingStreamConsumed -> e
    org.apache.http.HttpEntityEnclosingRequest getHttpRequest() -> getHttpRequest
    void releaseConnection() -> a
    int read() -> read
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
    void finalize() -> finalize
com.amazonaws.http.HttpRequest -> com.amazonaws.http.HttpRequest:
    java.util.Map parameters -> a
    java.util.Map headers -> b
    com.amazonaws.http.HttpMethodName methodName -> c
    java.lang.String serviceName -> d
    java.net.URI endpoint -> e
    java.lang.String resourcePath -> f
    java.io.InputStream inputStream -> g
    com.amazonaws.AmazonWebServiceRequest originalRequest -> h
    com.amazonaws.http.HttpMethodName getMethodName() -> getMethodName
    void setServiceName(java.lang.String) -> setServiceName
    java.lang.String getServiceName() -> getServiceName
    java.net.URI getEndpoint() -> getEndpoint
    void setEndpoint(java.net.URI) -> setEndpoint
    java.util.Map getParameters() -> getParameters
    java.util.Map getHeaders() -> getHeaders
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void setParameters(java.util.Map) -> setParameters
    com.amazonaws.http.HttpRequest withParameter(java.lang.String,java.lang.String) -> withParameter
    java.lang.String getResourcePath() -> getResourcePath
    void setResourcePath(java.lang.String) -> setResourcePath
    void setContent(java.io.InputStream) -> setContent
    java.io.InputStream getContent() -> getContent
    void setOriginalRequest(com.amazonaws.AmazonWebServiceRequest) -> setOriginalRequest
    com.amazonaws.AmazonWebServiceRequest getOriginalRequest() -> getOriginalRequest
    java.lang.String toString() -> toString
com.amazonaws.http.HttpRequestFactory -> com.amazonaws.http.HttpRequestFactory:
    org.apache.http.client.methods.HttpRequestBase createHttpRequest(com.amazonaws.Request,com.amazonaws.ClientConfiguration,org.apache.http.HttpEntity,com.amazonaws.http.ExecutionContext) -> a
    void configureHeaders(org.apache.http.client.methods.HttpRequestBase,com.amazonaws.Request,com.amazonaws.http.ExecutionContext,com.amazonaws.ClientConfiguration) -> a
    java.lang.String encodeParameters(com.amazonaws.Request) -> a
    org.apache.http.HttpEntity newStringEntity(java.lang.String) -> a
    org.apache.http.HttpEntity newBufferedHttpEntity(org.apache.http.HttpEntity) -> a
com.amazonaws.http.HttpResponse -> com.amazonaws.http.HttpResponse:
    com.amazonaws.Request request -> a
    java.lang.String statusText -> b
    int statusCode -> c
    java.io.InputStream content -> d
    java.util.Map headers -> e
    com.amazonaws.Request getRequest() -> getRequest
    java.util.Map getHeaders() -> getHeaders
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setContent(java.io.InputStream) -> setContent
    java.io.InputStream getContent() -> getContent
    void setStatusText(java.lang.String) -> setStatusText
    java.lang.String getStatusText() -> getStatusText
    void setStatusCode(int) -> setStatusCode
    int getStatusCode() -> getStatusCode
com.amazonaws.http.HttpResponseHandler -> com.amazonaws.http.HttpResponseHandler:
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
    boolean needsConnectionLeftOpen() -> needsConnectionLeftOpen
com.amazonaws.http.JsonErrorResponseHandler -> com.amazonaws.http.JsonErrorResponseHandler:
    com.amazonaws.AmazonServiceException handle(com.amazonaws.http.HttpResponse) -> handle
    boolean needsConnectionLeftOpen() -> needsConnectionLeftOpen
    java.lang.String readStreamContents(java.io.InputStream) -> a
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.http.JsonResponseHandler -> com.amazonaws.http.JsonResponseHandler:
    com.amazonaws.transform.Unmarshaller responseUnmarshaller -> a
    org.apache.commons.logging.Log log -> b
    org.codehaus.jackson.JsonFactory jsonFactory -> c
    com.amazonaws.AmazonWebServiceResponse handle(com.amazonaws.http.HttpResponse) -> handle
    boolean needsConnectionLeftOpen() -> needsConnectionLeftOpen
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.http.RepeatableInputStreamRequestEntity -> com.amazonaws.http.RepeatableInputStreamRequestEntity:
    boolean firstAttempt -> a
    org.apache.http.entity.InputStreamEntity inputStreamRequestEntity -> b
    java.io.InputStream content -> c
    org.apache.commons.logging.Log log -> d
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
com.amazonaws.http.StaxResponseHandler -> com.amazonaws.http.StaxResponseHandler:
    com.amazonaws.transform.Unmarshaller responseUnmarshaller -> a
    org.apache.commons.logging.Log log -> b
    com.amazonaws.javax.xml.stream.XMLInputFactory xmlInputFactory -> c
    com.amazonaws.AmazonWebServiceResponse handle(com.amazonaws.http.HttpResponse) -> handle
    void registerAdditionalMetadataExpressions(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    boolean needsConnectionLeftOpen() -> needsConnectionLeftOpen
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.internal.StaticCredentialsProvider -> com.amazonaws.internal.a:
    com.amazonaws.auth.AWSCredentials credentials -> a
    com.amazonaws.auth.AWSCredentials getCredentials() -> getCredentials
    void refresh() -> refresh
com.amazonaws.javax.xml.namespace.NamespaceContext -> com.amazonaws.javax.xml.namespace.a:
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    java.util.Iterator getPrefixes(java.lang.String) -> getPrefixes
com.amazonaws.javax.xml.namespace.QName -> com.amazonaws.javax.xml.namespace.c:
    boolean useDefaultSerialVersionUID -> a
    java.lang.String namespaceURI -> b
    java.lang.String localPart -> c
    java.lang.String prefix -> d
    java.lang.String getNamespaceURI() -> a
    java.lang.String getLocalPart() -> b
    java.lang.String getPrefix() -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.namespace.QName$1 -> com.amazonaws.javax.xml.namespace.b:
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.BufferManager -> com.amazonaws.javax.xml.stream.BufferManager:
    boolean endOfStream -> a
    boolean DEBUG -> b
    com.amazonaws.javax.xml.stream.BufferManager getBufferManager(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> getBufferManager
    boolean getMore() -> getMore
    java.nio.CharBuffer getCharBuffer() -> getCharBuffer
    boolean arrangeCapacity(int) -> arrangeCapacity
    boolean endOfStream() -> endOfStream
    void close() -> close
    void setEncoding(java.lang.String) -> setEncoding
    java.lang.Object[] getEncodingName(byte[],int) -> a
    void main(java.lang.String[]) -> main
com.amazonaws.javax.xml.stream.Constants -> com.amazonaws.javax.xml.stream.Constants:
    java.lang.String NS_XMLSCHEMA -> NS_XMLSCHEMA
    java.lang.String NS_DTD -> NS_DTD
    java.lang.String ESCAPE_CHARACTERS -> ESCAPE_CHARACTERS
    java.lang.String STAX_PROPERTIES -> STAX_PROPERTIES
    java.lang.String STAX_ENTITY_RESOLVER_PROPERTY -> STAX_ENTITY_RESOLVER_PROPERTY
    java.lang.String STAX_REPORT_CDATA_EVENT -> STAX_REPORT_CDATA_EVENT
    java.lang.String IMPLEMENTATION_NAME -> IMPLEMENTATION_NAME
    java.lang.String ZEPHYR_PROPERTY_PREFIX -> ZEPHYR_PROPERTY_PREFIX
    java.lang.String REUSE_INSTANCE -> REUSE_INSTANCE
    java.lang.String OUTPUTSTREAM -> OUTPUTSTREAM
    java.lang.String IGNORE_EXTERNAL_DTD -> IGNORE_EXTERNAL_DTD
    java.lang.String SAX_FEATURE_PREFIX -> SAX_FEATURE_PREFIX
    java.lang.String NAMESPACES_FEATURE -> NAMESPACES_FEATURE
    java.lang.String NAMESPACE_PREFIXES_FEATURE -> NAMESPACE_PREFIXES_FEATURE
    java.lang.String STRING_INTERNING_FEATURE -> STRING_INTERNING_FEATURE
    java.lang.String VALIDATION_FEATURE -> VALIDATION_FEATURE
    java.lang.String EXTERNAL_GENERAL_ENTITIES_FEATURE -> EXTERNAL_GENERAL_ENTITIES_FEATURE
    java.lang.String EXTERNAL_PARAMETER_ENTITIES_FEATURE -> EXTERNAL_PARAMETER_ENTITIES_FEATURE
    java.lang.String ALLOW_DTD_EVENTS_AFTER_ENDDTD_FEATURE -> ALLOW_DTD_EVENTS_AFTER_ENDDTD_FEATURE
    java.lang.String SAX_PROPERTY_PREFIX -> SAX_PROPERTY_PREFIX
    java.lang.String DECLARATION_HANDLER_PROPERTY -> DECLARATION_HANDLER_PROPERTY
    java.lang.String LEXICAL_HANDLER_PROPERTY -> LEXICAL_HANDLER_PROPERTY
    java.lang.String DOM_NODE_PROPERTY -> DOM_NODE_PROPERTY
    java.lang.String XML_STRING_PROPERTY -> XML_STRING_PROPERTY
    java.lang.String JAXP_PROPERTY_PREFIX -> JAXP_PROPERTY_PREFIX
    java.lang.String SCHEMA_SOURCE -> SCHEMA_SOURCE
    java.lang.String SCHEMA_LANGUAGE -> SCHEMA_LANGUAGE
    java.lang.String INCLUDE_COMMENTS_FEATURE -> INCLUDE_COMMENTS_FEATURE
    java.lang.String CREATE_CDATA_NODES_FEATURE -> CREATE_CDATA_NODES_FEATURE
    java.lang.String LOAD_AS_INFOSET -> LOAD_AS_INFOSET
    java.lang.String DOM_CANONICAL_FORM -> DOM_CANONICAL_FORM
    java.lang.String DOM_CDATA_SECTIONS -> DOM_CDATA_SECTIONS
    java.lang.String DOM_COMMENTS -> DOM_COMMENTS
    java.lang.String DOM_CHARSET_OVERRIDES_XML_ENCODING -> DOM_CHARSET_OVERRIDES_XML_ENCODING
    java.lang.String DOM_DATATYPE_NORMALIZATION -> DOM_DATATYPE_NORMALIZATION
    java.lang.String DOM_ENTITIES -> DOM_ENTITIES
    java.lang.String DOM_INFOSET -> DOM_INFOSET
    java.lang.String DOM_NAMESPACES -> DOM_NAMESPACES
    java.lang.String DOM_NAMESPACE_DECLARATIONS -> DOM_NAMESPACE_DECLARATIONS
    java.lang.String DOM_SUPPORTED_MEDIATYPES_ONLY -> DOM_SUPPORTED_MEDIATYPES_ONLY
    java.lang.String DOM_VALIDATE_IF_SCHEMA -> DOM_VALIDATE_IF_SCHEMA
    java.lang.String DOM_VALIDATE -> DOM_VALIDATE
    java.lang.String DOM_WHITESPACE_IN_ELEMENT_CONTENT -> DOM_WHITESPACE_IN_ELEMENT_CONTENT
    java.lang.String DOM_DISCARD_DEFAULT_CONTENT -> DOM_DISCARD_DEFAULT_CONTENT
    java.lang.String DOM_NORMALIZE_CHARACTERS -> DOM_NORMALIZE_CHARACTERS
    java.lang.String DOM_CHECK_CHAR_NORMALIZATION -> DOM_CHECK_CHAR_NORMALIZATION
    java.lang.String DOM_WELLFORMED -> DOM_WELLFORMED
    java.lang.String DOM_SPLIT_CDATA -> DOM_SPLIT_CDATA
    java.lang.String DOM_IGNORE_CHAR_DENORMALIZATION -> DOM_IGNORE_CHAR_DENORMALIZATION
    java.lang.String DOM_FORMAT_PRETTY_PRINT -> DOM_FORMAT_PRETTY_PRINT
    java.lang.String DOM_XMLDECL -> DOM_XMLDECL
    java.lang.String DOM_UNKNOWNCHARS -> DOM_UNKNOWNCHARS
    java.lang.String DOM_CERTIFIED -> DOM_CERTIFIED
    java.lang.String DOM_ENTITY_RESOLVER -> DOM_ENTITY_RESOLVER
    java.lang.String DOM_ERROR_HANDLER -> DOM_ERROR_HANDLER
    java.lang.String DOM_SCHEMA_TYPE -> DOM_SCHEMA_TYPE
    java.lang.String DOM_SCHEMA_LOCATION -> DOM_SCHEMA_LOCATION
    java.lang.String DOM_PSVI -> DOM_PSVI
    java.lang.String XERCES_FEATURE_PREFIX -> XERCES_FEATURE_PREFIX
    java.lang.String SCHEMA_VALIDATION_FEATURE -> SCHEMA_VALIDATION_FEATURE
    java.lang.String SCHEMA_NORMALIZED_VALUE -> SCHEMA_NORMALIZED_VALUE
    java.lang.String SCHEMA_ELEMENT_DEFAULT -> SCHEMA_ELEMENT_DEFAULT
    java.lang.String SCHEMA_FULL_CHECKING -> SCHEMA_FULL_CHECKING
    java.lang.String SCHEMA_AUGMENT_PSVI -> SCHEMA_AUGMENT_PSVI
    java.lang.String DYNAMIC_VALIDATION_FEATURE -> DYNAMIC_VALIDATION_FEATURE
    java.lang.String WARN_ON_DUPLICATE_ATTDEF_FEATURE -> WARN_ON_DUPLICATE_ATTDEF_FEATURE
    java.lang.String WARN_ON_UNDECLARED_ELEMDEF_FEATURE -> WARN_ON_UNDECLARED_ELEMDEF_FEATURE
    java.lang.String WARN_ON_DUPLICATE_ENTITYDEF_FEATURE -> WARN_ON_DUPLICATE_ENTITYDEF_FEATURE
    java.lang.String ALLOW_JAVA_ENCODINGS_FEATURE -> ALLOW_JAVA_ENCODINGS_FEATURE
    java.lang.String DISALLOW_DOCTYPE_DECL_FEATURE -> DISALLOW_DOCTYPE_DECL_FEATURE
    java.lang.String CONTINUE_AFTER_FATAL_ERROR_FEATURE -> CONTINUE_AFTER_FATAL_ERROR_FEATURE
    java.lang.String LOAD_DTD_GRAMMAR_FEATURE -> LOAD_DTD_GRAMMAR_FEATURE
    java.lang.String LOAD_EXTERNAL_DTD_FEATURE -> LOAD_EXTERNAL_DTD_FEATURE
    java.lang.String DEFER_NODE_EXPANSION_FEATURE -> DEFER_NODE_EXPANSION_FEATURE
    java.lang.String CREATE_ENTITY_REF_NODES_FEATURE -> CREATE_ENTITY_REF_NODES_FEATURE
    java.lang.String INCLUDE_IGNORABLE_WHITESPACE -> INCLUDE_IGNORABLE_WHITESPACE
    java.lang.String DEFAULT_ATTRIBUTE_VALUES_FEATURE -> DEFAULT_ATTRIBUTE_VALUES_FEATURE
    java.lang.String VALIDATE_CONTENT_MODELS_FEATURE -> VALIDATE_CONTENT_MODELS_FEATURE
    java.lang.String VALIDATE_DATATYPES_FEATURE -> VALIDATE_DATATYPES_FEATURE
    java.lang.String NOTIFY_CHAR_REFS_FEATURE -> NOTIFY_CHAR_REFS_FEATURE
    java.lang.String NOTIFY_BUILTIN_REFS_FEATURE -> NOTIFY_BUILTIN_REFS_FEATURE
    java.lang.String STANDARD_URI_CONFORMANT_FEATURE -> STANDARD_URI_CONFORMANT_FEATURE
    java.lang.String XERCES_PROPERTY_PREFIX -> XERCES_PROPERTY_PREFIX
    java.lang.String CURRENT_ELEMENT_NODE_PROPERTY -> CURRENT_ELEMENT_NODE_PROPERTY
    java.lang.String DOCUMENT_CLASS_NAME_PROPERTY -> DOCUMENT_CLASS_NAME_PROPERTY
    java.lang.String SYMBOL_TABLE_PROPERTY -> SYMBOL_TABLE_PROPERTY
    java.lang.String ERROR_REPORTER_PROPERTY -> ERROR_REPORTER_PROPERTY
    java.lang.String ERROR_HANDLER_PROPERTY -> ERROR_HANDLER_PROPERTY
    java.lang.String XINCLUDE_HANDLER_PROPERTY -> XINCLUDE_HANDLER_PROPERTY
    java.lang.String ENTITY_MANAGER_PROPERTY -> ENTITY_MANAGER_PROPERTY
    java.lang.String BUFFER_SIZE_PROPERTY -> BUFFER_SIZE_PROPERTY
    java.lang.String SECURITY_MANAGER_PROPERTY -> SECURITY_MANAGER_PROPERTY
    java.lang.String ENTITY_RESOLVER_PROPERTY -> ENTITY_RESOLVER_PROPERTY
    java.lang.String XMLGRAMMAR_POOL_PROPERTY -> XMLGRAMMAR_POOL_PROPERTY
    java.lang.String DATATYPE_VALIDATOR_FACTORY_PROPERTY -> DATATYPE_VALIDATOR_FACTORY_PROPERTY
    java.lang.String DOCUMENT_SCANNER_PROPERTY -> DOCUMENT_SCANNER_PROPERTY
    java.lang.String DTD_SCANNER_PROPERTY -> DTD_SCANNER_PROPERTY
    java.lang.String DTD_PROCESSOR_PROPERTY -> DTD_PROCESSOR_PROPERTY
    java.lang.String VALIDATOR_PROPERTY -> VALIDATOR_PROPERTY
    java.lang.String DTD_VALIDATOR_PROPERTY -> DTD_VALIDATOR_PROPERTY
    java.lang.String SCHEMA_VALIDATOR_PROPERTY -> SCHEMA_VALIDATOR_PROPERTY
    java.lang.String SCHEMA_LOCATION -> SCHEMA_LOCATION
    java.lang.String SCHEMA_NONS_LOCATION -> SCHEMA_NONS_LOCATION
    java.lang.String NAMESPACE_BINDER_PROPERTY -> NAMESPACE_BINDER_PROPERTY
    java.lang.String NAMESPACE_CONTEXT_PROPERTY -> NAMESPACE_CONTEXT_PROPERTY
    java.lang.String VALIDATION_MANAGER_PROPERTY -> VALIDATION_MANAGER_PROPERTY
    java.lang.String ELEMENT_PSVI -> ELEMENT_PSVI
    java.lang.String ATTRIBUTE_PSVI -> ATTRIBUTE_PSVI
    short XML_VERSION_1_0 -> XML_VERSION_1_0
    short XML_VERSION_1_1 -> XML_VERSION_1_1
    java.lang.String[] fgSAXFeatures -> a
    java.lang.String[] fgSAXProperties -> b
    java.lang.String[] fgXercesFeatures -> c
    java.lang.String[] fgXercesProperties -> d
    java.lang.String[] zephyrFeatures -> e
    java.lang.String[] zephyrProperties -> f
    java.util.Enumeration fgEmptyEnumeration -> g
    java.util.Enumeration getZephyrFeatures() -> getZephyrFeatures
    java.util.Enumeration getZephyrProperties() -> getZephyrProperties
    java.util.Enumeration getSAXFeatures() -> getSAXFeatures
    java.util.Enumeration getSAXProperties() -> getSAXProperties
    java.util.Enumeration getXercesFeatures() -> getXercesFeatures
    java.util.Enumeration getXercesProperties() -> getXercesProperties
    void main(java.lang.String[]) -> main
    void print(java.lang.String,java.lang.String,java.lang.Object[]) -> a
com.amazonaws.javax.xml.stream.Constants$ArrayEnumeration -> com.amazonaws.javax.xml.stream.Constants$ArrayEnumeration:
    java.lang.Object[] array -> a
    int index -> b
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
com.amazonaws.javax.xml.stream.Entity -> com.amazonaws.javax.xml.stream.Entity:
    java.lang.String name -> name
    boolean inExternalSubset -> inExternalSubset
    boolean isEntityDeclInExternalSubset() -> isEntityDeclInExternalSubset
    boolean isExternal() -> isExternal
    boolean isUnparsed() -> isUnparsed
    void clear() -> clear
    void setValues(com.amazonaws.javax.xml.stream.Entity) -> setValues
com.amazonaws.javax.xml.stream.Entity$ExternalEntity -> com.amazonaws.javax.xml.stream.Entity$ExternalEntity:
    com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier entityLocation -> entityLocation
    java.lang.String notation -> notation
    boolean isExternal() -> isExternal
    boolean isUnparsed() -> isUnparsed
    void clear() -> clear
    void setValues(com.amazonaws.javax.xml.stream.Entity) -> setValues
    void setValues(com.amazonaws.javax.xml.stream.Entity$ExternalEntity) -> setValues
com.amazonaws.javax.xml.stream.Entity$InternalEntity -> com.amazonaws.javax.xml.stream.Entity$InternalEntity:
    java.lang.String text -> text
    boolean isExternal() -> isExternal
    boolean isUnparsed() -> isUnparsed
    void clear() -> clear
    void setValues(com.amazonaws.javax.xml.stream.Entity) -> setValues
    void setValues(com.amazonaws.javax.xml.stream.Entity$InternalEntity) -> setValues
com.amazonaws.javax.xml.stream.Entity$ScannedEntity -> com.amazonaws.javax.xml.stream.Entity$ScannedEntity:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int fBufferSize -> fBufferSize
    int DEFAULT_XMLDECL_BUFFER_SIZE -> DEFAULT_XMLDECL_BUFFER_SIZE
    int DEFAULT_INTERNAL_BUFFER_SIZE -> DEFAULT_INTERNAL_BUFFER_SIZE
    java.io.InputStream stream -> stream
    java.io.Reader reader -> reader
    com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier entityLocation -> entityLocation
    java.lang.String encoding -> encoding
    boolean literal -> literal
    boolean isExternal -> isExternal
    java.lang.String version -> version
    char[] ch -> ch
    int position -> position
    int count -> count
    int lineNumber -> lineNumber
    int columnNumber -> columnNumber
    int fTotalCountTillLastLoad -> fTotalCountTillLastLoad
    int fLastCount -> fLastCount
    boolean mayReadChunks -> mayReadChunks
    java.lang.String getEncodingName() -> getEncodingName
    java.lang.String getEntityVersion() -> getEntityVersion
    void setEntityVersion(java.lang.String) -> setEntityVersion
    java.io.Reader getEntityReader() -> getEntityReader
    java.io.InputStream getEntityInputStream() -> getEntityInputStream
    void close() -> close
    boolean isExternal() -> isExternal
    boolean isUnparsed() -> isUnparsed
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.EventFilter -> com.amazonaws.javax.xml.stream.EventFilter:
    boolean accept(com.amazonaws.javax.xml.stream.events.XMLEvent) -> accept
com.amazonaws.javax.xml.stream.EventFilterSupport -> com.amazonaws.javax.xml.stream.EventFilterSupport:
    com.amazonaws.javax.xml.stream.EventFilter fEventFilter -> a
    java.lang.Object next() -> next
    boolean hasNext() -> hasNext
    com.amazonaws.javax.xml.stream.events.XMLEvent nextEvent() -> nextEvent
    com.amazonaws.javax.xml.stream.events.XMLEvent nextTag() -> nextTag
    com.amazonaws.javax.xml.stream.events.XMLEvent peek() -> peek
com.amazonaws.javax.xml.stream.FactoryConfigurationError -> com.amazonaws.javax.xml.stream.FactoryConfigurationError:
    java.lang.Exception nested -> a
    java.lang.Exception getException() -> getException
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
com.amazonaws.javax.xml.stream.FactoryFinder -> com.amazonaws.javax.xml.stream.FactoryFinder:
    boolean debug -> a
    java.util.Properties cacheProps -> b
    boolean firstTime -> c
    com.amazonaws.javax.xml.stream.SecuritySupport ss -> d
    void dPrint(java.lang.String) -> a
    java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean) -> b
    java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean) -> a
    java.lang.Object find(java.lang.String,java.lang.String) -> a
    java.lang.Object find(java.lang.String,java.lang.ClassLoader,java.lang.String) -> a
    java.lang.Object findJarServiceProvider(java.lang.String) -> b
com.amazonaws.javax.xml.stream.FactoryFinder$ConfigurationError -> com.amazonaws.javax.xml.stream.FactoryFinder$ConfigurationError:
    java.lang.Exception exception -> a
    java.lang.Exception getException() -> a
    java.lang.Throwable getCause() -> getCause
com.amazonaws.javax.xml.stream.FileBufferManager -> com.amazonaws.javax.xml.stream.FileBufferManager:
    java.nio.charset.CharsetDecoder decoder -> b
    java.nio.channels.FileChannel fChannel -> c
    java.nio.CharBuffer charBuffer -> d
    boolean calledGetMore -> e
    long remaining -> f
    long filepos -> g
    long filesize -> h
    boolean arrangeCapacity(int) -> arrangeCapacity
    java.nio.ByteBuffer getMoreBytes() -> getMoreBytes
    boolean getMore() -> getMore
    java.nio.CharBuffer getCharBuffer() -> getCharBuffer
    int getLength() -> a
    void main(java.lang.String[]) -> main
    void close() -> close
    void setEncoding(java.lang.String) -> setEncoding
com.amazonaws.javax.xml.stream.Location -> com.amazonaws.javax.xml.stream.Location:
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int getCharacterOffset() -> getCharacterOffset
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
com.amazonaws.javax.xml.stream.PropertyManager -> com.amazonaws.javax.xml.stream.PropertyManager:
    java.lang.String STAX_NOTATIONS -> STAX_NOTATIONS
    java.lang.String STAX_ENTITIES -> STAX_ENTITIES
    java.util.HashMap supportedProps -> a
    int CONTEXT_READER -> CONTEXT_READER
    int CONTEXT_WRITER -> CONTEXT_WRITER
    boolean containsProperty(java.lang.String) -> containsProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.SecuritySupport -> com.amazonaws.javax.xml.stream.SecuritySupport:
    java.lang.ClassLoader getContextClassLoader() -> a
    java.lang.String getSystemProperty(java.lang.String) -> a
    java.io.FileInputStream getFileInputStream(java.io.File) -> a
    java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String) -> a
    boolean doesFileExist(java.io.File) -> b
com.amazonaws.javax.xml.stream.SecuritySupport$1 -> com.amazonaws.javax.xml.stream.SecuritySupport$1:
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.SecuritySupport$2 -> com.amazonaws.javax.xml.stream.SecuritySupport$2:
    java.lang.String val$propName -> a
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.SecuritySupport$3 -> com.amazonaws.javax.xml.stream.SecuritySupport$3:
    java.io.File val$file -> a
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.SecuritySupport$4 -> com.amazonaws.javax.xml.stream.SecuritySupport$4:
    java.lang.ClassLoader val$cl -> a
    java.lang.String val$name -> b
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.SecuritySupport$5 -> com.amazonaws.javax.xml.stream.SecuritySupport$5:
    java.io.File val$f -> a
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.StaxEntityResolverWrapper -> com.amazonaws.javax.xml.stream.StaxEntityResolverWrapper:
    com.amazonaws.javax.xml.stream.XMLResolver fStaxResolver -> a
    void setStaxEntityResolver(com.amazonaws.javax.xml.stream.XMLResolver) -> setStaxEntityResolver
    com.amazonaws.javax.xml.stream.XMLResolver getStaxEntityResolver() -> getStaxEntityResolver
    com.amazonaws.javax.xml.stream.StaxXMLInputSource resolveEntity(com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier) -> resolveEntity
com.amazonaws.javax.xml.stream.StaxErrorReporter -> com.amazonaws.javax.xml.stream.StaxErrorReporter:
    com.amazonaws.javax.xml.stream.XMLReporter fXMLReporter -> c
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    void reportError(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short) -> reportError
    com.amazonaws.javax.xml.stream.Location convertToStaxLocation(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator) -> a
com.amazonaws.javax.xml.stream.StaxErrorReporter$1 -> com.amazonaws.javax.xml.stream.StaxErrorReporter$1:
    com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator val$location -> a
    int getColumnNumber() -> getColumnNumber
    int getLineNumber() -> getLineNumber
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
    int getCharacterOffset() -> getCharacterOffset
com.amazonaws.javax.xml.stream.StaxXMLInputSource -> com.amazonaws.javax.xml.stream.StaxXMLInputSource:
    com.amazonaws.javax.xml.stream.XMLStreamReader fStreamReader -> a
    com.amazonaws.javax.xml.stream.XMLEventReader fEventReader -> b
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource fInputSource -> c
    com.amazonaws.javax.xml.stream.XMLStreamReader getXMLStreamReader() -> getXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLEventReader getXMLEventReader() -> getXMLEventReader
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource getXMLInputSource() -> getXMLInputSource
    boolean hasXMLStreamOrXMLEventReader() -> hasXMLStreamOrXMLEventReader
com.amazonaws.javax.xml.stream.StreamBufferManager -> com.amazonaws.javax.xml.stream.StreamBufferManager:
    java.nio.CharBuffer charBuffer -> b
    java.io.Reader fReader -> c
    boolean fAllowJavaEncodings -> d
    java.nio.CharBuffer getCharBuffer() -> getCharBuffer
    boolean getMore() -> getMore
    java.io.Reader createReader(java.io.InputStream,java.lang.String,java.lang.Boolean) -> a
    void main(java.lang.String[]) -> main
    void close() -> close
    void setEncoding(java.lang.String) -> setEncoding
    boolean arrangeCapacity(int) -> arrangeCapacity
com.amazonaws.javax.xml.stream.StreamBufferManager$RewindableInputStream -> com.amazonaws.javax.xml.stream.StreamBufferManager$RewindableInputStream:
    java.io.InputStream fInputStream -> a
    byte[] fData -> b
    int fStartOffset -> c
    int fEndOffset -> d
    int fOffset -> e
    int fLength -> f
    int fMark -> g
    void setStartOffset(int) -> setStartOffset
    void rewind() -> rewind
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
com.amazonaws.javax.xml.stream.StreamFilter -> com.amazonaws.javax.xml.stream.StreamFilter:
    boolean accept(com.amazonaws.javax.xml.stream.XMLStreamReader) -> accept
com.amazonaws.javax.xml.stream.Version -> com.amazonaws.javax.xml.stream.Version:
    void main(java.lang.String[]) -> main
com.amazonaws.javax.xml.stream.XMLBufferListener -> com.amazonaws.javax.xml.stream.XMLBufferListener:
    void refresh() -> refresh
    void refresh(int) -> refresh
com.amazonaws.javax.xml.stream.XMLDTDScannerImpl -> com.amazonaws.javax.xml.stream.XMLDTDScannerImpl:
    java.lang.String[] RECOGNIZED_FEATURES -> w
    java.lang.Boolean[] FEATURE_DEFAULTS -> x
    java.lang.String[] RECOGNIZED_PROPERTIES -> y
    java.lang.Object[] PROPERTY_DEFAULTS -> z
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDHandler fDTDHandler -> fDTDHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDContentModelHandler fDTDContentModelHandler -> A
    int fScannerState -> B
    boolean fStandalone -> C
    boolean fSeenExternalDTD -> D
    boolean fSeenExternalPE -> E
    boolean fStartDTDCalled -> F
    com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl fAttributes -> G
    int[] fContentStack -> H
    int fContentDepth -> I
    int[] fPEStack -> J
    boolean[] fPEReport -> K
    int fPEDepth -> L
    int fMarkUpDepth -> M
    int fExtEntityDepth -> N
    int fIncludeSectDepth -> O
    java.lang.String[] fStrings -> P
    com.amazonaws.javax.xml.stream.xerces.xni.XMLString fString -> Q
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fStringBuffer -> R
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fStringBuffer2 -> S
    com.amazonaws.javax.xml.stream.xerces.xni.XMLString fLiteral -> T
    com.amazonaws.javax.xml.stream.xerces.xni.XMLString fLiteral2 -> U
    java.lang.String[] fEnumeration -> V
    int fEnumerationCount -> W
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fIgnoreConditionalBuffer -> X
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.DTDGrammar nvGrammarInfo -> Y
    boolean nonValidatingMode -> Z
    void setInputSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> setInputSource
    boolean scanDTDExternalSubset(boolean) -> scanDTDExternalSubset
    boolean scanDTDInternalSubset(boolean,boolean,boolean) -> scanDTDInternalSubset
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    void reset() -> reset
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    java.lang.String[] getRecognizedFeatures() -> getRecognizedFeatures
    java.lang.String[] getRecognizedProperties() -> getRecognizedProperties
    java.lang.Boolean getFeatureDefault(java.lang.String) -> getFeatureDefault
    java.lang.Object getPropertyDefault(java.lang.String) -> getPropertyDefault
    void setDTDHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDHandler) -> setDTDHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDHandler getDTDHandler() -> getDTDHandler
    void setDTDContentModelHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDContentModelHandler) -> setDTDContentModelHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDContentModelHandler getDTDContentModelHandler() -> getDTDContentModelHandler
    void startEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    boolean scanningInternalSubset() -> a
    void startPE(java.lang.String,boolean) -> a
    boolean scanTextDecl() -> b
    void scanNotationDecl() -> c
    void scanConditionalSect(int) -> e
    boolean scanDecls(boolean) -> a
    boolean skipSeparator(boolean,boolean) -> a
    void pushContentStack(int) -> f
    void ensureEnumerationSize(int) -> g
    void init() -> d
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.DTDGrammar getGrammar() -> getGrammar
com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl -> com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl:
    java.lang.String[] RECOGNIZED_FEATURES -> w
    java.lang.Boolean[] FEATURE_DEFAULTS -> x
    java.lang.String[] RECOGNIZED_PROPERTIES -> y
    java.lang.Object[] PROPERTY_DEFAULTS -> z
    char[] cdata -> O
    char[] xmlDecl -> P
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler fDocumentHandler -> Q
    com.amazonaws.javax.xml.stream.XMLEntityStorage fEntityStore -> R
    int[] fEntityStack -> S
    int fMarkupDepth -> T
    boolean fEmptyElement -> U
    int fScannerState -> V
    boolean fLastSectionWasCData -> W
    boolean fLastSectionWasEntityReference -> X
    boolean fLastSectionWasCharacterData -> Y
    boolean fHasExternalDTD -> Z
    boolean fStandaloneSet -> A
    boolean fStandalone -> aa
    com.amazonaws.javax.xml.stream.xerces.xni.QName fCurrentElement -> ab
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$ElementStack fElementStack -> ac
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$ElementStack2 fElementStack2 -> B
    java.lang.String fPITarget -> C
    boolean fNamespaces -> ad
    boolean fNotifyBuiltInRefs -> D
    boolean fReplaceEntityReferences -> ae
    boolean fSupportExternalEntities -> E
    boolean fReportCdataEvent -> af
    boolean fIsCoalesce -> ag
    java.lang.String fDeclaredEncoding -> ah
    boolean fDisallowDoctype -> ai
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver fDriver -> aj
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver fContentDriver -> ak
    com.amazonaws.javax.xml.stream.xerces.xni.QName fElementQName -> al
    com.amazonaws.javax.xml.stream.xerces.xni.QName fAttributeQName -> am
    com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesIteratorImpl fAttributes -> an
    com.amazonaws.javax.xml.stream.xerces.xni.XMLString fTempString -> ao
    com.amazonaws.javax.xml.stream.xerces.xni.XMLString fTempString2 -> ap
    java.lang.String[] fStrings -> F
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fStringBuffer -> aq
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fContentBuffer -> ar
    char[] fSingleChar -> G
    java.lang.String fCurrentEntityName -> H
    com.amazonaws.javax.xml.stream.dtd.DTDGrammarUtil dtdGrammarUtil -> as
    boolean fAddDefaultAttr -> at
    boolean foundBuiltInRefs -> au
    boolean fShouldSkip -> av
    boolean fAdd -> aw
    boolean fSkip -> ax
    boolean fUsebuffer -> ay
    void setInputSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> setInputSource
    boolean scanDocument(boolean) -> scanDocument
    int next() -> next
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    java.lang.String[] getRecognizedFeatures() -> getRecognizedFeatures
    void setFeature(java.lang.String,boolean) -> setFeature
    java.lang.String[] getRecognizedProperties() -> getRecognizedProperties
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Boolean getFeatureDefault(java.lang.String) -> getFeatureDefault
    java.lang.Object getPropertyDefault(java.lang.String) -> getPropertyDefault
    void setDocumentHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler) -> setDocumentHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler getDocumentHandler() -> getDocumentHandler
    void startEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver createContentDriver() -> c
    void scanXMLDeclOrTextDecl(boolean) -> b
    java.lang.String getPITarget() -> getPITarget
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer getPIData() -> getPIData
    com.amazonaws.javax.xml.stream.xerces.xni.XMLString getCharacterData() -> getCharacterData
    void scanPIData(java.lang.String,com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> a
    void scanComment() -> e
    java.lang.String getComment() -> getComment
    boolean scanStartElement() -> a
    boolean hasAttributes() -> hasAttributes
    com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesIteratorImpl getAttributeIterator() -> getAttributeIterator
    boolean standaloneSet() -> standaloneSet
    boolean isStandAlone() -> isStandAlone
    int scanContent(com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> d
    boolean scanCDATASection$62cbb1c8(com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> e
    int scanEndElement() -> b
    void scanEntityReference(com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> f
    void handleCharacter(char,java.lang.String,com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> a
    void setScannerState(int) -> f
    void setDriver(com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver) -> a
    java.lang.String getScannerStateName(int) -> e
    java.lang.String getEntityName() -> getEntityName
    java.lang.String getDriverName(com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver) -> getDriverName
com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver -> com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver:
    int next() -> next
com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Element -> com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Element:
    com.amazonaws.javax.xml.stream.xerces.xni.QName qname -> qname
    char[] fRawname -> fRawname
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Element next -> next
com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$ElementStack -> com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$ElementStack:
    com.amazonaws.javax.xml.stream.xerces.xni.QName[] fElements -> a
    int[] fInt -> b
    int fDepth -> c
    int fCount -> d
    int fPosition -> e
    int fMark -> f
    int fLastDepth -> g
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl this$0 -> h
    com.amazonaws.javax.xml.stream.xerces.xni.QName pushElement(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> pushElement
    com.amazonaws.javax.xml.stream.xerces.xni.QName getNext() -> getNext
    void push() -> push
    boolean matchElement(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> matchElement
    com.amazonaws.javax.xml.stream.xerces.xni.QName nextElement() -> nextElement
    com.amazonaws.javax.xml.stream.xerces.xni.QName popElement() -> popElement
    void reposition() -> reposition
    void clear() -> clear
    com.amazonaws.javax.xml.stream.xerces.xni.QName getLastPoppedElement() -> getLastPoppedElement
com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$ElementStack2 -> com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$ElementStack2:
    com.amazonaws.javax.xml.stream.xerces.xni.QName[] fQName -> a
    int fDepth -> b
    int fCount -> c
    int fPosition -> d
    int fMark -> e
    int fLastDepth -> f
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl this$0 -> g
    void resize() -> resize
    boolean matchElement(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> matchElement
    com.amazonaws.javax.xml.stream.xerces.xni.QName nextElement() -> nextElement
    com.amazonaws.javax.xml.stream.xerces.xni.QName getNext() -> getNext
    int popElement() -> popElement
    void clear() -> clear
com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$FragmentContentDriver -> com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$FragmentContentDriver:
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl this$0 -> a
    void startOfMarkup() -> e
    void decideSubState() -> decideSubState
    int next() -> next
    boolean scanForDoctypeHook() -> a
    boolean elementDepthIsZeroHook() -> b
    boolean scanRootElementHook() -> c
    void endOfFileHook$61315c6b() -> d
com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl -> com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl:
    java.lang.String[] RECOGNIZED_FEATURES -> az
    java.lang.Boolean[] FEATURE_DEFAULTS -> aA
    java.lang.String[] RECOGNIZED_PROPERTIES -> aB
    java.lang.Object[] PROPERTY_DEFAULTS -> aC
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDScanner fDTDScanner -> w
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fDTDDecl -> x
    boolean fReadingDTD -> y
    java.lang.String fDoctypeName -> z
    java.lang.String fDoctypePublicId -> A
    java.lang.String fDoctypeSystemId -> B
    com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext fNamespaceContext -> C
    boolean fLoadExternalDTD -> D
    boolean fSeenDoctypeDecl -> E
    boolean fBindNamespaces -> F
    int fScannerLastState -> G
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver fXMLDeclDriver -> aD
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver fPrologDriver -> H
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver fDTDDriver -> I
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver fTrailingMiscDriver -> J
    int fStartPos -> K
    int fEndPos -> L
    boolean fSeenInternalSubset -> M
    java.lang.String[] fStrings -> aE
    char[] DOCTYPE -> DOCTYPE
    char[] COMMENTSTRING -> COMMENTSTRING
    boolean fReadingAttributes -> N
    void setInputSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> setInputSource
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    int getScannetState() -> getScannetState
    int next() -> next
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    java.lang.String[] getRecognizedFeatures() -> getRecognizedFeatures
    void setFeature(java.lang.String,boolean) -> setFeature
    java.lang.String[] getRecognizedProperties() -> getRecognizedProperties
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Boolean getFeatureDefault(java.lang.String) -> getFeatureDefault
    java.lang.Object getPropertyDefault(java.lang.String) -> getPropertyDefault
    void startEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver createContentDriver() -> c
    boolean scanDoctypeDecl(boolean) -> a
    void setEndDTDScanState() -> d
    java.lang.String getScannerStateName(int) -> e
com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$ContentDriver -> com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$ContentDriver:
    com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl this$0 -> a
    boolean scanForDoctypeHook() -> a
    boolean elementDepthIsZeroHook() -> b
    boolean scanRootElementHook() -> c
    void endOfFileHook$61315c6b() -> d
com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$DTDDriver -> com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$DTDDriver:
    com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl this$0 -> a
    int next() -> next
    boolean dispatch(boolean) -> dispatch
com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$PrologDriver -> com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$PrologDriver:
    com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl this$0 -> a
    int next() -> next
com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$TrailingMiscDriver -> com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$TrailingMiscDriver:
    com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl this$0 -> a
    int next() -> next
com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$XMLBufferListenerImpl -> com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$XMLBufferListenerImpl:
    com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl this$0 -> a
    void refresh() -> refresh
    void refresh(int) -> refresh
com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$XMLDeclDriver -> com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$XMLDeclDriver:
    com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl this$0 -> a
    int next() -> next
com.amazonaws.javax.xml.stream.XMLEntityHandler -> com.amazonaws.javax.xml.stream.XMLEntityHandler:
    void startEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
com.amazonaws.javax.xml.stream.XMLEntityManager -> com.amazonaws.javax.xml.stream.XMLEntityManager:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int DEFAULT_XMLDECL_BUFFER_SIZE -> DEFAULT_XMLDECL_BUFFER_SIZE
    int DEFAULT_INTERNAL_BUFFER_SIZE -> DEFAULT_INTERNAL_BUFFER_SIZE
    java.lang.String[] RECOGNIZED_FEATURES -> b
    java.lang.Boolean[] FEATURE_DEFAULTS -> c
    java.lang.String[] RECOGNIZED_PROPERTIES -> d
    java.lang.Object[] PROPERTY_DEFAULTS -> e
    java.lang.String XMLEntity -> f
    java.lang.String DTDEntity -> g
    boolean fExternalGeneralEntities -> h
    boolean fExternalParameterEntities -> i
    boolean fAllowJavaEncodings -> j
    com.amazonaws.javax.xml.stream.XMLErrorReporter fErrorReporter -> k
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLEntityResolver fEntityResolver -> l
    com.amazonaws.javax.xml.stream.StaxEntityResolverWrapper fStaxEntityResolver -> m
    int fBufferSize -> n
    boolean fStandalone -> o
    com.amazonaws.javax.xml.stream.XMLEntityHandler fEntityHandler -> p
    com.amazonaws.javax.xml.stream.XMLEntityReaderImpl fEntityReader -> q
    java.util.Hashtable fEntities -> r
    java.util.Stack fEntityStack -> s
    com.amazonaws.javax.xml.stream.Entity$ScannedEntity fCurrentEntity -> a
    com.amazonaws.javax.xml.stream.XMLEntityStorage fEntityStorage -> t
    java.lang.Object[] defaultEncoding -> u
    com.amazonaws.javax.xml.stream.xerces.util.XMLResourceIdentifierImpl fResourceIdentifier -> v
    java.util.Vector fOwnReaders -> w
    java.lang.String gUserDir -> x
    java.lang.String gEscapedUserDir -> y
    boolean[] gNeedEscaping -> z
    char[] gAfterEscaping1 -> A
    char[] gAfterEscaping2 -> B
    char[] gHexChs -> C
    com.amazonaws.javax.xml.stream.XMLEntityStorage getEntityStore() -> getEntityStore
    com.amazonaws.javax.xml.stream.XMLEntityReader getEntityReader() -> getEntityReader
    void setStandalone(boolean) -> setStandalone
    boolean isStandalone() -> isStandalone
    void setEntityHandler(com.amazonaws.javax.xml.stream.XMLEntityHandler) -> setEntityHandler
    com.amazonaws.javax.xml.stream.StaxXMLInputSource resolveEntityAsPerStax(com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier) -> resolveEntityAsPerStax
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource resolveEntity(com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier) -> resolveEntity
    void startEntity(java.lang.String,boolean) -> startEntity
    void startDocumentEntity(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> startDocumentEntity
    void startDTDEntity(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> startDTDEntity
    void startExternalSubset() -> startExternalSubset
    void endExternalSubset() -> endExternalSubset
    void startEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource,boolean,boolean) -> startEntity
    com.amazonaws.javax.xml.stream.Entity$ScannedEntity getCurrentEntity() -> getCurrentEntity
    void closeReaders() -> closeReaders
    void endEntity() -> endEntity
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    java.lang.String[] getRecognizedFeatures() -> getRecognizedFeatures
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.String[] getRecognizedProperties() -> getRecognizedProperties
    java.lang.Boolean getFeatureDefault(java.lang.String) -> getFeatureDefault
    java.lang.Object getPropertyDefault(java.lang.String) -> getPropertyDefault
    java.lang.String expandSystemId(java.lang.String) -> expandSystemId
    java.lang.String getUserDir() -> a
    java.lang.String expandSystemId(java.lang.String,java.lang.String) -> expandSystemId
    java.io.Reader createReader(java.io.InputStream,java.lang.String,java.lang.Boolean) -> a
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getExpandedSystemId() -> getExpandedSystemId
    java.lang.String getLiteralSystemId() -> getLiteralSystemId
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    java.lang.String fixURI(java.lang.String) -> a
    void test() -> test
com.amazonaws.javax.xml.stream.XMLEntityManager$RewindableInputStream -> com.amazonaws.javax.xml.stream.XMLEntityManager$RewindableInputStream:
    java.io.InputStream fInputStream -> a
    byte[] fData -> b
    int fStartOffset -> c
    int fEndOffset -> d
    int fOffset -> e
    int fLength -> f
    int fMark -> g
    com.amazonaws.javax.xml.stream.XMLEntityManager this$0 -> h
    void setStartOffset(int) -> setStartOffset
    void rewind() -> rewind
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
com.amazonaws.javax.xml.stream.XMLEntityReader -> com.amazonaws.javax.xml.stream.XMLEntityReader:
    void setEncoding(java.lang.String) -> setEncoding
    java.lang.String getEncoding() -> getEncoding
    int getCharacterOffset() -> getCharacterOffset
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getVersion() -> getVersion
    boolean isExternal() -> isExternal
    int peekChar() -> peekChar
    int scanChar() -> scanChar
    java.lang.String scanNmtoken() -> scanNmtoken
    java.lang.String scanName() -> scanName
    boolean scanQName(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> scanQName
    int scanContent(com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> scanContent
    int scanLiteral(int,com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> scanLiteral
    boolean scanData(java.lang.String,com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> scanData
    boolean skipChar(int) -> skipChar
    boolean skipSpaces() -> skipSpaces
    boolean skipString(java.lang.String) -> skipString
    void registerListener(com.amazonaws.javax.xml.stream.XMLBufferListener) -> registerListener
com.amazonaws.javax.xml.stream.XMLEntityReaderImpl -> com.amazonaws.javax.xml.stream.XMLEntityReaderImpl:
    com.amazonaws.javax.xml.stream.Entity$ScannedEntity fCurrentEntity -> d
    com.amazonaws.javax.xml.stream.XMLEntityManager fEntityManager -> e
    java.util.Vector listeners -> f
    boolean[] validContent -> validContent
    boolean[] validNames -> validNames
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> g
    com.amazonaws.javax.xml.stream.XMLErrorReporter fErrorReporter -> h
    int[] whiteSpaceLookup -> a
    int whiteSpaceLen -> b
    boolean whiteSpaceInfoNeeded -> i
    char[] scannedName -> c
    boolean fAllowJavaEncodings -> j
    boolean isExternal -> k
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    void setCurrentEntity(com.amazonaws.javax.xml.stream.Entity$ScannedEntity) -> setCurrentEntity
    com.amazonaws.javax.xml.stream.Entity$ScannedEntity getCurrentEntity() -> getCurrentEntity
    java.lang.String getBaseSystemId() -> getBaseSystemId
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int getCharacterOffset() -> getCharacterOffset
    java.lang.String getExpandedSystemId() -> getExpandedSystemId
    java.lang.String getLiteralSystemId() -> getLiteralSystemId
    java.lang.String getPublicId() -> getPublicId
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getVersion() -> getVersion
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    boolean isExternal() -> isExternal
    int getChar(int) -> getChar
    int peekChar() -> peekChar
    int scanChar() -> scanChar
    java.lang.String scanNmtoken() -> scanNmtoken
    java.lang.String scanName() -> scanName
    boolean scanQName(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> scanQName
    int scanContent(com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> scanContent
    int scanLiteral(int,com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> scanLiteral
    boolean scanData(java.lang.String,com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> scanData
    boolean skipChar(int) -> skipChar
    boolean isSpace(char) -> isSpace
    boolean skipSpaces() -> skipSpaces
    boolean arrangeCapacity(int) -> arrangeCapacity
    boolean arrangeCapacity(int,boolean) -> arrangeCapacity
    boolean skipString(java.lang.String) -> skipString
    boolean skipString(char[]) -> skipString
    boolean load(int,boolean) -> a
    void registerListener(com.amazonaws.javax.xml.stream.XMLBufferListener) -> registerListener
    void invokeListeners(int) -> a
com.amazonaws.javax.xml.stream.XMLEntityStorage -> com.amazonaws.javax.xml.stream.XMLEntityStorage:
    boolean fWarnDuplicateEntityDef -> a
    java.util.Hashtable fEntities -> b
    com.amazonaws.javax.xml.stream.Entity$ScannedEntity fCurrentEntity -> c
    com.amazonaws.javax.xml.stream.XMLEntityManager fEntityManager -> d
    com.amazonaws.javax.xml.stream.XMLErrorReporter fErrorReporter -> e
    java.lang.String gUserDir -> f
    java.lang.String gEscapedUserDir -> g
    boolean[] gNeedEscaping -> h
    char[] gAfterEscaping1 -> i
    char[] gAfterEscaping2 -> j
    char[] gHexChs -> k
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    void reset() -> reset
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    java.util.Hashtable getDeclaredEntities() -> getDeclaredEntities
    void addInternalEntity(java.lang.String,java.lang.String) -> addInternalEntity
    void addExternalEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addExternalEntity
    boolean isExternalEntity(java.lang.String) -> isExternalEntity
    boolean isEntityDeclInExternalSubset(java.lang.String) -> isEntityDeclInExternalSubset
    void addUnparsedEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addUnparsedEntity
    boolean isUnparsedEntity(java.lang.String) -> isUnparsedEntity
    boolean isDeclaredEntity(java.lang.String) -> isDeclaredEntity
    java.lang.String expandSystemId(java.lang.String) -> expandSystemId
    java.lang.String getUserDir() -> a
    java.lang.String expandSystemId(java.lang.String,java.lang.String) -> expandSystemId
    java.lang.String fixURI(java.lang.String) -> a
com.amazonaws.javax.xml.stream.XMLErrorReporter -> com.amazonaws.javax.xml.stream.XMLErrorReporter:
    short SEVERITY_WARNING -> SEVERITY_WARNING
    short SEVERITY_ERROR -> SEVERITY_ERROR
    short SEVERITY_FATAL_ERROR -> SEVERITY_FATAL_ERROR
    java.lang.String[] RECOGNIZED_FEATURES -> c
    java.lang.Boolean[] FEATURE_DEFAULTS -> d
    java.lang.String[] RECOGNIZED_PROPERTIES -> e
    java.lang.Object[] PROPERTY_DEFAULTS -> f
    java.util.Locale fLocale -> a
    java.util.Hashtable fMessageFormatters -> g
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLErrorHandler fErrorHandler -> h
    com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator fLocator -> i
    boolean fContinueAfterFatalError -> b
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLErrorHandler fDefaultErrorHandler -> j
    void setLocale(java.util.Locale) -> setLocale
    java.util.Locale getLocale() -> getLocale
    void setDocumentLocator(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator) -> setDocumentLocator
    void putMessageFormatter(java.lang.String,com.amazonaws.javax.xml.stream.xerces.util.MessageFormatter) -> putMessageFormatter
    com.amazonaws.javax.xml.stream.xerces.util.MessageFormatter getMessageFormatter(java.lang.String) -> getMessageFormatter
    com.amazonaws.javax.xml.stream.xerces.util.MessageFormatter removeMessageFormatter(java.lang.String) -> removeMessageFormatter
    void reportError(java.lang.String,java.lang.String,java.lang.Object[],short) -> reportError
    void reportError(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short) -> reportError
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    java.lang.String[] getRecognizedFeatures() -> getRecognizedFeatures
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String[] getRecognizedProperties() -> getRecognizedProperties
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Boolean getFeatureDefault(java.lang.String) -> getFeatureDefault
    java.lang.Object getPropertyDefault(java.lang.String) -> getPropertyDefault
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLErrorHandler getErrorHandler() -> getErrorHandler
com.amazonaws.javax.xml.stream.XMLEventFactory -> com.amazonaws.javax.xml.stream.XMLEventFactory:
    com.amazonaws.javax.xml.stream.XMLEventFactory newInstance() -> newInstance
    com.amazonaws.javax.xml.stream.XMLEventFactory newFactory() -> newFactory
    com.amazonaws.javax.xml.stream.XMLEventFactory newInstance(java.lang.String,java.lang.ClassLoader) -> newInstance
    com.amazonaws.javax.xml.stream.XMLEventFactory newFactory(java.lang.String,java.lang.ClassLoader) -> newFactory
    void setLocation(com.amazonaws.javax.xml.stream.Location) -> setLocation
    com.amazonaws.javax.xml.stream.events.Attribute createAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createAttribute
    com.amazonaws.javax.xml.stream.events.Attribute createAttribute(java.lang.String,java.lang.String) -> createAttribute
    com.amazonaws.javax.xml.stream.events.Attribute createAttribute(com.amazonaws.javax.xml.namespace.QName,java.lang.String) -> createAttribute
    com.amazonaws.javax.xml.stream.events.Namespace createNamespace(java.lang.String) -> createNamespace
    com.amazonaws.javax.xml.stream.events.Namespace createNamespace(java.lang.String,java.lang.String) -> createNamespace
    com.amazonaws.javax.xml.stream.events.StartElement createStartElement(com.amazonaws.javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator) -> createStartElement
    com.amazonaws.javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String) -> createStartElement
    com.amazonaws.javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator) -> createStartElement
    com.amazonaws.javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator,com.amazonaws.javax.xml.namespace.NamespaceContext) -> createStartElement
    com.amazonaws.javax.xml.stream.events.EndElement createEndElement(com.amazonaws.javax.xml.namespace.QName,java.util.Iterator) -> createEndElement
    com.amazonaws.javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String) -> createEndElement
    com.amazonaws.javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator) -> createEndElement
    com.amazonaws.javax.xml.stream.events.Characters createCharacters(java.lang.String) -> createCharacters
    com.amazonaws.javax.xml.stream.events.Characters createCData(java.lang.String) -> createCData
    com.amazonaws.javax.xml.stream.events.Characters createSpace(java.lang.String) -> createSpace
    com.amazonaws.javax.xml.stream.events.Characters createIgnorableSpace(java.lang.String) -> createIgnorableSpace
    com.amazonaws.javax.xml.stream.events.StartDocument createStartDocument() -> createStartDocument
    com.amazonaws.javax.xml.stream.events.StartDocument createStartDocument(java.lang.String,java.lang.String,boolean) -> createStartDocument
    com.amazonaws.javax.xml.stream.events.StartDocument createStartDocument(java.lang.String,java.lang.String) -> createStartDocument
    com.amazonaws.javax.xml.stream.events.StartDocument createStartDocument(java.lang.String) -> createStartDocument
    com.amazonaws.javax.xml.stream.events.EndDocument createEndDocument() -> createEndDocument
    com.amazonaws.javax.xml.stream.events.EntityReference createEntityReference(java.lang.String,com.amazonaws.javax.xml.stream.events.EntityDeclaration) -> createEntityReference
    com.amazonaws.javax.xml.stream.events.Comment createComment(java.lang.String) -> createComment
    com.amazonaws.javax.xml.stream.events.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String) -> createProcessingInstruction
    com.amazonaws.javax.xml.stream.events.DTD createDTD(java.lang.String) -> createDTD
com.amazonaws.javax.xml.stream.XMLEventReader -> com.amazonaws.javax.xml.stream.XMLEventReader:
    com.amazonaws.javax.xml.stream.events.XMLEvent nextEvent() -> nextEvent
    boolean hasNext() -> hasNext
    com.amazonaws.javax.xml.stream.events.XMLEvent peek() -> peek
    java.lang.String getElementText() -> getElementText
    com.amazonaws.javax.xml.stream.events.XMLEvent nextTag() -> nextTag
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void close() -> close
com.amazonaws.javax.xml.stream.XMLEventReaderImpl -> com.amazonaws.javax.xml.stream.XMLEventReaderImpl:
    com.amazonaws.javax.xml.stream.XMLStreamReader fXMLReader -> a
    com.amazonaws.javax.xml.stream.util.XMLEventAllocator fXMLEventAllocator -> b
    com.amazonaws.javax.xml.stream.events.XMLEvent fPeekedEvent -> c
    com.amazonaws.javax.xml.stream.events.XMLEvent fLastEvent -> d
    boolean hasNext() -> hasNext
    com.amazonaws.javax.xml.stream.events.XMLEvent nextEvent() -> nextEvent
    void remove() -> remove
    void close() -> close
    java.lang.String getElementText() -> getElementText
    java.lang.Object getProperty(java.lang.String) -> getProperty
    com.amazonaws.javax.xml.stream.events.XMLEvent nextTag() -> nextTag
    java.lang.Object next() -> next
    com.amazonaws.javax.xml.stream.events.XMLEvent peek() -> peek
com.amazonaws.javax.xml.stream.XMLEventWriter -> com.amazonaws.javax.xml.stream.XMLEventWriter:
    void flush() -> flush
    void close() -> close
    void add(com.amazonaws.javax.xml.stream.events.XMLEvent) -> add
    void add(com.amazonaws.javax.xml.stream.XMLEventReader) -> add
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    void setNamespaceContext(com.amazonaws.javax.xml.namespace.NamespaceContext) -> setNamespaceContext
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
com.amazonaws.javax.xml.stream.XMLInputFactory -> com.amazonaws.javax.xml.stream.XMLInputFactory:
    java.lang.String IS_NAMESPACE_AWARE -> IS_NAMESPACE_AWARE
    java.lang.String IS_VALIDATING -> IS_VALIDATING
    java.lang.String IS_COALESCING -> IS_COALESCING
    java.lang.String IS_REPLACING_ENTITY_REFERENCES -> IS_REPLACING_ENTITY_REFERENCES
    java.lang.String IS_SUPPORTING_EXTERNAL_ENTITIES -> IS_SUPPORTING_EXTERNAL_ENTITIES
    java.lang.String SUPPORT_DTD -> SUPPORT_DTD
    java.lang.String REPORTER -> REPORTER
    java.lang.String RESOLVER -> RESOLVER
    java.lang.String ALLOCATOR -> ALLOCATOR
    com.amazonaws.javax.xml.stream.XMLInputFactory newInstance() -> newInstance
    com.amazonaws.javax.xml.stream.XMLInputFactory newFactory() -> newFactory
    com.amazonaws.javax.xml.stream.XMLInputFactory newInstance(java.lang.String,java.lang.ClassLoader) -> newInstance
    com.amazonaws.javax.xml.stream.XMLInputFactory newFactory(java.lang.String,java.lang.ClassLoader) -> newFactory
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(com.amazonaws.javax.xml.transform.Source) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.Reader) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.Reader) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.Reader) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(com.amazonaws.javax.xml.stream.XMLStreamReader) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(com.amazonaws.javax.xml.transform.Source) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream,java.lang.String) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.InputStream) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createFilteredReader(com.amazonaws.javax.xml.stream.XMLStreamReader,com.amazonaws.javax.xml.stream.StreamFilter) -> createFilteredReader
    com.amazonaws.javax.xml.stream.XMLEventReader createFilteredReader(com.amazonaws.javax.xml.stream.XMLEventReader,com.amazonaws.javax.xml.stream.EventFilter) -> createFilteredReader
    com.amazonaws.javax.xml.stream.XMLResolver getXMLResolver() -> getXMLResolver
    void setXMLResolver(com.amazonaws.javax.xml.stream.XMLResolver) -> setXMLResolver
    com.amazonaws.javax.xml.stream.XMLReporter getXMLReporter() -> getXMLReporter
    void setXMLReporter(com.amazonaws.javax.xml.stream.XMLReporter) -> setXMLReporter
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    boolean isPropertySupported(java.lang.String) -> isPropertySupported
    void setEventAllocator(com.amazonaws.javax.xml.stream.util.XMLEventAllocator) -> setEventAllocator
    com.amazonaws.javax.xml.stream.util.XMLEventAllocator getEventAllocator() -> getEventAllocator
com.amazonaws.javax.xml.stream.XMLNSDocumentScannerImpl -> com.amazonaws.javax.xml.stream.XMLNSDocumentScannerImpl:
    boolean fPerformValidation -> az
    boolean fEmptyElement -> aA
    com.amazonaws.javax.xml.stream.XMLDocumentScannerImpl$XMLBufferListenerImpl listener -> aB
    boolean fXmlnsDeclared -> aC
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    com.amazonaws.javax.xml.stream.xerces.xni.QName getElementQName() -> getElementQName
    boolean scanStartElement() -> a
    boolean seekCloseOfStartTag() -> f
    int scanEndElement() -> b
    com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext getNamespaceContext() -> getNamespaceContext
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    com.amazonaws.javax.xml.stream.XMLDocumentFragmentScannerImpl$Driver createContentDriver() -> c
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer getDTDDecl() -> getDTDDecl
    java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
com.amazonaws.javax.xml.stream.XMLNSDocumentScannerImpl$NSContentDriver -> com.amazonaws.javax.xml.stream.XMLNSDocumentScannerImpl$NSContentDriver:
    com.amazonaws.javax.xml.stream.XMLNSDocumentScannerImpl this$0 -> a
    boolean scanRootElementHook() -> c
com.amazonaws.javax.xml.stream.XMLNamespaceBinder -> com.amazonaws.javax.xml.stream.XMLNamespaceBinder:
    java.lang.String[] RECOGNIZED_FEATURES -> a
    java.lang.Boolean[] FEATURE_DEFAULTS -> b
    java.lang.String[] RECOGNIZED_PROPERTIES -> c
    java.lang.Object[] PROPERTY_DEFAULTS -> d
    boolean fNamespaces -> e
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> f
    com.amazonaws.javax.xml.stream.XMLErrorReporter fErrorReporter -> g
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler fDocumentHandler -> h
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentSource fDocumentSource -> i
    com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport fNamespaceSupport -> j
    boolean fOnlyPassPrefixMappingEvents -> k
    com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext fNamespaceContext -> l
    com.amazonaws.javax.xml.stream.xerces.xni.QName fAttributeQName -> m
    com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext getNamespaceContext() -> getNamespaceContext
    void setOnlyPassPrefixMappingEvents(boolean) -> setOnlyPassPrefixMappingEvents
    boolean getOnlyPassPrefixMappingEvents() -> getOnlyPassPrefixMappingEvents
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    java.lang.String[] getRecognizedFeatures() -> getRecognizedFeatures
    void setFeature(java.lang.String,boolean) -> setFeature
    java.lang.String[] getRecognizedProperties() -> getRecognizedProperties
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Boolean getFeatureDefault(java.lang.String) -> getFeatureDefault
    java.lang.Object getPropertyDefault(java.lang.String) -> getPropertyDefault
    void setDocumentHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler) -> setDocumentHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler getDocumentHandler() -> getDocumentHandler
    void setDocumentSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentSource) -> setDocumentSource
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentSource getDocumentSource() -> getDocumentSource
    void startGeneralEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startGeneralEntity
    void textDecl(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> textDecl
    void startDocument(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startDocument
    void xmlDecl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> xmlDecl
    void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> doctypeDecl
    void comment(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> comment
    void processingInstruction(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> processingInstruction
    void startPrefixMapping(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startPrefixMapping
    void startElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startElement
    void emptyElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> emptyElement
    void characters(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> characters
    void ignorableWhitespace(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> ignorableWhitespace
    void endElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endElement
    void endPrefixMapping(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endPrefixMapping
    void startCDATA(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startCDATA
    void endCDATA(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endCDATA
    void endDocument(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endDocument
    void endGeneralEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endGeneralEntity
    void handleStartElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations,boolean) -> a
    void handleEndElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations,boolean) -> a
com.amazonaws.javax.xml.stream.XMLOutputFactory -> com.amazonaws.javax.xml.stream.XMLOutputFactory:
    java.lang.String IS_REPAIRING_NAMESPACES -> IS_REPAIRING_NAMESPACES
    com.amazonaws.javax.xml.stream.XMLOutputFactory newInstance() -> newInstance
    com.amazonaws.javax.xml.stream.XMLOutputFactory newFactory() -> newFactory
    com.amazonaws.javax.xml.stream.XMLInputFactory newInstance(java.lang.String,java.lang.ClassLoader) -> newInstance
    com.amazonaws.javax.xml.stream.XMLOutputFactory newFactory(java.lang.String,java.lang.ClassLoader) -> newFactory
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer) -> createXMLStreamWriter
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream) -> createXMLStreamWriter
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String) -> createXMLStreamWriter
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(com.amazonaws.javax.xml.transform.Result) -> createXMLStreamWriter
    com.amazonaws.javax.xml.stream.XMLEventWriter createXMLEventWriter(com.amazonaws.javax.xml.transform.Result) -> createXMLEventWriter
    com.amazonaws.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream) -> createXMLEventWriter
    com.amazonaws.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream,java.lang.String) -> createXMLEventWriter
    com.amazonaws.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.Writer) -> createXMLEventWriter
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    boolean isPropertySupported(java.lang.String) -> isPropertySupported
com.amazonaws.javax.xml.stream.XMLReaderImpl -> com.amazonaws.javax.xml.stream.XMLReaderImpl:
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> b
    com.amazonaws.javax.xml.stream.XMLNSDocumentScannerImpl fScanner -> c
    com.amazonaws.javax.xml.stream.xerces.util.NamespaceContextWrapper fNamespaceContextWrapper -> d
    com.amazonaws.javax.xml.stream.XMLEntityManager fEntityManager -> e
    com.amazonaws.javax.xml.stream.StaxErrorReporter fErrorReporter -> f
    com.amazonaws.javax.xml.stream.XMLEntityReaderImpl fEntityScanner -> a
    com.amazonaws.javax.xml.stream.PropertyManager fPropertyManager -> g
    int fEventType -> h
    boolean fReuse -> i
    java.lang.String fDTDDecl -> j
    void setInputSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> setInputSource
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    void init(com.amazonaws.javax.xml.stream.PropertyManager) -> a
    boolean canReuse() -> canReuse
    void reset() -> reset
    void close() -> close
    java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    int getColumnNumber() -> getColumnNumber
    java.lang.String getEncoding() -> getEncoding
    int getEventType() -> getEventType
    int getLineNumber() -> getLineNumber
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPIData() -> getPIData
    java.lang.String getPITarget() -> getPITarget
    java.lang.String getPrefix() -> getPrefix
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextStart() -> getTextStart
    java.lang.String getValue() -> getValue
    java.lang.String getVersion() -> getVersion
    boolean hasAttributes() -> hasAttributes
    boolean hasName() -> hasName
    boolean hasNext() -> hasNext
    boolean hasValue() -> hasValue
    boolean isEndElement() -> isEndElement
    boolean isStandalone() -> isStandalone
    boolean isStartElement() -> isStartElement
    boolean isWhiteSpace() -> isWhiteSpace
    int next() -> next
    java.lang.String getEventTypeString(int) -> a
    int getAttributeCount() -> getAttributeCount
    com.amazonaws.javax.xml.namespace.QName getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeLocalName(int) -> getAttributeLocalName
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    com.amazonaws.javax.xml.namespace.QName getAttributeQName(int) -> getAttributeQName
    java.lang.String getAttributeType(int) -> getAttributeType
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    java.lang.String getElementText() -> getElementText
    com.amazonaws.javax.xml.stream.Location getLocation() -> getLocation
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    int getNamespaceCount() -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceURI(int) -> getNamespaceURI
    java.lang.Object getProperty(java.lang.String) -> getProperty
    java.lang.String getText() -> getText
    void require(int,java.lang.String,java.lang.String) -> require
    int getTextCharacters(int,char[],int,int) -> getTextCharacters
    boolean hasText() -> hasText
    boolean isAttributeSpecified(int) -> isAttributeSpecified
    boolean isCharacters() -> isCharacters
    int nextTag() -> nextTag
    boolean standaloneSet() -> standaloneSet
    com.amazonaws.javax.xml.namespace.QName convertXNIQNametoJavaxQName(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> convertXNIQNametoJavaxQName
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    java.util.List getEntityDecls() -> a
    java.util.List getNotationDecls() -> b
com.amazonaws.javax.xml.stream.XMLReaderImpl$1 -> com.amazonaws.javax.xml.stream.XMLReaderImpl$1:
    java.lang.String _systemId -> a
    java.lang.String _publicId -> b
    int _offset -> c
    int _columnNumber -> d
    int _lineNumber -> e
    com.amazonaws.javax.xml.stream.XMLReaderImpl this$0 -> f
    java.lang.String getLocationURI() -> getLocationURI
    int getCharacterOffset() -> getCharacterOffset
    int getColumnNumber() -> getColumnNumber
    int getLineNumber() -> getLineNumber
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.XMLReporter -> com.amazonaws.javax.xml.stream.XMLReporter:
    void report(java.lang.String,java.lang.String,java.lang.Object,com.amazonaws.javax.xml.stream.Location) -> report
com.amazonaws.javax.xml.stream.XMLResolver -> com.amazonaws.javax.xml.stream.XMLResolver:
    java.lang.Object resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> resolveEntity
com.amazonaws.javax.xml.stream.XMLScanner -> com.amazonaws.javax.xml.stream.XMLScanner:
    boolean fNeedNonNormalizedValue -> w
    java.util.ArrayList attributeValueCache -> a
    java.util.ArrayList stringBufferCache -> b
    int fStringBufferIndex -> c
    boolean fAttributeCacheInitDone -> d
    int fAttributeCacheUsedCount -> e
    boolean fValidation -> f
    boolean fNotifyCharRefs -> x
    com.amazonaws.javax.xml.stream.PropertyManager fPropertyManager -> g
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> h
    com.amazonaws.javax.xml.stream.XMLErrorReporter fErrorReporter -> i
    com.amazonaws.javax.xml.stream.XMLEntityManager fEntityManager -> j
    com.amazonaws.javax.xml.stream.XMLEntityStorage fEntityStore -> k
    com.amazonaws.javax.xml.stream.XMLEntityReaderImpl fEntityScanner -> l
    int fEntityDepth -> m
    boolean fScanningAttribute -> n
    boolean fReportEntity -> o
    java.lang.String fVersionSymbol -> y
    java.lang.String fEncodingSymbol -> z
    java.lang.String fStandaloneSymbol -> A
    java.lang.String fAmpSymbol -> p
    java.lang.String fLtSymbol -> q
    java.lang.String fGtSymbol -> r
    java.lang.String fQuotSymbol -> s
    java.lang.String fAposSymbol -> t
    com.amazonaws.javax.xml.stream.xerces.xni.XMLString fString -> B
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fStringBuffer -> C
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fStringBuffer2 -> D
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer fStringBuffer3 -> E
    com.amazonaws.javax.xml.stream.xerces.util.XMLResourceIdentifierImpl fResourceIdentifier -> u
    int initialCacheCount -> v
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    void setPropertyManager(com.amazonaws.javax.xml.stream.PropertyManager) -> a
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void reset(com.amazonaws.javax.xml.stream.PropertyManager) -> reset
    void scanXMLDeclOrTextDecl(boolean,java.lang.String[]) -> a
    java.lang.String scanPseudoAttribute(boolean,com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> scanPseudoAttribute
    void scanPI(com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> a
    void scanPIData(java.lang.String,com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> a
    void scanComment(com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> b
    void scanAttributeValue$5bbb23ca(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,java.lang.String,boolean) -> a
    void scanExternalID(java.lang.String[],boolean) -> a
    void normalizeWhitespace(com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> a
    void startEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    int scanCharReferenceValue(com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer,com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> a
    boolean isInvalidLiteral(int) -> a
    boolean isValidNameChar(int) -> b
    boolean isValidNCName(int) -> c
    boolean isValidNameStartChar(int) -> d
    boolean scanSurrogates(com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer) -> c
    void reportFatalError(java.lang.String,java.lang.Object[]) -> a
    void init() -> a
com.amazonaws.javax.xml.stream.XMLStreamConstants -> com.amazonaws.javax.xml.stream.XMLStreamConstants:
    int START_ELEMENT -> START_ELEMENT
    int END_ELEMENT -> END_ELEMENT
    int PROCESSING_INSTRUCTION -> PROCESSING_INSTRUCTION
    int CHARACTERS -> CHARACTERS
    int COMMENT -> COMMENT
    int SPACE -> SPACE
    int START_DOCUMENT -> START_DOCUMENT
    int END_DOCUMENT -> END_DOCUMENT
    int ENTITY_REFERENCE -> ENTITY_REFERENCE
    int ATTRIBUTE -> ATTRIBUTE
    int DTD -> DTD
    int CDATA -> CDATA
    int NAMESPACE -> NAMESPACE
    int NOTATION_DECLARATION -> NOTATION_DECLARATION
    int ENTITY_DECLARATION -> ENTITY_DECLARATION
com.amazonaws.javax.xml.stream.XMLStreamException -> com.amazonaws.javax.xml.stream.XMLStreamException:
    java.lang.Throwable nested -> a
    com.amazonaws.javax.xml.stream.Location location -> b
    java.lang.Throwable getNestedException() -> getNestedException
    com.amazonaws.javax.xml.stream.Location getLocation() -> getLocation
com.amazonaws.javax.xml.stream.XMLStreamException2 -> com.amazonaws.javax.xml.stream.XMLStreamException2:
    java.lang.Throwable getCause() -> getCause
com.amazonaws.javax.xml.stream.XMLStreamFilterImpl -> com.amazonaws.javax.xml.stream.XMLStreamFilterImpl:
    com.amazonaws.javax.xml.stream.StreamFilter fStreamFilter -> a
    com.amazonaws.javax.xml.stream.XMLStreamReader fStreamReader -> b
    int fCurrentEvent -> c
    boolean fEventAccepted -> d
    boolean fStreamAdvancedByHasNext -> e
    int next() -> next
    int nextTag() -> nextTag
    boolean hasNext() -> hasNext
    int findNextEvent() -> a
    void close() -> close
    int getAttributeCount() -> getAttributeCount
    com.amazonaws.javax.xml.namespace.QName getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeType(int) -> getAttributeType
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    java.lang.String getElementText() -> getElementText
    java.lang.String getEncoding() -> getEncoding
    int getEventType() -> getEventType
    java.lang.String getLocalName() -> getLocalName
    com.amazonaws.javax.xml.stream.Location getLocation() -> getLocation
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    int getNamespaceCount() -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getNamespaceURI(int) -> getNamespaceURI
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    java.lang.String getPIData() -> getPIData
    java.lang.String getPITarget() -> getPITarget
    java.lang.String getPrefix() -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextCharacters(int,char[],int,int) -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextStart() -> getTextStart
    java.lang.String getVersion() -> getVersion
    boolean hasName() -> hasName
    boolean hasText() -> hasText
    boolean isAttributeSpecified(int) -> isAttributeSpecified
    boolean isCharacters() -> isCharacters
    boolean isEndElement() -> isEndElement
    boolean isStandalone() -> isStandalone
    boolean isStartElement() -> isStartElement
    boolean isWhiteSpace() -> isWhiteSpace
    void require(int,java.lang.String,java.lang.String) -> require
    boolean standaloneSet() -> standaloneSet
    java.lang.String getAttributeLocalName(int) -> getAttributeLocalName
com.amazonaws.javax.xml.stream.XMLStreamReader -> com.amazonaws.javax.xml.stream.XMLStreamReader:
    java.lang.Object getProperty(java.lang.String) -> getProperty
    int next() -> next
    void require(int,java.lang.String,java.lang.String) -> require
    java.lang.String getElementText() -> getElementText
    int nextTag() -> nextTag
    boolean hasNext() -> hasNext
    void close() -> close
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    boolean isStartElement() -> isStartElement
    boolean isEndElement() -> isEndElement
    boolean isCharacters() -> isCharacters
    boolean isWhiteSpace() -> isWhiteSpace
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getAttributeCount() -> getAttributeCount
    com.amazonaws.javax.xml.namespace.QName getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeLocalName(int) -> getAttributeLocalName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeType(int) -> getAttributeType
    java.lang.String getAttributeValue(int) -> getAttributeValue
    boolean isAttributeSpecified(int) -> isAttributeSpecified
    int getNamespaceCount() -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceURI(int) -> getNamespaceURI
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    int getEventType() -> getEventType
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextCharacters(int,char[],int,int) -> getTextCharacters
    int getTextStart() -> getTextStart
    int getTextLength() -> getTextLength
    java.lang.String getEncoding() -> getEncoding
    boolean hasText() -> hasText
    com.amazonaws.javax.xml.stream.Location getLocation() -> getLocation
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    java.lang.String getLocalName() -> getLocalName
    boolean hasName() -> hasName
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getVersion() -> getVersion
    boolean isStandalone() -> isStandalone
    boolean standaloneSet() -> standaloneSet
    java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    java.lang.String getPITarget() -> getPITarget
    java.lang.String getPIData() -> getPIData
com.amazonaws.javax.xml.stream.XMLStreamWriter -> com.amazonaws.javax.xml.stream.XMLStreamWriter:
    void writeStartElement(java.lang.String) -> writeStartElement
    void writeStartElement(java.lang.String,java.lang.String) -> writeStartElement
    void writeStartElement(java.lang.String,java.lang.String,java.lang.String) -> writeStartElement
    void writeEmptyElement(java.lang.String,java.lang.String) -> writeEmptyElement
    void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String) -> writeEmptyElement
    void writeEmptyElement(java.lang.String) -> writeEmptyElement
    void writeEndElement() -> writeEndElement
    void writeEndDocument() -> writeEndDocument
    void close() -> close
    void flush() -> flush
    void writeAttribute(java.lang.String,java.lang.String) -> writeAttribute
    void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> writeAttribute
    void writeAttribute(java.lang.String,java.lang.String,java.lang.String) -> writeAttribute
    void writeNamespace(java.lang.String,java.lang.String) -> writeNamespace
    void writeDefaultNamespace(java.lang.String) -> writeDefaultNamespace
    void writeComment(java.lang.String) -> writeComment
    void writeProcessingInstruction(java.lang.String) -> writeProcessingInstruction
    void writeProcessingInstruction(java.lang.String,java.lang.String) -> writeProcessingInstruction
    void writeCData(java.lang.String) -> writeCData
    void writeDTD(java.lang.String) -> writeDTD
    void writeEntityRef(java.lang.String) -> writeEntityRef
    void writeStartDocument() -> writeStartDocument
    void writeStartDocument(java.lang.String) -> writeStartDocument
    void writeStartDocument(java.lang.String,java.lang.String) -> writeStartDocument
    void writeCharacters(java.lang.String) -> writeCharacters
    void writeCharacters(char[],int,int) -> writeCharacters
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    void setNamespaceContext(com.amazonaws.javax.xml.namespace.NamespaceContext) -> setNamespaceContext
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    java.lang.Object getProperty(java.lang.String) -> getProperty
com.amazonaws.javax.xml.stream.ZephyrParserFactory -> com.amazonaws.javax.xml.stream.ZephyrParserFactory:
    com.amazonaws.javax.xml.stream.PropertyManager fPropertyManager -> a
    com.amazonaws.javax.xml.stream.XMLReaderImpl fTempReader -> b
    boolean fPropertyChanged -> c
    boolean fReuseInstance -> d
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.Reader) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(com.amazonaws.javax.xml.transform.Source) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.InputStream) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream,java.lang.String) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.Reader) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLEventReader createXMLEventReader(com.amazonaws.javax.xml.stream.XMLStreamReader) -> createXMLEventReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.Reader) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(com.amazonaws.javax.xml.transform.Source) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream,java.lang.String) -> createXMLStreamReader
    com.amazonaws.javax.xml.stream.util.XMLEventAllocator getEventAllocator() -> getEventAllocator
    com.amazonaws.javax.xml.stream.XMLReporter getXMLReporter() -> getXMLReporter
    com.amazonaws.javax.xml.stream.XMLResolver getXMLResolver() -> getXMLResolver
    void setXMLReporter(com.amazonaws.javax.xml.stream.XMLReporter) -> setXMLReporter
    void setXMLResolver(com.amazonaws.javax.xml.stream.XMLResolver) -> setXMLResolver
    com.amazonaws.javax.xml.stream.XMLEventReader createFilteredReader(com.amazonaws.javax.xml.stream.XMLEventReader,com.amazonaws.javax.xml.stream.EventFilter) -> createFilteredReader
    com.amazonaws.javax.xml.stream.XMLStreamReader createFilteredReader(com.amazonaws.javax.xml.stream.XMLStreamReader,com.amazonaws.javax.xml.stream.StreamFilter) -> createFilteredReader
    java.lang.Object getProperty(java.lang.String) -> getProperty
    boolean isPropertySupported(java.lang.String) -> isPropertySupported
    void setEventAllocator(com.amazonaws.javax.xml.stream.util.XMLEventAllocator) -> setEventAllocator
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    com.amazonaws.javax.xml.stream.XMLStreamReader getXMLStreamReaderImpl(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> a
com.amazonaws.javax.xml.stream.ZephyrWriterFactory -> com.amazonaws.javax.xml.stream.ZephyrWriterFactory:
    com.amazonaws.javax.xml.stream.PropertyManager fPropertyManager -> a
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl fStreamWriter -> b
    boolean fReuseInstance -> c
    boolean fPropertyChanged -> d
    com.amazonaws.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream) -> createXMLEventWriter
    com.amazonaws.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream,java.lang.String) -> createXMLEventWriter
    com.amazonaws.javax.xml.stream.XMLEventWriter createXMLEventWriter(com.amazonaws.javax.xml.transform.Result) -> createXMLEventWriter
    com.amazonaws.javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.Writer) -> createXMLEventWriter
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(com.amazonaws.javax.xml.transform.Result) -> createXMLStreamWriter
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer) -> createXMLStreamWriter
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream) -> createXMLStreamWriter
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String) -> createXMLStreamWriter
    java.lang.Object getProperty(java.lang.String) -> getProperty
    boolean isPropertySupported(java.lang.String) -> isPropertySupported
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    com.amazonaws.javax.xml.transform.stream.StreamResult toStreamResult(java.io.OutputStream,java.io.Writer,java.lang.String) -> a
    com.amazonaws.javax.xml.stream.XMLStreamWriter createXMLStreamWriter(com.amazonaws.javax.xml.transform.stream.StreamResult,java.lang.String) -> a
com.amazonaws.javax.xml.stream.dtd.DTDGrammarUtil -> com.amazonaws.javax.xml.stream.dtd.DTDGrammarUtil:
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.DTDGrammar fDTDGrammar -> a
    boolean fNamespaces -> b
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> c
    int fCurrentElementIndex -> d
    int fCurrentContentSpecType -> e
    boolean[] fElementContentState -> f
    int fElementDepth -> g
    boolean fInElementContent -> h
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLAttributeDecl fTempAttDecl -> i
    com.amazonaws.javax.xml.stream.xerces.xni.QName fTempQName -> j
    java.lang.StringBuffer fBuffer -> k
    com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext fNamespaceContext -> l
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    void startElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes) -> startElement
    void endElement(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> endElement
    void startCDATA(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startCDATA
    void endCDATA(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endCDATA
    void addDTDDefaultAttrs(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes) -> addDTDDefaultAttrs
    java.lang.String getAttributeTypeName(com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLAttributeDecl) -> a
    boolean isInElementContent() -> isInElementContent
    boolean isIgnorableWhiteSpace(com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> isIgnorableWhiteSpace
com.amazonaws.javax.xml.stream.dtd.nonvalidating.DTDGrammar -> com.amazonaws.javax.xml.stream.dtd.nonvalidating.DTDGrammar:
    int TOP_LEVEL_SCOPE -> TOP_LEVEL_SCOPE
    int fCurrentElementIndex -> a
    int fCurrentAttributeIndex -> b
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> c
    java.util.ArrayList notationDecls -> d
    int fElementDeclCount -> e
    com.amazonaws.javax.xml.stream.xerces.xni.QName[][] fElementDeclName -> f
    short[][] fElementDeclType -> g
    int[][] fElementDeclFirstAttributeDeclIndex -> h
    int[][] fElementDeclLastAttributeDeclIndex -> i
    int fAttributeDeclCount -> j
    com.amazonaws.javax.xml.stream.xerces.xni.QName[][] fAttributeDeclName -> k
    short[][] fAttributeDeclType -> l
    java.lang.String[][][] fAttributeDeclEnumeration -> m
    short[][] fAttributeDeclDefaultType -> n
    java.lang.String[][] fAttributeDeclDefaultValue -> o
    java.lang.String[][] fAttributeDeclNonNormalizedDefaultValue -> p
    int[][] fAttributeDeclNextAttributeDeclIndex -> q
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.DTDGrammar$QNameHashtable fElementIndexMap -> r
    com.amazonaws.javax.xml.stream.xerces.xni.QName fQName -> s
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLAttributeDecl fAttributeDecl -> t
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLElementDecl fElementDecl -> u
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLSimpleType fSimpleType -> v
    java.util.Hashtable fElementDeclTab -> w
    int getAttributeDeclIndex(int,java.lang.String) -> getAttributeDeclIndex
    void startDTD(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startDTD
    void elementDecl(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> elementDecl
    void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> attributeDecl
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable getSymbolTable() -> getSymbolTable
    int getFirstElementDeclIndex() -> getFirstElementDeclIndex
    int getNextElementDeclIndex(int) -> getNextElementDeclIndex
    int getElementDeclIndex(java.lang.String) -> getElementDeclIndex
    int getElementDeclIndex(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> getElementDeclIndex
    short getContentSpecType(int) -> getContentSpecType
    boolean getElementDecl(int,com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLElementDecl) -> getElementDecl
    int getFirstAttributeDeclIndex(int) -> getFirstAttributeDeclIndex
    int getNextAttributeDeclIndex(int) -> getNextAttributeDeclIndex
    boolean getAttributeDecl(int,com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLAttributeDecl) -> getAttributeDecl
    boolean isCDATAAttribute(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.QName) -> isCDATAAttribute
    void printElements() -> printElements
    void printAttributes(int) -> printAttributes
    int createElementDecl() -> a
    void setElementDecl(int,com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLElementDecl) -> a
    void setAttributeDecl(int,int,com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLAttributeDecl) -> a
    void notationDecl(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> notationDecl
    java.util.List getNotationDecls() -> getNotationDecls
    void ensureElementDeclCapacity(int) -> a
    void ensureAttributeDeclCapacity(int) -> b
    short[][] resize(short[][],int) -> a
    int[][] resize(int[][],int) -> a
    com.amazonaws.javax.xml.stream.xerces.xni.QName[][] resize(com.amazonaws.javax.xml.stream.xerces.xni.QName[][],int) -> a
    java.lang.String[][] resize(java.lang.String[][],int) -> a
    void endDTD(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endDTD
com.amazonaws.javax.xml.stream.dtd.nonvalidating.DTDGrammar$QNameHashtable -> com.amazonaws.javax.xml.stream.dtd.nonvalidating.DTDGrammar$QNameHashtable:
    boolean UNIQUE_STRINGS -> UNIQUE_STRINGS
    java.lang.Object[][] fHashTable -> a
    void put(java.lang.String,int) -> put
    int get(java.lang.String) -> get
    int hash(java.lang.String) -> a
com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLAttributeDecl -> com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLAttributeDecl:
    com.amazonaws.javax.xml.stream.xerces.xni.QName name -> name
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLSimpleType simpleType -> simpleType
    boolean optional -> optional
    void setValues(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLSimpleType,boolean) -> setValues
    void clear() -> clear
com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLElementDecl -> com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLElementDecl:
    short TYPE_ANY -> TYPE_ANY
    short TYPE_EMPTY -> TYPE_EMPTY
    short TYPE_MIXED -> TYPE_MIXED
    short TYPE_CHILDREN -> TYPE_CHILDREN
    short TYPE_SIMPLE -> TYPE_SIMPLE
    com.amazonaws.javax.xml.stream.xerces.xni.QName name -> name
    int scope -> scope
    short type -> type
    com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLSimpleType simpleType -> simpleType
    void setValues(com.amazonaws.javax.xml.stream.xerces.xni.QName,int,short,com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLSimpleType) -> setValues
    void clear() -> clear
com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLNotationDecl -> com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLNotationDecl:
    java.lang.String name -> name
    java.lang.String publicId -> publicId
    java.lang.String systemId -> systemId
    java.lang.String baseSystemId -> baseSystemId
    void setValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setValues
    void clear() -> clear
com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLSimpleType -> com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLSimpleType:
    short TYPE_CDATA -> TYPE_CDATA
    short TYPE_ENTITY -> TYPE_ENTITY
    short TYPE_ENUMERATION -> TYPE_ENUMERATION
    short TYPE_ID -> TYPE_ID
    short TYPE_IDREF -> TYPE_IDREF
    short TYPE_NMTOKEN -> TYPE_NMTOKEN
    short TYPE_NOTATION -> TYPE_NOTATION
    short TYPE_NAMED -> TYPE_NAMED
    short DEFAULT_TYPE_DEFAULT -> DEFAULT_TYPE_DEFAULT
    short DEFAULT_TYPE_FIXED -> DEFAULT_TYPE_FIXED
    short DEFAULT_TYPE_IMPLIED -> DEFAULT_TYPE_IMPLIED
    short DEFAULT_TYPE_REQUIRED -> DEFAULT_TYPE_REQUIRED
    short type -> type
    java.lang.String name -> name
    java.lang.String[] enumeration -> enumeration
    boolean list -> list
    short defaultType -> defaultType
    java.lang.String defaultValue -> defaultValue
    java.lang.String nonNormalizedDefaultValue -> nonNormalizedDefaultValue
    void setValues(short,java.lang.String,java.lang.String[],boolean,short,java.lang.String,java.lang.String) -> setValues
    void setValues(com.amazonaws.javax.xml.stream.dtd.nonvalidating.XMLSimpleType) -> setValues
    void clear() -> clear
com.amazonaws.javax.xml.stream.events.Attribute -> com.amazonaws.javax.xml.stream.events.Attribute:
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getDTDType() -> getDTDType
    boolean isSpecified() -> isSpecified
com.amazonaws.javax.xml.stream.events.AttributeImpl -> com.amazonaws.javax.xml.stream.events.AttributeImpl:
    java.lang.String fValue -> b
    java.lang.String fNonNormalizedvalue -> c
    com.amazonaws.javax.xml.namespace.QName fQName -> d
    java.lang.String fAttributeType -> e
    boolean fIsSpecified -> f
    java.lang.String toString() -> toString
    void setName(com.amazonaws.javax.xml.namespace.QName) -> setName
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    void setValue(java.lang.String) -> setValue
    java.lang.String getValue() -> getValue
    void setNonNormalizedValue(java.lang.String) -> setNonNormalizedValue
    java.lang.String getNonNormalizedValue() -> getNonNormalizedValue
    void setAttributeType(java.lang.String) -> setAttributeType
    java.lang.String getDTDType() -> getDTDType
    void setSpecified(boolean) -> setSpecified
    boolean isSpecified() -> isSpecified
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
    void init() -> a
com.amazonaws.javax.xml.stream.events.CharacterEvent -> com.amazonaws.javax.xml.stream.events.CharacterEvent:
    java.lang.String fData -> b
    boolean fIsCData -> c
    boolean fIsIgnorableWhitespace -> d
    boolean fIsSpace -> e
    boolean fCheckIfSpaceNeeded -> f
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    boolean isCData() -> isCData
    java.lang.String toString() -> toString
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
    boolean isIgnorableWhiteSpace() -> isIgnorableWhiteSpace
    boolean isWhiteSpace() -> isWhiteSpace
com.amazonaws.javax.xml.stream.events.Characters -> com.amazonaws.javax.xml.stream.events.Characters:
    java.lang.String getData() -> getData
    boolean isWhiteSpace() -> isWhiteSpace
    boolean isCData() -> isCData
    boolean isIgnorableWhiteSpace() -> isIgnorableWhiteSpace
com.amazonaws.javax.xml.stream.events.Comment -> com.amazonaws.javax.xml.stream.events.Comment:
    java.lang.String getText() -> getText
com.amazonaws.javax.xml.stream.events.CommentEvent -> com.amazonaws.javax.xml.stream.events.CommentEvent:
    java.lang.String fText -> b
    java.lang.String toString() -> toString
    java.lang.String getText() -> getText
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
com.amazonaws.javax.xml.stream.events.DTD -> com.amazonaws.javax.xml.stream.events.DTD:
    java.lang.String getDocumentTypeDeclaration() -> getDocumentTypeDeclaration
    java.lang.Object getProcessedDTD() -> getProcessedDTD
    java.util.List getNotations() -> getNotations
    java.util.List getEntities() -> getEntities
com.amazonaws.javax.xml.stream.events.DTDEvent -> com.amazonaws.javax.xml.stream.events.DTDEvent:
    java.lang.String fDoctypeDeclaration -> b
    java.util.List fNotations -> c
    java.util.List fEntities -> d
    void setDocumentTypeDeclaration(java.lang.String) -> setDocumentTypeDeclaration
    java.lang.String getDocumentTypeDeclaration() -> getDocumentTypeDeclaration
    void setEntities(java.util.List) -> setEntities
    java.util.List getEntities() -> getEntities
    void setNotations(java.util.List) -> setNotations
    java.util.List getNotations() -> getNotations
    java.lang.Object getProcessedDTD() -> getProcessedDTD
    java.lang.String toString() -> toString
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
com.amazonaws.javax.xml.stream.events.DummyEvent -> com.amazonaws.javax.xml.stream.events.DummyEvent:
    int fEventType -> b
    com.amazonaws.javax.xml.stream.Location fLocation -> a
    int getEventType() -> getEventType
    void setEventType(int) -> a
    boolean isStartElement() -> isStartElement
    boolean isEndElement() -> isEndElement
    boolean isEntityReference() -> isEntityReference
    boolean isProcessingInstruction() -> isProcessingInstruction
    boolean isCharacterData() -> isCharacterData
    boolean isStartDocument() -> isStartDocument
    boolean isEndDocument() -> isEndDocument
    com.amazonaws.javax.xml.stream.Location getLocation() -> getLocation
    void setLocation(com.amazonaws.javax.xml.stream.Location) -> a
    com.amazonaws.javax.xml.stream.events.Characters asCharacters() -> asCharacters
    com.amazonaws.javax.xml.stream.events.EndElement asEndElement() -> asEndElement
    com.amazonaws.javax.xml.stream.events.StartElement asStartElement() -> asStartElement
    com.amazonaws.javax.xml.namespace.QName getSchemaType() -> getSchemaType
    boolean isAttribute() -> isAttribute
    boolean isCharacters() -> isCharacters
    boolean isNamespace() -> isNamespace
    void writeAsEncodedUnicode(java.io.Writer) -> writeAsEncodedUnicode
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
    void charEncode(java.io.Writer,java.lang.String) -> a
com.amazonaws.javax.xml.stream.events.EndDocument -> com.amazonaws.javax.xml.stream.events.EndDocument:
com.amazonaws.javax.xml.stream.events.EndDocumentEvent -> com.amazonaws.javax.xml.stream.events.EndDocumentEvent:
    java.lang.String toString() -> toString
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
com.amazonaws.javax.xml.stream.events.EndElement -> com.amazonaws.javax.xml.stream.events.EndElement:
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    java.util.Iterator getNamespaces() -> getNamespaces
com.amazonaws.javax.xml.stream.events.EndElementEvent -> com.amazonaws.javax.xml.stream.events.EndElementEvent:
    java.util.List fNamespaces -> b
    com.amazonaws.javax.xml.namespace.QName fQName -> c
    void init() -> a
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    void setName(com.amazonaws.javax.xml.namespace.QName) -> setName
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
    java.util.Iterator getNamespaces() -> getNamespaces
    void addNamespace(com.amazonaws.javax.xml.stream.events.Namespace) -> a
    java.lang.String toString() -> toString
    java.lang.String nameAsString() -> nameAsString
com.amazonaws.javax.xml.stream.events.EntityDeclaration -> com.amazonaws.javax.xml.stream.events.EntityDeclaration:
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
    java.lang.String getName() -> getName
    java.lang.String getNotationName() -> getNotationName
    java.lang.String getReplacementText() -> getReplacementText
    java.lang.String getBaseURI() -> getBaseURI
com.amazonaws.javax.xml.stream.events.EntityDeclarationImpl -> com.amazonaws.javax.xml.stream.events.EntityDeclarationImpl:
    com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier fXMLResourceIdentifier -> b
    java.lang.String fEntityName -> c
    java.lang.String fReplacementText -> d
    java.lang.String fNotationName -> e
    void setEntityName(java.lang.String) -> setEntityName
    java.lang.String getEntityName() -> getEntityName
    void setEntityReplacementText(java.lang.String) -> setEntityReplacementText
    void setXMLResourceIdentifier(com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier) -> setXMLResourceIdentifier
    com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier getXMLResourceIdentifier() -> getXMLResourceIdentifier
    java.lang.String getSystemId() -> getSystemId
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getBaseURI() -> getBaseURI
    java.lang.String getName() -> getName
    java.lang.String getNotationName() -> getNotationName
    void setNotationName(java.lang.String) -> setNotationName
    java.lang.String getReplacementText() -> getReplacementText
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
com.amazonaws.javax.xml.stream.events.EntityReference -> com.amazonaws.javax.xml.stream.events.EntityReference:
    com.amazonaws.javax.xml.stream.events.EntityDeclaration getDeclaration() -> getDeclaration
    java.lang.String getName() -> getName
com.amazonaws.javax.xml.stream.events.EntityReferenceEvent -> com.amazonaws.javax.xml.stream.events.EntityReferenceEvent:
    com.amazonaws.javax.xml.stream.events.EntityDeclaration fEntityDeclaration -> b
    java.lang.String fEntityName -> c
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
    com.amazonaws.javax.xml.stream.events.EntityDeclaration getDeclaration() -> getDeclaration
com.amazonaws.javax.xml.stream.events.LocationImpl -> com.amazonaws.javax.xml.stream.events.LocationImpl:
    int getCharacterOffset() -> getCharacterOffset
    int getColumnNumber() -> getColumnNumber
    int getLineNumber() -> getLineNumber
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.events.NamedEvent -> com.amazonaws.javax.xml.stream.events.NamedEvent:
    com.amazonaws.javax.xml.namespace.QName name -> b
    java.lang.String getPrefix() -> getPrefix
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    void setName(com.amazonaws.javax.xml.namespace.QName) -> setName
    java.lang.String nameAsString() -> nameAsString
    java.lang.String getNamespace() -> getNamespace
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
com.amazonaws.javax.xml.stream.events.Namespace -> com.amazonaws.javax.xml.stream.events.Namespace:
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    boolean isDefaultNamespaceDeclaration() -> isDefaultNamespaceDeclaration
com.amazonaws.javax.xml.stream.events.NamespaceImpl -> com.amazonaws.javax.xml.stream.events.NamespaceImpl:
    boolean isDefaultNamespaceDeclaration() -> isDefaultNamespaceDeclaration
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    void init() -> a
    int getEventType() -> getEventType
    boolean isNamespace() -> isNamespace
com.amazonaws.javax.xml.stream.events.NotationDeclaration -> com.amazonaws.javax.xml.stream.events.NotationDeclaration:
    java.lang.String getName() -> getName
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
com.amazonaws.javax.xml.stream.events.NotationDeclarationImpl -> com.amazonaws.javax.xml.stream.events.NotationDeclarationImpl:
    java.lang.String fName -> b
    java.lang.String fPublicId -> c
    java.lang.String fSystemId -> d
    java.lang.String getName() -> getName
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
com.amazonaws.javax.xml.stream.events.ProcessingInstruction -> com.amazonaws.javax.xml.stream.events.ProcessingInstruction:
    java.lang.String getTarget() -> getTarget
    java.lang.String getData() -> getData
com.amazonaws.javax.xml.stream.events.ProcessingInstructionEvent -> com.amazonaws.javax.xml.stream.events.ProcessingInstructionEvent:
    java.lang.String fName -> b
    java.lang.String fContent -> c
    java.lang.String getTarget() -> getTarget
    void setTarget(java.lang.String) -> setTarget
    void setData(java.lang.String) -> setData
    java.lang.String getData() -> getData
    java.lang.String toString() -> toString
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
com.amazonaws.javax.xml.stream.events.StartDocument -> com.amazonaws.javax.xml.stream.events.StartDocument:
    java.lang.String getSystemId() -> getSystemId
    java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    boolean encodingSet() -> encodingSet
    boolean isStandalone() -> isStandalone
    boolean standaloneSet() -> standaloneSet
    java.lang.String getVersion() -> getVersion
com.amazonaws.javax.xml.stream.events.StartDocumentEvent -> com.amazonaws.javax.xml.stream.events.StartDocumentEvent:
    java.lang.String fEncodingScheam -> b
    boolean fStandalone -> c
    java.lang.String fVersion -> d
    boolean fEncodingSchemeSet -> e
    boolean fStandaloneSet -> f
    void init(java.lang.String,java.lang.String,boolean,com.amazonaws.javax.xml.stream.Location) -> a
    java.lang.String getSystemId() -> getSystemId
    java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    boolean isStandalone() -> isStandalone
    java.lang.String getVersion() -> getVersion
    void setStandalone(boolean) -> setStandalone
    void setStandalone(java.lang.String) -> setStandalone
    boolean encodingSet() -> encodingSet
    boolean standaloneSet() -> standaloneSet
    void setEncoding(java.lang.String) -> setEncoding
    void setDeclaredEncoding(boolean) -> a
    void setVersion(java.lang.String) -> setVersion
    java.lang.String toString() -> toString
    boolean isStartDocument() -> isStartDocument
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
com.amazonaws.javax.xml.stream.events.StartElement -> com.amazonaws.javax.xml.stream.events.StartElement:
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    java.util.Iterator getAttributes() -> getAttributes
    java.util.Iterator getNamespaces() -> getNamespaces
    com.amazonaws.javax.xml.stream.events.Attribute getAttributeByName(com.amazonaws.javax.xml.namespace.QName) -> getAttributeByName
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
com.amazonaws.javax.xml.stream.events.StartElementEvent -> com.amazonaws.javax.xml.stream.events.StartElementEvent:
    java.util.Map fAttributes -> b
    java.util.List fNamespaces -> c
    com.amazonaws.javax.xml.namespace.NamespaceContext fNamespaceContext -> d
    com.amazonaws.javax.xml.namespace.QName fQName -> e
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    void setName(com.amazonaws.javax.xml.namespace.QName) -> setName
    java.util.Iterator getAttributes() -> getAttributes
    java.util.Iterator getNamespaces() -> getNamespaces
    com.amazonaws.javax.xml.stream.events.Attribute getAttributeByName(com.amazonaws.javax.xml.namespace.QName) -> getAttributeByName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    java.lang.String toString() -> toString
    java.lang.String nameAsString() -> nameAsString
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    void setNamespaceContext(com.amazonaws.javax.xml.namespace.NamespaceContext) -> setNamespaceContext
    void writeAsEncodedUnicodeEx(java.io.Writer) -> a
    void addAttribute(com.amazonaws.javax.xml.stream.events.Attribute) -> a
    void addAttributes(java.util.Iterator) -> a
    void addNamespaceAttribute(com.amazonaws.javax.xml.stream.events.Namespace) -> a
    void addNamespaceAttributes(java.util.Iterator) -> b
com.amazonaws.javax.xml.stream.events.XMLEvent -> com.amazonaws.javax.xml.stream.events.XMLEvent:
    int getEventType() -> getEventType
    com.amazonaws.javax.xml.stream.Location getLocation() -> getLocation
    boolean isStartElement() -> isStartElement
    boolean isAttribute() -> isAttribute
    boolean isNamespace() -> isNamespace
    boolean isEndElement() -> isEndElement
    boolean isEntityReference() -> isEntityReference
    boolean isProcessingInstruction() -> isProcessingInstruction
    boolean isCharacters() -> isCharacters
    boolean isStartDocument() -> isStartDocument
    boolean isEndDocument() -> isEndDocument
    com.amazonaws.javax.xml.stream.events.StartElement asStartElement() -> asStartElement
    com.amazonaws.javax.xml.stream.events.EndElement asEndElement() -> asEndElement
    com.amazonaws.javax.xml.stream.events.Characters asCharacters() -> asCharacters
    com.amazonaws.javax.xml.namespace.QName getSchemaType() -> getSchemaType
    void writeAsEncodedUnicode(java.io.Writer) -> writeAsEncodedUnicode
com.amazonaws.javax.xml.stream.events.XMLEventAllocatorImpl -> com.amazonaws.javax.xml.stream.events.XMLEventAllocatorImpl:
    com.amazonaws.javax.xml.stream.events.XMLEvent allocate(com.amazonaws.javax.xml.stream.XMLStreamReader) -> allocate
    void allocate(com.amazonaws.javax.xml.stream.XMLStreamReader,com.amazonaws.javax.xml.stream.util.XMLEventConsumer) -> allocate
    com.amazonaws.javax.xml.stream.util.XMLEventAllocator newInstance() -> newInstance
    com.amazonaws.javax.xml.stream.events.XMLEvent getXMLEvent(com.amazonaws.javax.xml.stream.XMLStreamReader) -> a
    com.amazonaws.javax.xml.namespace.QName getQName(com.amazonaws.javax.xml.stream.XMLStreamReader) -> b
com.amazonaws.javax.xml.stream.events.ZephyrEventFactory -> com.amazonaws.javax.xml.stream.events.ZephyrEventFactory:
    com.amazonaws.javax.xml.stream.Location location -> a
    com.amazonaws.javax.xml.stream.events.Attribute createAttribute(java.lang.String,java.lang.String) -> createAttribute
    com.amazonaws.javax.xml.stream.events.Attribute createAttribute(com.amazonaws.javax.xml.namespace.QName,java.lang.String) -> createAttribute
    com.amazonaws.javax.xml.stream.events.Attribute createAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createAttribute
    com.amazonaws.javax.xml.stream.events.Characters createCData(java.lang.String) -> createCData
    com.amazonaws.javax.xml.stream.events.Characters createCharacters(java.lang.String) -> createCharacters
    com.amazonaws.javax.xml.stream.events.Comment createComment(java.lang.String) -> createComment
    com.amazonaws.javax.xml.stream.events.DTD createDTD(java.lang.String) -> createDTD
    com.amazonaws.javax.xml.stream.events.EndDocument createEndDocument() -> createEndDocument
    com.amazonaws.javax.xml.stream.events.EndElement createEndElement(com.amazonaws.javax.xml.namespace.QName,java.util.Iterator) -> createEndElement
    com.amazonaws.javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String) -> createEndElement
    com.amazonaws.javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator) -> createEndElement
    com.amazonaws.javax.xml.stream.events.EntityReference createEntityReference(java.lang.String,com.amazonaws.javax.xml.stream.events.EntityDeclaration) -> createEntityReference
    com.amazonaws.javax.xml.stream.events.Characters createIgnorableSpace(java.lang.String) -> createIgnorableSpace
    com.amazonaws.javax.xml.stream.events.Namespace createNamespace(java.lang.String) -> createNamespace
    com.amazonaws.javax.xml.stream.events.Namespace createNamespace(java.lang.String,java.lang.String) -> createNamespace
    com.amazonaws.javax.xml.stream.events.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String) -> createProcessingInstruction
    com.amazonaws.javax.xml.stream.events.Characters createSpace(java.lang.String) -> createSpace
    com.amazonaws.javax.xml.stream.events.StartDocument createStartDocument() -> createStartDocument
    com.amazonaws.javax.xml.stream.events.StartDocument createStartDocument(java.lang.String) -> createStartDocument
    com.amazonaws.javax.xml.stream.events.StartDocument createStartDocument(java.lang.String,java.lang.String) -> createStartDocument
    com.amazonaws.javax.xml.stream.events.StartDocument createStartDocument(java.lang.String,java.lang.String,boolean) -> createStartDocument
    com.amazonaws.javax.xml.stream.events.StartElement createStartElement(com.amazonaws.javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator) -> createStartElement
    com.amazonaws.javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String) -> createStartElement
    com.amazonaws.javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator) -> createStartElement
    com.amazonaws.javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator,com.amazonaws.javax.xml.namespace.NamespaceContext) -> createStartElement
    void setLocation(com.amazonaws.javax.xml.stream.Location) -> setLocation
com.amazonaws.javax.xml.stream.util.BufferAllocator -> com.amazonaws.javax.xml.stream.util.BufferAllocator:
    int SMALL_SIZE_LIMIT -> SMALL_SIZE_LIMIT
    int MEDIUM_SIZE_LIMIT -> MEDIUM_SIZE_LIMIT
    int LARGE_SIZE_LIMIT -> LARGE_SIZE_LIMIT
    char[] smallCharBuffer -> a
    char[] mediumCharBuffer -> b
    char[] largeCharBuffer -> c
    byte[] smallByteBuffer -> d
    byte[] mediumByteBuffer -> e
    byte[] largeByteBuffer -> f
    char[] getCharBuffer(int) -> getCharBuffer
    void returnCharBuffer(char[]) -> returnCharBuffer
    byte[] getByteBuffer(int) -> getByteBuffer
    void returnByteBuffer(byte[]) -> returnByteBuffer
com.amazonaws.javax.xml.stream.util.EventReaderDelegate -> com.amazonaws.javax.xml.stream.util.EventReaderDelegate:
    com.amazonaws.javax.xml.stream.XMLEventReader reader -> a
    void setParent(com.amazonaws.javax.xml.stream.XMLEventReader) -> setParent
    com.amazonaws.javax.xml.stream.XMLEventReader getParent() -> getParent
    com.amazonaws.javax.xml.stream.events.XMLEvent nextEvent() -> nextEvent
    java.lang.Object next() -> next
    boolean hasNext() -> hasNext
    com.amazonaws.javax.xml.stream.events.XMLEvent peek() -> peek
    void close() -> close
    java.lang.String getElementText() -> getElementText
    com.amazonaws.javax.xml.stream.events.XMLEvent nextTag() -> nextTag
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void remove() -> remove
com.amazonaws.javax.xml.stream.util.ReadOnlyIterator -> com.amazonaws.javax.xml.stream.util.ReadOnlyIterator:
    java.util.Iterator iterator -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.amazonaws.javax.xml.stream.util.StreamReaderDelegate -> com.amazonaws.javax.xml.stream.util.StreamReaderDelegate:
    com.amazonaws.javax.xml.stream.XMLStreamReader reader -> a
    void setParent(com.amazonaws.javax.xml.stream.XMLStreamReader) -> setParent
    com.amazonaws.javax.xml.stream.XMLStreamReader getParent() -> getParent
    int next() -> next
    int nextTag() -> nextTag
    java.lang.String getElementText() -> getElementText
    void require(int,java.lang.String,java.lang.String) -> require
    boolean hasNext() -> hasNext
    void close() -> close
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    boolean isStartElement() -> isStartElement
    boolean isEndElement() -> isEndElement
    boolean isCharacters() -> isCharacters
    boolean isWhiteSpace() -> isWhiteSpace
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getAttributeCount() -> getAttributeCount
    com.amazonaws.javax.xml.namespace.QName getAttributeName(int) -> getAttributeName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeLocalName(int) -> getAttributeLocalName
    java.lang.String getAttributeType(int) -> getAttributeType
    java.lang.String getAttributeValue(int) -> getAttributeValue
    boolean isAttributeSpecified(int) -> isAttributeSpecified
    int getNamespaceCount() -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceURI(int) -> getNamespaceURI
    int getEventType() -> getEventType
    java.lang.String getText() -> getText
    int getTextCharacters(int,char[],int,int) -> getTextCharacters
    char[] getTextCharacters() -> getTextCharacters
    int getTextStart() -> getTextStart
    int getTextLength() -> getTextLength
    java.lang.String getEncoding() -> getEncoding
    boolean hasText() -> hasText
    com.amazonaws.javax.xml.stream.Location getLocation() -> getLocation
    com.amazonaws.javax.xml.namespace.QName getName() -> getName
    java.lang.String getLocalName() -> getLocalName
    boolean hasName() -> hasName
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getVersion() -> getVersion
    boolean isStandalone() -> isStandalone
    boolean standaloneSet() -> standaloneSet
    java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    java.lang.String getPITarget() -> getPITarget
    java.lang.String getPIData() -> getPIData
    java.lang.Object getProperty(java.lang.String) -> getProperty
com.amazonaws.javax.xml.stream.util.ThreadLocalBufferAllocator -> com.amazonaws.javax.xml.stream.util.ThreadLocalBufferAllocator:
    java.lang.ThreadLocal tlba -> a
    com.amazonaws.javax.xml.stream.util.BufferAllocator getBufferAllocator() -> getBufferAllocator
com.amazonaws.javax.xml.stream.util.XMLEventAllocator -> com.amazonaws.javax.xml.stream.util.XMLEventAllocator:
    com.amazonaws.javax.xml.stream.util.XMLEventAllocator newInstance() -> newInstance
    com.amazonaws.javax.xml.stream.events.XMLEvent allocate(com.amazonaws.javax.xml.stream.XMLStreamReader) -> allocate
    void allocate(com.amazonaws.javax.xml.stream.XMLStreamReader,com.amazonaws.javax.xml.stream.util.XMLEventConsumer) -> allocate
com.amazonaws.javax.xml.stream.util.XMLEventConsumer -> com.amazonaws.javax.xml.stream.util.XMLEventConsumer:
    void add(com.amazonaws.javax.xml.stream.events.XMLEvent) -> add
com.amazonaws.javax.xml.stream.writers.UTF8OutputStreamWriter -> com.amazonaws.javax.xml.stream.writers.UTF8OutputStreamWriter:
    java.io.OutputStream out -> a
    int lastUTF16CodePoint -> b
    java.lang.String getEncoding() -> getEncoding
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void flush() -> flush
    void close() -> close
com.amazonaws.javax.xml.stream.writers.XMLDOMWriterImpl -> com.amazonaws.javax.xml.stream.writers.XMLDOMWriterImpl:
    org.w3c.dom.Document ownerDoc -> a
    org.w3c.dom.Node currentNode -> b
    org.w3c.dom.Node node -> c
    org.xml.sax.helpers.NamespaceSupport namespaceContext -> d
    java.lang.reflect.Method mXmlVersion -> e
    boolean[] needContextPop -> f
    java.lang.StringBuffer stringBuffer -> g
    int resizeValue -> h
    int depth -> i
    java.lang.Class class$java$lang$String -> j
    void close() -> close
    void flush() -> flush
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    void setNamespaceContext(com.amazonaws.javax.xml.namespace.NamespaceContext) -> setNamespaceContext
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void writeAttribute(java.lang.String,java.lang.String) -> writeAttribute
    void writeAttribute(java.lang.String,java.lang.String,java.lang.String) -> writeAttribute
    void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> writeAttribute
    void writeCData(java.lang.String) -> writeCData
    void writeCharacters(java.lang.String) -> writeCharacters
    void writeCharacters(char[],int,int) -> writeCharacters
    void writeComment(java.lang.String) -> writeComment
    void writeDTD(java.lang.String) -> writeDTD
    void writeDefaultNamespace(java.lang.String) -> writeDefaultNamespace
    void writeEmptyElement(java.lang.String) -> writeEmptyElement
    void writeEmptyElement(java.lang.String,java.lang.String) -> writeEmptyElement
    void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String) -> writeEmptyElement
    void writeEndDocument() -> writeEndDocument
    void writeEndElement() -> writeEndElement
    void writeEntityRef(java.lang.String) -> writeEntityRef
    void writeNamespace(java.lang.String,java.lang.String) -> writeNamespace
    void writeProcessingInstruction(java.lang.String) -> writeProcessingInstruction
    void writeProcessingInstruction(java.lang.String,java.lang.String) -> writeProcessingInstruction
    void writeStartDocument() -> writeStartDocument
    void writeStartDocument(java.lang.String) -> writeStartDocument
    void writeStartDocument(java.lang.String,java.lang.String) -> writeStartDocument
    void writeStartElement(java.lang.String) -> writeStartElement
    void writeStartElement(java.lang.String,java.lang.String) -> writeStartElement
    void writeStartElement(java.lang.String,java.lang.String,java.lang.String) -> writeStartElement
    java.lang.String getQName(java.lang.String,java.lang.String) -> a
    org.w3c.dom.Node getNode() -> a
    java.lang.Class class$(java.lang.String) -> a
com.amazonaws.javax.xml.stream.writers.XMLEventWriterImpl -> com.amazonaws.javax.xml.stream.writers.XMLEventWriterImpl:
    com.amazonaws.javax.xml.stream.XMLStreamWriter fStreamWriter -> a
    void add(com.amazonaws.javax.xml.stream.XMLEventReader) -> add
    void add(com.amazonaws.javax.xml.stream.events.XMLEvent) -> add
    void close() -> close
    void flush() -> flush
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    void setNamespaceContext(com.amazonaws.javax.xml.namespace.NamespaceContext) -> setNamespaceContext
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
com.amazonaws.javax.xml.stream.writers.XMLOutputSource -> com.amazonaws.javax.xml.stream.writers.XMLOutputSource:
com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl -> com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl:
    java.lang.String START_COMMENT -> START_COMMENT
    java.lang.String END_COMMENT -> END_COMMENT
    java.lang.String DEFAULT_ENCODING -> DEFAULT_ENCODING
    java.lang.String DEFAULT_XMLDECL -> DEFAULT_XMLDECL
    java.lang.String DEFAULT_XML_VERSION -> DEFAULT_XML_VERSION
    char CLOSE_START_TAG -> CLOSE_START_TAG
    char OPEN_START_TAG -> OPEN_START_TAG
    java.lang.String OPEN_END_TAG -> OPEN_END_TAG
    char CLOSE_END_TAG -> CLOSE_END_TAG
    java.lang.String START_CDATA -> START_CDATA
    java.lang.String END_CDATA -> END_CDATA
    java.lang.String CLOSE_EMPTY_ELEMENT -> CLOSE_EMPTY_ELEMENT
    java.lang.String SPACE -> SPACE
    java.lang.String UTF_8 -> UTF_8
    java.lang.String OUTPUTSTREAM_PROPERTY -> OUTPUTSTREAM_PROPERTY
    boolean fEscapeCharacters -> a
    boolean fIsRepairingNamespace -> b
    java.io.Writer fWriter -> c
    java.io.OutputStream fOutputStream -> d
    java.util.ArrayList fAttributeCache -> e
    java.util.ArrayList fNamespaceDecls -> f
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$NamespaceContextImpl fNamespaceContext -> g
    com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport fInternalNamespaceContext -> h
    java.util.Random fPrefixGen -> i
    com.amazonaws.javax.xml.stream.PropertyManager fPropertyManager -> j
    boolean fStartTagOpened -> k
    boolean fReuse -> l
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> m
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementStack fElementStack -> n
    java.lang.String DEFAULT_PREFIX -> o
    com.amazonaws.javax.xml.stream.util.ReadOnlyIterator fReadOnlyIterator -> p
    java.nio.charset.CharsetEncoder fEncoder -> q
    java.util.HashMap fAttrNamespace -> r
    void reset() -> reset
    void setOutput(com.amazonaws.javax.xml.transform.stream.StreamResult,java.lang.String) -> setOutput
    void setOutputUsingStream(java.io.OutputStream,java.lang.String) -> a
    boolean canReuse() -> canReuse
    void setEscapeCharacters(boolean) -> setEscapeCharacters
    boolean getEscapeCharacters() -> getEscapeCharacters
    void close() -> close
    void flush() -> flush
    com.amazonaws.javax.xml.namespace.NamespaceContext getNamespaceContext() -> getNamespaceContext
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    void setNamespaceContext(com.amazonaws.javax.xml.namespace.NamespaceContext) -> setNamespaceContext
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void writeAttribute(java.lang.String,java.lang.String) -> writeAttribute
    void writeAttribute(java.lang.String,java.lang.String,java.lang.String) -> writeAttribute
    void writeAttributeWithPrefix(java.lang.String,java.lang.String,java.lang.String) -> a
    void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> writeAttribute
    void writeCData(java.lang.String) -> writeCData
    void writeCharacters(java.lang.String) -> writeCharacters
    void writeCharacters(char[],int,int) -> writeCharacters
    void writeComment(java.lang.String) -> writeComment
    void writeDTD(java.lang.String) -> writeDTD
    void writeDefaultNamespace(java.lang.String) -> writeDefaultNamespace
    void writeEmptyElement(java.lang.String) -> writeEmptyElement
    void writeEmptyElement(java.lang.String,java.lang.String) -> writeEmptyElement
    void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String) -> writeEmptyElement
    void writeEndDocument() -> writeEndDocument
    void writeEndElement() -> writeEndElement
    void writeEntityRef(java.lang.String) -> writeEntityRef
    void writeNamespace(java.lang.String,java.lang.String) -> writeNamespace
    void writenamespace(java.lang.String,java.lang.String) -> a
    void writeProcessingInstruction(java.lang.String) -> writeProcessingInstruction
    void writeProcessingInstruction(java.lang.String,java.lang.String) -> writeProcessingInstruction
    void writeStartDocument() -> writeStartDocument
    void writeStartDocument(java.lang.String) -> writeStartDocument
    void writeStartDocument(java.lang.String,java.lang.String) -> writeStartDocument
    void writeStartElement(java.lang.String) -> writeStartElement
    void writeStartElement(java.lang.String,java.lang.String) -> writeStartElement
    void writeStartElement(java.lang.String,java.lang.String,java.lang.String) -> writeStartElement
    void writeXMLContent(java.lang.String,boolean,boolean) -> a
    void closeStartTag() -> a
    void openStartTag() -> b
    void correctPrefix(com.amazonaws.javax.xml.stream.xerces.xni.QName,int) -> a
    java.lang.String getAttrPrefix(java.lang.String) -> a
    void correctPrefix(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.QName) -> a
    void checkForNull(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> a
    void repairNamespaceDecl(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable access$000(com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl) -> a
    com.amazonaws.javax.xml.stream.util.ReadOnlyIterator access$100(com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl) -> b
com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$Attribute -> com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$Attribute:
    java.lang.String value -> a
com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementStack -> com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementStack:
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementState[] fElements -> a
    short fDepth -> b
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl this$0 -> c
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementState push(com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementState) -> push
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementState push(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> push
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementState pop() -> pop
    void clear() -> clear
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementState peek() -> peek
    boolean empty() -> empty
com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementState -> com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$ElementState:
    boolean isEmpty -> isEmpty
    void setValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> setValues
com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$NamespaceContextImpl -> com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl$NamespaceContextImpl:
    com.amazonaws.javax.xml.namespace.NamespaceContext userContext -> a
    com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport internalContext -> b
    com.amazonaws.javax.xml.stream.writers.XMLStreamWriterImpl this$0 -> c
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    java.util.Iterator getPrefixes(java.lang.String) -> getPrefixes
com.amazonaws.javax.xml.stream.writers.XMLWriter -> com.amazonaws.javax.xml.stream.writers.XMLWriter:
    java.io.Writer writer -> a
    int size -> b
    com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer buffer -> c
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String,int,int) -> write
    void write(java.lang.String) -> write
    void close() -> close
    void flush() -> flush
    void reset() -> reset
    void setWriter(java.io.Writer) -> setWriter
    void setWriter(java.io.Writer,int) -> setWriter
    java.io.Writer getWriter() -> a
    void conditionalWrite() -> b
    void writeBufferedData() -> c
    void ensureOpen() -> d
com.amazonaws.javax.xml.stream.xerces.impl.io.ASCIIReader -> com.amazonaws.javax.xml.stream.xerces.impl.io.ASCIIReader:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.InputStream fInputStream -> a
    byte[] fBuffer -> b
    com.amazonaws.javax.xml.stream.xerces.util.MessageFormatter fFormatter -> c
    java.util.Locale fLocale -> d
    int read() -> read
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void close() -> close
com.amazonaws.javax.xml.stream.xerces.impl.io.UCSReader -> com.amazonaws.javax.xml.stream.xerces.impl.io.UCSReader:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    short UCS2LE -> UCS2LE
    short UCS2BE -> UCS2BE
    short UCS4LE -> UCS4LE
    short UCS4BE -> UCS4BE
    java.io.InputStream fInputStream -> a
    byte[] fBuffer -> b
    short fEncoding -> c
    int read() -> read
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void close() -> close
com.amazonaws.javax.xml.stream.xerces.impl.io.UTF8Reader -> com.amazonaws.javax.xml.stream.xerces.impl.io.UTF8Reader:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.InputStream fInputStream -> a
    byte[] fBuffer -> b
    int fOffset -> c
    int fSurrogate -> d
    com.amazonaws.javax.xml.stream.xerces.util.MessageFormatter fFormatter -> e
    java.util.Locale fLocale -> f
    int read() -> read
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void close() -> close
    void expectedByte(int,int) -> a
    void invalidByte$4868d30e(int,int) -> b
    void invalidSurrogate(int) -> a
com.amazonaws.javax.xml.stream.xerces.impl.msg.XMLMessageFormatter -> com.amazonaws.javax.xml.stream.xerces.impl.msg.XMLMessageFormatter:
    java.lang.String XML_DOMAIN -> XML_DOMAIN
    java.lang.String XMLNS_DOMAIN -> XMLNS_DOMAIN
    java.util.Locale fLocale -> a
    java.util.ResourceBundle fResourceBundle -> b
    java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[]) -> formatMessage
com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl -> com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl:
    com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$AugmentationsItemsContainer fAugmentationsContainer -> a
    java.lang.Object putItem(java.lang.String,java.lang.Object) -> putItem
    java.lang.Object getItem(java.lang.String) -> getItem
    java.lang.Object removeItem(java.lang.String) -> removeItem
    java.util.Enumeration keys() -> keys
    void removeAllItems() -> removeAllItems
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$AugmentationsItemsContainer -> com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$AugmentationsItemsContainer:
    java.lang.Object putItem(java.lang.Object,java.lang.Object) -> putItem
    java.lang.Object getItem(java.lang.Object) -> getItem
    java.lang.Object removeItem(java.lang.Object) -> removeItem
    java.util.Enumeration keys() -> keys
    void clear() -> clear
    boolean isFull() -> isFull
    com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$AugmentationsItemsContainer expand() -> expand
com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$LargeContainer -> com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$LargeContainer:
    java.util.Hashtable fAugmentations -> a
    java.lang.Object getItem(java.lang.Object) -> getItem
    java.lang.Object putItem(java.lang.Object,java.lang.Object) -> putItem
    java.lang.Object removeItem(java.lang.Object) -> removeItem
    java.util.Enumeration keys() -> keys
    void clear() -> clear
    boolean isFull() -> isFull
    com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$AugmentationsItemsContainer expand() -> expand
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$SmallContainer -> com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$SmallContainer:
    java.lang.Object[] fAugmentations -> a
    int fNumEntries -> b
    com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl this$0 -> c
    java.util.Enumeration keys() -> keys
    java.lang.Object getItem(java.lang.Object) -> getItem
    java.lang.Object putItem(java.lang.Object,java.lang.Object) -> putItem
    java.lang.Object removeItem(java.lang.Object) -> removeItem
    void clear() -> clear
    boolean isFull() -> isFull
    com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$AugmentationsItemsContainer expand() -> expand
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$SmallContainer$SmallContainerKeyEnumeration -> com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$SmallContainer$SmallContainerKeyEnumeration:
    java.lang.Object[] enumArray -> a
    int next -> b
    com.amazonaws.javax.xml.stream.xerces.util.AugmentationsImpl$SmallContainer this$1 -> c
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
com.amazonaws.javax.xml.stream.xerces.util.DefaultErrorHandler -> com.amazonaws.javax.xml.stream.xerces.util.DefaultErrorHandler:
    java.io.PrintWriter fOut -> a
    void warning(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException) -> warning
    void error(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException) -> error
    void fatalError(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException) -> fatalError
    void printError(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException) -> a
com.amazonaws.javax.xml.stream.xerces.util.EncodingMap -> com.amazonaws.javax.xml.stream.xerces.util.EncodingMap:
    java.util.Hashtable fIANA2JavaMap -> a
    java.util.Hashtable fJava2IANAMap -> b
    void putIANA2JavaMapping(java.lang.String,java.lang.String) -> putIANA2JavaMapping
    java.lang.String getIANA2JavaMapping(java.lang.String) -> getIANA2JavaMapping
    java.lang.String removeIANA2JavaMapping(java.lang.String) -> removeIANA2JavaMapping
    void putJava2IANAMapping(java.lang.String,java.lang.String) -> putJava2IANAMapping
    java.lang.String getJava2IANAMapping(java.lang.String) -> getJava2IANAMapping
    java.lang.String removeJava2IANAMapping(java.lang.String) -> removeJava2IANAMapping
com.amazonaws.javax.xml.stream.xerces.util.IntStack -> com.amazonaws.javax.xml.stream.xerces.util.IntStack:
    int fDepth -> a
    int[] fData -> b
    int size() -> size
    void push(int) -> push
    int peek() -> peek
    int pop() -> pop
    void clear() -> clear
    void print() -> print
com.amazonaws.javax.xml.stream.xerces.util.MessageFormatter -> com.amazonaws.javax.xml.stream.xerces.util.MessageFormatter:
    java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[]) -> formatMessage
com.amazonaws.javax.xml.stream.xerces.util.NamespaceContextWrapper -> com.amazonaws.javax.xml.stream.xerces.util.NamespaceContextWrapper:
    com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext fNamespaceContext -> a
    java.lang.String getNamespaceURI(java.lang.String) -> getNamespaceURI
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    java.util.Iterator getPrefixes(java.lang.String) -> getPrefixes
    com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext getNamespaceContext() -> getNamespaceContext
com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport -> com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport:
    java.lang.String[] fNamespace -> b
    int fNamespaceSize -> c
    int[] fContext -> d
    int fCurrentContext -> e
    java.lang.String[] fPrefixes -> a
    void reset() -> reset
    void pushContext() -> pushContext
    void popContext() -> popContext
    boolean declarePrefix(java.lang.String,java.lang.String) -> declarePrefix
    java.lang.String getURI(java.lang.String) -> getURI
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    int getDeclaredPrefixCount() -> getDeclaredPrefixCount
    java.lang.String getDeclaredPrefixAt(int) -> getDeclaredPrefixAt
    java.util.Iterator getPrefixes() -> getPrefixes
    java.util.Enumeration getAllPrefixes() -> getAllPrefixes
    java.util.Vector getPrefixes(java.lang.String) -> getPrefixes
    boolean containsPrefix(java.lang.String) -> containsPrefix
    boolean containsPrefixInCurrentContext(java.lang.String) -> containsPrefixInCurrentContext
com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport$IteratorPrefixes -> com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport$IteratorPrefixes:
    java.lang.String[] prefixes -> a
    int counter -> b
    int size -> c
    com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport this$0 -> d
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.lang.String toString() -> toString
    void remove() -> remove
com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport$Prefixes -> com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport$Prefixes:
    java.lang.String[] prefixes -> a
    int counter -> b
    int size -> c
    com.amazonaws.javax.xml.stream.xerces.util.NamespaceSupport this$0 -> d
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.xerces.util.ObjectFactory -> com.amazonaws.javax.xml.stream.xerces.util.ObjectFactory:
    java.lang.Class class$com$sun$xml$stream$xerces$util$ObjectFactory -> a
    java.lang.Object createObject(java.lang.String,java.lang.String) -> createObject
    java.lang.Object createObject(java.lang.String,java.lang.String,java.lang.String) -> createObject
    java.lang.ClassLoader findClassLoader() -> findClassLoader
    java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean) -> newInstance
    java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean) -> findProviderClass
    java.lang.Object findJarServiceProvider(java.lang.String) -> a
    java.lang.Class class$(java.lang.String) -> b
com.amazonaws.javax.xml.stream.xerces.util.ObjectFactory$ConfigurationError -> com.amazonaws.javax.xml.stream.xerces.util.ObjectFactory$ConfigurationError:
    java.lang.Exception exception -> a
    java.lang.Exception getException() -> getException
com.amazonaws.javax.xml.stream.xerces.util.ParserConfigurationSettings -> com.amazonaws.javax.xml.stream.xerces.util.ParserConfigurationSettings:
    java.util.Vector fRecognizedProperties -> a
    java.util.Hashtable fProperties -> b
    java.util.Vector fRecognizedFeatures -> c
    java.util.Hashtable fFeatures -> d
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager fParentSettings -> e
    void addRecognizedFeatures(java.lang.String[]) -> addRecognizedFeatures
    void setFeature(java.lang.String,boolean) -> setFeature
    void addRecognizedProperties(java.lang.String[]) -> addRecognizedProperties
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void checkFeature(java.lang.String) -> a
    void checkProperty(java.lang.String) -> b
com.amazonaws.javax.xml.stream.xerces.util.STAXAttributesImpl -> com.amazonaws.javax.xml.stream.xerces.util.STAXAttributesImpl:
    int attr_index -> a
    int MAGIC_NUMBER -> b
    boolean fNamespaces -> c
    java.util.ArrayList attrList -> d
    java.util.ArrayList dupList -> e
    boolean init -> f
    java.util.HashMap attrMap -> g
    void setNamespaces(boolean) -> setNamespaces
    int addAttribute(com.amazonaws.javax.xml.stream.xerces.xni.QName,java.lang.String,java.lang.String) -> addAttribute
    void removeAllAttributes() -> removeAllAttributes
    void removeAttributeAt(int) -> removeAttributeAt
    void setName(int,com.amazonaws.javax.xml.stream.xerces.xni.QName) -> setName
    void getName(int,com.amazonaws.javax.xml.stream.xerces.xni.QName) -> getName
    void setType(int,java.lang.String) -> setType
    void setValue(int,java.lang.String) -> setValue
    void setNonNormalizedValue(int,java.lang.String) -> setNonNormalizedValue
    java.lang.String getNonNormalizedValue(int) -> getNonNormalizedValue
    void setSpecified(int,boolean) -> setSpecified
    boolean isSpecified(int) -> isSpecified
    int getLength() -> getLength
    java.lang.String getType(int) -> getType
    java.lang.String getType(java.lang.String) -> getType
    java.lang.String getValue(int) -> getValue
    java.lang.String getValue(java.lang.String) -> getValue
    java.lang.String getName(int) -> getName
    int getIndex(java.lang.String) -> getIndex
    int getIndex(java.lang.String,java.lang.String) -> getIndex
    java.lang.String getLocalName(int) -> getLocalName
    java.lang.String getQName(int) -> getQName
    com.amazonaws.javax.xml.stream.xerces.xni.QName getQualifiedName(int) -> getQualifiedName
    java.lang.String getType(java.lang.String,java.lang.String) -> getType
    java.lang.String getPrefix(int) -> getPrefix
    java.lang.String getURI(int) -> getURI
    java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(java.lang.String,java.lang.String) -> getAugmentations
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(java.lang.String) -> getAugmentations
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(int) -> getAugmentations
    void setAugmentations(int,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> setAugmentations
    void setURI(int,java.lang.String) -> setURI
    void setSchemaId(int,boolean) -> setSchemaId
    boolean getSchemaId(int) -> getSchemaId
    boolean getSchemaId(java.lang.String) -> getSchemaId
    boolean getSchemaId(java.lang.String,java.lang.String) -> getSchemaId
    void addAttributeNS(com.amazonaws.javax.xml.stream.xerces.xni.QName,java.lang.String,java.lang.String) -> addAttributeNS
    com.amazonaws.javax.xml.stream.xerces.xni.QName checkDuplicatesNS() -> checkDuplicatesNS
    java.lang.String getReportableType(java.lang.String) -> a
com.amazonaws.javax.xml.stream.xerces.util.STAXAttributesImpl$Attribute -> com.amazonaws.javax.xml.stream.xerces.util.STAXAttributesImpl$Attribute:
    com.amazonaws.javax.xml.stream.xerces.xni.QName name -> name
    java.lang.String type -> type
    java.lang.String value -> value
    java.lang.String nonNormalizedValue -> nonNormalizedValue
    boolean specified -> specified
    boolean schemaId -> schemaId
    boolean dup -> dup
    com.amazonaws.javax.xml.stream.xerces.util.STAXAttributesImpl$Attribute next -> a
com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport -> com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport:
    java.lang.Object securitySupport -> a
    com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport getInstance() -> getInstance
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    java.io.FileInputStream getFileInputStream(java.io.File) -> getFileInputStream
    java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String) -> getResourceAsStream
com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12 -> com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12:
    java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    java.io.FileInputStream getFileInputStream(java.io.File) -> getFileInputStream
    java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String) -> getResourceAsStream
com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12$1 -> com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12$1:
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12$2 -> com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12$2:
    java.lang.String val$propName -> a
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12$3 -> com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12$3:
    java.io.File val$file -> a
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12$4 -> com.amazonaws.javax.xml.stream.xerces.util.SecuritySupport12$4:
    java.lang.ClassLoader val$cl -> a
    java.lang.String val$name -> b
    java.lang.Object run() -> run
com.amazonaws.javax.xml.stream.xerces.util.ShadowedSymbolTable -> com.amazonaws.javax.xml.stream.xerces.util.ShadowedSymbolTable:
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> a
    java.lang.String addSymbol(java.lang.String) -> addSymbol
    java.lang.String addSymbol(char[],int,int) -> addSymbol
    int hash(java.lang.String) -> hash
    int hash(char[],int,int) -> hash
com.amazonaws.javax.xml.stream.xerces.util.SymbolHash -> com.amazonaws.javax.xml.stream.xerces.util.SymbolHash:
    int fTableSize -> a
    com.amazonaws.javax.xml.stream.xerces.util.SymbolHash$Entry[] fBuckets -> b
    int fNum -> c
    void put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    int getLength() -> getLength
    int getValues(java.lang.Object[],int) -> getValues
    com.amazonaws.javax.xml.stream.xerces.util.SymbolHash makeClone() -> makeClone
    void clear() -> clear
    com.amazonaws.javax.xml.stream.xerces.util.SymbolHash$Entry search(java.lang.Object,int) -> a
com.amazonaws.javax.xml.stream.xerces.util.SymbolHash$Entry -> com.amazonaws.javax.xml.stream.xerces.util.SymbolHash$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.amazonaws.javax.xml.stream.xerces.util.SymbolHash$Entry next -> next
    com.amazonaws.javax.xml.stream.xerces.util.SymbolHash$Entry makeClone() -> makeClone
com.amazonaws.javax.xml.stream.xerces.util.SymbolTable -> com.amazonaws.javax.xml.stream.xerces.util.SymbolTable:
    char[] symbolAsArray -> a
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable$Entry[] fBuckets -> b
    int fTableSize -> c
    java.lang.String addSymbol(java.lang.String) -> addSymbol
    java.lang.String addSymbol(char[],int,int) -> addSymbol
    int hash(java.lang.String) -> hash
    int hash(char[],int,int) -> hash
    boolean containsSymbol(java.lang.String) -> containsSymbol
    boolean containsSymbol(char[],int,int) -> containsSymbol
    char[] getCharArray() -> getCharArray
com.amazonaws.javax.xml.stream.xerces.util.SymbolTable$Entry -> com.amazonaws.javax.xml.stream.xerces.util.SymbolTable$Entry:
    java.lang.String symbol -> symbol
    int hashCode -> a
    char[] characters -> characters
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable$Entry next -> next
com.amazonaws.javax.xml.stream.xerces.util.SynchronizedSymbolTable -> com.amazonaws.javax.xml.stream.xerces.util.SynchronizedSymbolTable:
    com.amazonaws.javax.xml.stream.xerces.util.SymbolTable fSymbolTable -> a
    java.lang.String addSymbol(java.lang.String) -> addSymbol
    java.lang.String addSymbol(char[],int,int) -> addSymbol
    boolean containsSymbol(java.lang.String) -> containsSymbol
    boolean containsSymbol(char[],int,int) -> containsSymbol
com.amazonaws.javax.xml.stream.xerces.util.URI -> com.amazonaws.javax.xml.stream.xerces.util.URI:
    java.lang.String m_scheme -> a
    java.lang.String m_userinfo -> b
    java.lang.String m_host -> c
    int m_port -> d
    java.lang.String m_path -> e
    java.lang.String m_queryString -> f
    java.lang.String m_fragment -> g
    void initialize(com.amazonaws.javax.xml.stream.xerces.util.URI) -> a
    void initialize(com.amazonaws.javax.xml.stream.xerces.util.URI,java.lang.String) -> a
    void initializePath(java.lang.String) -> a
    java.lang.String getScheme() -> getScheme
    java.lang.String getSchemeSpecificPart() -> getSchemeSpecificPart
    java.lang.String getUserinfo() -> getUserinfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath(boolean,boolean) -> getPath
    java.lang.String getPath() -> getPath
    java.lang.String getQueryString() -> getQueryString
    java.lang.String getFragment() -> getFragment
    void setScheme(java.lang.String) -> setScheme
    void setUserinfo(java.lang.String) -> setUserinfo
    void setHost(java.lang.String) -> setHost
    void setPort(int) -> setPort
    void setPath(java.lang.String) -> setPath
    void appendPath(java.lang.String) -> appendPath
    void setQueryString(java.lang.String) -> setQueryString
    void setFragment(java.lang.String) -> setFragment
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean isGenericURI() -> isGenericURI
    boolean isConformantSchemeName(java.lang.String) -> isConformantSchemeName
    boolean isWellFormedAddress(java.lang.String) -> isWellFormedAddress
    boolean isDigit(char) -> a
    boolean isHex(char) -> b
    boolean isAlpha(char) -> c
    boolean isAlphanum(char) -> d
    boolean isReservedCharacter(char) -> e
    boolean isUnreservedCharacter(char) -> f
    boolean isURIString(java.lang.String) -> b
com.amazonaws.javax.xml.stream.xerces.util.URI$MalformedURIException -> com.amazonaws.javax.xml.stream.xerces.util.URI$MalformedURIException:
com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl -> com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl:
    boolean fNamespaces -> b
    int fLargeCount -> c
    int fLength -> d
    com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl$Attribute[] fAttributes -> a
    com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl$Attribute[] fAttributeTableView -> e
    int[] fAttributeTableViewChainState -> f
    int fTableViewBuckets -> g
    boolean fIsTableViewConsistent -> h
    void setNamespaces(boolean) -> setNamespaces
    int addAttribute(com.amazonaws.javax.xml.stream.xerces.xni.QName,java.lang.String,java.lang.String) -> addAttribute
    int addAttribute(com.amazonaws.javax.xml.stream.xerces.xni.QName,java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> addAttribute
    void removeAllAttributes() -> removeAllAttributes
    void removeAttributeAt(int) -> removeAttributeAt
    void setName(int,com.amazonaws.javax.xml.stream.xerces.xni.QName) -> setName
    void getName(int,com.amazonaws.javax.xml.stream.xerces.xni.QName) -> getName
    void setType(int,java.lang.String) -> setType
    void setValue(int,java.lang.String) -> setValue
    void setValue(int,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> setValue
    void setNonNormalizedValue(int,java.lang.String) -> setNonNormalizedValue
    java.lang.String getNonNormalizedValue(int) -> getNonNormalizedValue
    void setSpecified(int,boolean) -> setSpecified
    boolean isSpecified(int) -> isSpecified
    int getLength() -> getLength
    java.lang.String getType(int) -> getType
    java.lang.String getType(java.lang.String) -> getType
    java.lang.String getValue(int) -> getValue
    java.lang.String getValue(java.lang.String) -> getValue
    java.lang.String getName(int) -> getName
    int getIndex(java.lang.String) -> getIndex
    int getIndex(java.lang.String,java.lang.String) -> getIndex
    int getIndexByLocalName(java.lang.String) -> getIndexByLocalName
    java.lang.String getLocalName(int) -> getLocalName
    java.lang.String getQName(int) -> getQName
    com.amazonaws.javax.xml.stream.xerces.xni.QName getQualifiedName(int) -> getQualifiedName
    java.lang.String getType(java.lang.String,java.lang.String) -> getType
    java.lang.String getPrefix(int) -> getPrefix
    java.lang.String getURI(int) -> getURI
    java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(java.lang.String,java.lang.String) -> getAugmentations
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(java.lang.String) -> getAugmentations
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(int) -> getAugmentations
    void setAugmentations(int,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> setAugmentations
    void setURI(int,java.lang.String) -> setURI
    void setSchemaId(int,boolean) -> setSchemaId
    boolean getSchemaId(int) -> getSchemaId
    boolean getSchemaId(java.lang.String) -> getSchemaId
    boolean getSchemaId(java.lang.String,java.lang.String) -> getSchemaId
    int getIndexFast(java.lang.String) -> getIndexFast
    void addAttributeNS(com.amazonaws.javax.xml.stream.xerces.xni.QName,java.lang.String,java.lang.String) -> addAttributeNS
    com.amazonaws.javax.xml.stream.xerces.xni.QName checkDuplicatesNS() -> checkDuplicatesNS
    int getIndexFast(java.lang.String,java.lang.String) -> getIndexFast
    java.lang.String getReportableType(java.lang.String) -> a
    int getTableViewBucket(java.lang.String) -> b
    void prepareTableView() -> a
    void refresh() -> refresh
    void refresh(int) -> refresh
com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl$Attribute -> com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl$Attribute:
    com.amazonaws.javax.xml.stream.xerces.xni.QName name -> name
    java.lang.String type -> type
    java.lang.String value -> value
    com.amazonaws.javax.xml.stream.xerces.xni.XMLString xmlValue -> xmlValue
    java.lang.String nonNormalizedValue -> nonNormalizedValue
    boolean specified -> specified
    boolean schemaId -> schemaId
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations augs -> augs
    com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl$Attribute next -> next
com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesIteratorImpl -> com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesIteratorImpl:
    int fCurrent -> b
    com.amazonaws.javax.xml.stream.xerces.util.XMLAttributesImpl$Attribute fLastReturnedItem -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void removeAllAttributes() -> removeAllAttributes
com.amazonaws.javax.xml.stream.xerces.util.XMLChar -> com.amazonaws.javax.xml.stream.xerces.util.XMLChar:
    byte[] CHARS -> a
    int MASK_VALID -> MASK_VALID
    int MASK_SPACE -> MASK_SPACE
    int MASK_NAME_START -> MASK_NAME_START
    int MASK_NAME -> MASK_NAME
    int MASK_PUBID -> MASK_PUBID
    int MASK_CONTENT -> MASK_CONTENT
    int MASK_NCNAME_START -> MASK_NCNAME_START
    int MASK_NCNAME -> MASK_NCNAME
    boolean isSupplemental(int) -> isSupplemental
    int supplemental(char,char) -> supplemental
    char highSurrogate(int) -> highSurrogate
    char lowSurrogate(int) -> lowSurrogate
    boolean isHighSurrogate(int) -> isHighSurrogate
    boolean isLowSurrogate(int) -> isLowSurrogate
    boolean isValid(int) -> isValid
    boolean isInvalid(int) -> isInvalid
    boolean isContent(int) -> isContent
    boolean isMarkup(int) -> isMarkup
    boolean isSpace(int) -> isSpace
    boolean isNameStart(int) -> isNameStart
    boolean isName(int) -> isName
    boolean isNCNameStart(int) -> isNCNameStart
    boolean isNCName(int) -> isNCName
    boolean isPubid(int) -> isPubid
    boolean isValidName(java.lang.String) -> isValidName
    boolean isValidNCName(java.lang.String) -> isValidNCName
    boolean isValidNmtoken(java.lang.String) -> isValidNmtoken
    boolean isValidIANAEncoding(java.lang.String) -> isValidIANAEncoding
    boolean isValidJavaEncoding(java.lang.String) -> isValidJavaEncoding
com.amazonaws.javax.xml.stream.xerces.util.XMLResourceIdentifierImpl -> com.amazonaws.javax.xml.stream.xerces.util.XMLResourceIdentifierImpl:
    java.lang.String fPublicId -> a
    java.lang.String fLiteralSystemId -> b
    java.lang.String fBaseSystemId -> c
    java.lang.String fExpandedSystemId -> d
    void setValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setValues
    void clear() -> clear
    void setPublicId(java.lang.String) -> setPublicId
    void setLiteralSystemId(java.lang.String) -> setLiteralSystemId
    void setBaseSystemId(java.lang.String) -> setBaseSystemId
    void setExpandedSystemId(java.lang.String) -> setExpandedSystemId
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getLiteralSystemId() -> getLiteralSystemId
    java.lang.String getBaseSystemId() -> getBaseSystemId
    java.lang.String getExpandedSystemId() -> getExpandedSystemId
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer -> com.amazonaws.javax.xml.stream.xerces.util.XMLStringBuffer:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    void clear() -> clear
    void append(char) -> append
    void append(java.lang.String) -> append
    void append(char[],int,int) -> append
    void append(com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> append
com.amazonaws.javax.xml.stream.xerces.util.XMLSymbols -> com.amazonaws.javax.xml.stream.xerces.util.XMLSymbols:
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    java.lang.String PREFIX_XML -> PREFIX_XML
    java.lang.String PREFIX_XMLNS -> PREFIX_XMLNS
    java.lang.String fANYSymbol -> fANYSymbol
    java.lang.String fCDATASymbol -> fCDATASymbol
    java.lang.String fIDSymbol -> fIDSymbol
    java.lang.String fIDREFSymbol -> fIDREFSymbol
    java.lang.String fIDREFSSymbol -> fIDREFSSymbol
    java.lang.String fENTITYSymbol -> fENTITYSymbol
    java.lang.String fENTITIESSymbol -> fENTITIESSymbol
    java.lang.String fNMTOKENSymbol -> fNMTOKENSymbol
    java.lang.String fNMTOKENSSymbol -> fNMTOKENSSymbol
    java.lang.String fNOTATIONSymbol -> fNOTATIONSymbol
    java.lang.String fENUMERATIONSymbol -> fENUMERATIONSymbol
    java.lang.String fIMPLIEDSymbol -> fIMPLIEDSymbol
    java.lang.String fREQUIREDSymbol -> fREQUIREDSymbol
    java.lang.String fFIXEDSymbol -> fFIXEDSymbol
com.amazonaws.javax.xml.stream.xerces.xni.Augmentations -> com.amazonaws.javax.xml.stream.xerces.xni.Augmentations:
    java.lang.Object putItem(java.lang.String,java.lang.Object) -> putItem
    java.lang.Object getItem(java.lang.String) -> getItem
    java.lang.Object removeItem(java.lang.String) -> removeItem
    java.util.Enumeration keys() -> keys
    void removeAllItems() -> removeAllItems
com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext -> com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext:
    java.lang.String XML_URI -> XML_URI
    java.lang.String XMLNS_URI -> XMLNS_URI
    void pushContext() -> pushContext
    void popContext() -> popContext
    boolean declarePrefix(java.lang.String,java.lang.String) -> declarePrefix
    java.lang.String getURI(java.lang.String) -> getURI
    java.lang.String getPrefix(java.lang.String) -> getPrefix
    int getDeclaredPrefixCount() -> getDeclaredPrefixCount
    java.lang.String getDeclaredPrefixAt(int) -> getDeclaredPrefixAt
    java.util.Enumeration getAllPrefixes() -> getAllPrefixes
    java.util.Vector getPrefixes(java.lang.String) -> getPrefixes
    void reset() -> reset
com.amazonaws.javax.xml.stream.xerces.xni.QName -> com.amazonaws.javax.xml.stream.xerces.xni.QName:
    char[] characters -> characters
    java.lang.String prefix -> prefix
    java.lang.String localpart -> localpart
    java.lang.String rawname -> rawname
    java.lang.String uri -> uri
    void setValues(com.amazonaws.javax.xml.stream.xerces.xni.QName) -> setValues
    void setValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setValues
    void clear() -> clear
    java.lang.Object clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes -> com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes:
    int addAttribute(com.amazonaws.javax.xml.stream.xerces.xni.QName,java.lang.String,java.lang.String) -> addAttribute
    void removeAllAttributes() -> removeAllAttributes
    void removeAttributeAt(int) -> removeAttributeAt
    int getLength() -> getLength
    int getIndex(java.lang.String) -> getIndex
    int getIndex(java.lang.String,java.lang.String) -> getIndex
    void setName(int,com.amazonaws.javax.xml.stream.xerces.xni.QName) -> setName
    void getName(int,com.amazonaws.javax.xml.stream.xerces.xni.QName) -> getName
    java.lang.String getPrefix(int) -> getPrefix
    java.lang.String getURI(int) -> getURI
    java.lang.String getLocalName(int) -> getLocalName
    java.lang.String getQName(int) -> getQName
    com.amazonaws.javax.xml.stream.xerces.xni.QName getQualifiedName(int) -> getQualifiedName
    void setType(int,java.lang.String) -> setType
    java.lang.String getType(int) -> getType
    java.lang.String getType(java.lang.String) -> getType
    java.lang.String getType(java.lang.String,java.lang.String) -> getType
    void setValue(int,java.lang.String) -> setValue
    java.lang.String getValue(int) -> getValue
    java.lang.String getValue(java.lang.String) -> getValue
    java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    void setNonNormalizedValue(int,java.lang.String) -> setNonNormalizedValue
    java.lang.String getNonNormalizedValue(int) -> getNonNormalizedValue
    void setSpecified(int,boolean) -> setSpecified
    boolean isSpecified(int) -> isSpecified
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(int) -> getAugmentations
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(java.lang.String,java.lang.String) -> getAugmentations
    com.amazonaws.javax.xml.stream.xerces.xni.Augmentations getAugmentations(java.lang.String) -> getAugmentations
com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDContentModelHandler -> com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDContentModelHandler:
    short SEPARATOR_CHOICE -> SEPARATOR_CHOICE
    short SEPARATOR_SEQUENCE -> SEPARATOR_SEQUENCE
    short OCCURS_ZERO_OR_ONE -> OCCURS_ZERO_OR_ONE
    short OCCURS_ZERO_OR_MORE -> OCCURS_ZERO_OR_MORE
    short OCCURS_ONE_OR_MORE -> OCCURS_ONE_OR_MORE
    void startContentModel(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startContentModel
    void any(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> any
    void empty(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> empty
    void startGroup(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startGroup
    void pcdata(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> pcdata
    void element(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> element
    void separator(short,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> separator
    void occurrence(short,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> occurrence
    void endGroup(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endGroup
    void endContentModel(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endContentModel
com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDHandler -> com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDHandler:
    short CONDITIONAL_INCLUDE -> CONDITIONAL_INCLUDE
    short CONDITIONAL_IGNORE -> CONDITIONAL_IGNORE
    void startDTD(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startDTD
    void startParameterEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startParameterEntity
    void textDecl(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> textDecl
    void endParameterEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endParameterEntity
    void startExternalSubset(com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startExternalSubset
    void endExternalSubset(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endExternalSubset
    void comment(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> comment
    void processingInstruction(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> processingInstruction
    void elementDecl(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> elementDecl
    void startAttlist(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startAttlist
    void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> attributeDecl
    void endAttlist(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endAttlist
    void internalEntityDecl(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> internalEntityDecl
    void externalEntityDecl(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> externalEntityDecl
    void unparsedEntityDecl(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> unparsedEntityDecl
    void notationDecl(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> notationDecl
    void startConditional(short,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startConditional
    void ignoredCharacters(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> ignoredCharacters
    void endConditional(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endConditional
    void endDTD(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endDTD
com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentFragmentHandler -> com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentFragmentHandler:
    void startDocumentFragment(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator,com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startDocumentFragment
    void startGeneralEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startGeneralEntity
    void textDecl(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> textDecl
    void endGeneralEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endGeneralEntity
    void comment(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> comment
    void processingInstruction(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> processingInstruction
    void startPrefixMapping(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startPrefixMapping
    void startElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startElement
    void emptyElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> emptyElement
    void characters(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> characters
    void ignorableWhitespace(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> ignorableWhitespace
    void endElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endElement
    void endPrefixMapping(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endPrefixMapping
    void startCDATA(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startCDATA
    void endCDATA(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endCDATA
    void endDocumentFragment(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endDocumentFragment
com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler -> com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler:
    void startDocument(com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.NamespaceContext,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startDocument
    void xmlDecl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> xmlDecl
    void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> doctypeDecl
    void comment(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> comment
    void processingInstruction(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> processingInstruction
    void startPrefixMapping(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startPrefixMapping
    void startElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startElement
    void emptyElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.XMLAttributes,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> emptyElement
    void startGeneralEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startGeneralEntity
    void textDecl(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> textDecl
    void endGeneralEntity(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endGeneralEntity
    void characters(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> characters
    void ignorableWhitespace(com.amazonaws.javax.xml.stream.xerces.xni.XMLString,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> ignorableWhitespace
    void endElement(com.amazonaws.javax.xml.stream.xerces.xni.QName,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endElement
    void endPrefixMapping(java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endPrefixMapping
    void startCDATA(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> startCDATA
    void endCDATA(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endCDATA
    void endDocument(com.amazonaws.javax.xml.stream.xerces.xni.Augmentations) -> endDocument
    void setDocumentSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentSource) -> setDocumentSource
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentSource getDocumentSource() -> getDocumentSource
com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator -> com.amazonaws.javax.xml.stream.xerces.xni.XMLLocator:
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    java.lang.String getEncoding() -> getEncoding
    int getCharacterOffset() -> getCharacterOffset
com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier -> com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier:
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getExpandedSystemId() -> getExpandedSystemId
    java.lang.String getLiteralSystemId() -> getLiteralSystemId
    java.lang.String getBaseSystemId() -> getBaseSystemId
com.amazonaws.javax.xml.stream.xerces.xni.XMLString -> com.amazonaws.javax.xml.stream.xerces.xni.XMLString:
    char[] ch -> ch
    int offset -> offset
    int length -> length
    void setValues(char[],int,int) -> setValues
    void setValues(com.amazonaws.javax.xml.stream.xerces.xni.XMLString) -> setValues
    void clear() -> clear
    boolean equals(char[],int,int) -> equals
    boolean equals(java.lang.String) -> equals
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.xerces.xni.XNIException -> com.amazonaws.javax.xml.stream.xerces.xni.XNIException:
    java.lang.Exception fException -> a
    java.lang.Exception getException() -> getException
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponent -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponent:
    void reset(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager) -> reset
    java.lang.String[] getRecognizedFeatures() -> getRecognizedFeatures
    void setFeature(java.lang.String,boolean) -> setFeature
    java.lang.String[] getRecognizedProperties() -> getRecognizedProperties
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Boolean getFeatureDefault(java.lang.String) -> getFeatureDefault
    java.lang.Object getPropertyDefault(java.lang.String) -> getPropertyDefault
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLComponentManager:
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.Object getProperty(java.lang.String) -> getProperty
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLConfigurationException -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLConfigurationException:
    short NOT_RECOGNIZED -> NOT_RECOGNIZED
    short NOT_SUPPORTED -> NOT_SUPPORTED
    short fType -> a
    java.lang.String fIdentifier -> b
    short getType() -> getType
    java.lang.String getIdentifier() -> getIdentifier
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDContentModelFilter -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDContentModelFilter:
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDContentModelSource -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDContentModelSource:
    void setDTDContentModelHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDContentModelHandler) -> setDTDContentModelHandler
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDFilter -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDFilter:
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDScanner -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDScanner:
    void setInputSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> setInputSource
    boolean scanDTDInternalSubset(boolean,boolean,boolean) -> scanDTDInternalSubset
    boolean scanDTDExternalSubset(boolean) -> scanDTDExternalSubset
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDSource -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDTDSource:
    void setDTDHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDHandler) -> setDTDHandler
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentFilter -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentFilter:
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentScanner -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentScanner:
    void setInputSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> setInputSource
    boolean scanDocument(boolean) -> scanDocument
    int next() -> next
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentSource -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLDocumentSource:
    void setDocumentHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler) -> setDocumentHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler getDocumentHandler() -> getDocumentHandler
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLEntityResolver -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLEntityResolver:
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource resolveEntity(com.amazonaws.javax.xml.stream.xerces.xni.XMLResourceIdentifier) -> resolveEntity
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLErrorHandler -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLErrorHandler:
    void warning(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException) -> warning
    void error(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException) -> error
    void fatalError(java.lang.String,java.lang.String,com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException) -> fatalError
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource:
    java.lang.String fPublicId -> a
    java.lang.String fSystemId -> b
    java.lang.String fBaseSystemId -> c
    java.io.InputStream fByteStream -> d
    java.io.Reader fCharStream -> e
    java.lang.String fEncoding -> f
    void setPublicId(java.lang.String) -> setPublicId
    java.lang.String getPublicId() -> getPublicId
    void setSystemId(java.lang.String) -> setSystemId
    java.lang.String getSystemId() -> getSystemId
    void setBaseSystemId(java.lang.String) -> setBaseSystemId
    java.lang.String getBaseSystemId() -> getBaseSystemId
    void setByteStream(java.io.InputStream) -> setByteStream
    java.io.InputStream getByteStream() -> getByteStream
    void setCharacterStream(java.io.Reader) -> setCharacterStream
    java.io.Reader getCharacterStream() -> getCharacterStream
    void setEncoding(java.lang.String) -> setEncoding
    java.lang.String getEncoding() -> getEncoding
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParseException:
    java.lang.String fPublicId -> a
    java.lang.String fLiteralSystemId -> b
    java.lang.String fExpandedSystemId -> c
    java.lang.String fBaseSystemId -> d
    int fLineNumber -> e
    int fColumnNumber -> f
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getExpandedSystemId() -> getExpandedSystemId
    java.lang.String getLiteralSystemId() -> getLiteralSystemId
    java.lang.String getBaseSystemId() -> getBaseSystemId
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    java.lang.String toString() -> toString
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParserConfiguration -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLParserConfiguration:
    void parse(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> parse
    void addRecognizedFeatures(java.lang.String[]) -> addRecognizedFeatures
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void addRecognizedProperties(java.lang.String[]) -> addRecognizedProperties
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setErrorHandler(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLErrorHandler) -> setErrorHandler
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLErrorHandler getErrorHandler() -> getErrorHandler
    void setDocumentHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler) -> setDocumentHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDocumentHandler getDocumentHandler() -> getDocumentHandler
    void setDTDHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDHandler) -> setDTDHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDHandler getDTDHandler() -> getDTDHandler
    void setDTDContentModelHandler(com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDContentModelHandler) -> setDTDContentModelHandler
    com.amazonaws.javax.xml.stream.xerces.xni.XMLDTDContentModelHandler getDTDContentModelHandler() -> getDTDContentModelHandler
    void setEntityResolver(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLEntityResolver) -> setEntityResolver
    com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLEntityResolver getEntityResolver() -> getEntityResolver
    void setLocale(java.util.Locale) -> setLocale
    java.util.Locale getLocale() -> getLocale
com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLPullParserConfiguration -> com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLPullParserConfiguration:
    void setInputSource(com.amazonaws.javax.xml.stream.xerces.xni.parser.XMLInputSource) -> setInputSource
    boolean parse(boolean) -> parse
    void cleanup() -> cleanup
com.amazonaws.javax.xml.transform.FactoryFinder -> com.amazonaws.javax.xml.transform.j:
    boolean debug -> a
    java.util.Properties cacheProps -> b
    boolean firstTime -> c
    com.amazonaws.javax.xml.transform.SecuritySupport ss -> d
    void dPrint(java.lang.String) -> a
    java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean) -> b
    java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean) -> a
    java.lang.Object find(java.lang.String,java.lang.String) -> a
    java.lang.Object findJarServiceProvider(java.lang.String) -> b
com.amazonaws.javax.xml.transform.FactoryFinder$ConfigurationError -> com.amazonaws.javax.xml.transform.e:
    java.lang.Exception exception -> a
    java.lang.Exception getException() -> a
    java.lang.Throwable getCause() -> getCause
com.amazonaws.javax.xml.transform.Result -> com.amazonaws.javax.xml.transform.b:
    java.lang.String getSystemId() -> getSystemId
com.amazonaws.javax.xml.transform.SecuritySupport -> com.amazonaws.javax.xml.transform.f:
    java.lang.ClassLoader getContextClassLoader() -> a
    java.lang.String getSystemProperty(java.lang.String) -> a
    java.io.FileInputStream getFileInputStream(java.io.File) -> a
    java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String) -> a
com.amazonaws.javax.xml.transform.SecuritySupport$1 -> com.amazonaws.javax.xml.transform.p:
    java.lang.Object run() -> run
com.amazonaws.javax.xml.transform.SecuritySupport$2 -> com.amazonaws.javax.xml.transform.o:
    java.lang.String val$propName -> a
    java.lang.Object run() -> run
com.amazonaws.javax.xml.transform.SecuritySupport$3 -> com.amazonaws.javax.xml.transform.n:
    java.io.File val$file -> a
    java.lang.Object run() -> run
com.amazonaws.javax.xml.transform.SecuritySupport$4 -> com.amazonaws.javax.xml.transform.m:
    java.lang.ClassLoader val$cl -> a
    java.lang.String val$name -> b
    java.lang.Object run() -> run
com.amazonaws.javax.xml.transform.SecuritySupport$5 -> com.amazonaws.javax.xml.transform.l:
    java.io.File val$f -> a
    java.lang.Object run() -> run
com.amazonaws.javax.xml.transform.Source -> com.amazonaws.javax.xml.transform.c:
com.amazonaws.javax.xml.transform.SourceLocator -> com.amazonaws.javax.xml.transform.d:
com.amazonaws.javax.xml.transform.Transformer -> com.amazonaws.javax.xml.transform.h:
com.amazonaws.javax.xml.transform.TransformerConfigurationException -> com.amazonaws.javax.xml.transform.k:
com.amazonaws.javax.xml.transform.TransformerException -> com.amazonaws.javax.xml.transform.g:
    com.amazonaws.javax.xml.transform.SourceLocator locator -> a
    java.lang.Throwable containedException -> b
    java.lang.Throwable getCause() -> getCause
    java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
com.amazonaws.javax.xml.transform.TransformerFactory -> com.amazonaws.javax.xml.transform.i:
    com.amazonaws.javax.xml.transform.TransformerFactory newInstance() -> newInstance
    com.amazonaws.javax.xml.transform.TransformerFactory newInstance(java.lang.String,java.lang.ClassLoader) -> newInstance
    com.amazonaws.javax.xml.transform.Transformer newTransformer(com.amazonaws.javax.xml.transform.Source) -> newTransformer
    com.amazonaws.javax.xml.transform.Transformer newTransformer() -> newTransformer
    com.amazonaws.services.s3.internal.ServerSideEncryptionResult newTemplates$66bbfc1(com.amazonaws.javax.xml.transform.Source) -> newTemplates$66bbfc1
    com.amazonaws.javax.xml.transform.Source getAssociatedStylesheet(com.amazonaws.javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String) -> getAssociatedStylesheet
    void setURIResolver$794eef32(com.amazonaws.services.s3.internal.ServerSideEncryptionResult) -> setURIResolver$794eef32
    com.amazonaws.services.s3.internal.ServerSideEncryptionResult getURIResolver$ea4d12c() -> getURIResolver$ea4d12c
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setErrorListener$15d42958(com.amazonaws.services.s3.internal.ServerSideEncryptionResult) -> setErrorListener$15d42958
    com.amazonaws.services.s3.internal.ServerSideEncryptionResult getErrorListener$6a83479e() -> getErrorListener$6a83479e
com.amazonaws.javax.xml.transform.TransformerFactoryConfigurationError -> com.amazonaws.javax.xml.transform.a:
    java.lang.Exception exception -> a
    java.lang.String getMessage() -> getMessage
    java.lang.Throwable getCause() -> getCause
com.amazonaws.javax.xml.transform.dom.DOMResult -> com.amazonaws.javax.xml.transform.dom.a:
    org.w3c.dom.Node node -> a
    org.w3c.dom.Node nextSibling -> b
    java.lang.String systemId -> c
    org.w3c.dom.Node getNode() -> a
    java.lang.String getSystemId() -> getSystemId
com.amazonaws.javax.xml.transform.sax.SAXResult -> com.amazonaws.javax.xml.transform.sax.SAXResult:
    java.lang.String FEATURE -> FEATURE
    org.xml.sax.ContentHandler handler -> a
    org.xml.sax.ext.LexicalHandler lexhandler -> b
    java.lang.String systemId -> c
    void setHandler(org.xml.sax.ContentHandler) -> setHandler
    org.xml.sax.ContentHandler getHandler() -> getHandler
    void setLexicalHandler(org.xml.sax.ext.LexicalHandler) -> setLexicalHandler
    org.xml.sax.ext.LexicalHandler getLexicalHandler() -> getLexicalHandler
    void setSystemId(java.lang.String) -> setSystemId
    java.lang.String getSystemId() -> getSystemId
com.amazonaws.javax.xml.transform.sax.SAXSource -> com.amazonaws.javax.xml.transform.sax.SAXSource:
    java.lang.String FEATURE -> FEATURE
    org.xml.sax.XMLReader reader -> a
    org.xml.sax.InputSource inputSource -> b
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    org.xml.sax.InputSource getInputSource() -> getInputSource
    void setSystemId(java.lang.String) -> setSystemId
    java.lang.String getSystemId() -> getSystemId
    org.xml.sax.InputSource sourceToInputSource(com.amazonaws.javax.xml.transform.Source) -> sourceToInputSource
com.amazonaws.javax.xml.transform.sax.SAXTransformerFactory -> com.amazonaws.javax.xml.transform.sax.SAXTransformerFactory:
    java.lang.String FEATURE -> FEATURE
    java.lang.String FEATURE_XMLFILTER -> FEATURE_XMLFILTER
    com.amazonaws.javax.xml.transform.sax.TransformerHandler newTransformerHandler(com.amazonaws.javax.xml.transform.Source) -> newTransformerHandler
    com.amazonaws.javax.xml.transform.sax.TransformerHandler newTransformerHandler$3e9a9dac(com.amazonaws.services.s3.internal.ServerSideEncryptionResult) -> newTransformerHandler$3e9a9dac
    com.amazonaws.javax.xml.transform.sax.TransformerHandler newTransformerHandler() -> newTransformerHandler
    com.amazonaws.javax.xml.transform.sax.TemplatesHandler newTemplatesHandler() -> newTemplatesHandler
    org.xml.sax.XMLFilter newXMLFilter(com.amazonaws.javax.xml.transform.Source) -> newXMLFilter
    org.xml.sax.XMLFilter newXMLFilter$398ee8b(com.amazonaws.services.s3.internal.ServerSideEncryptionResult) -> newXMLFilter$398ee8b
com.amazonaws.javax.xml.transform.sax.TemplatesHandler -> com.amazonaws.javax.xml.transform.sax.TemplatesHandler:
    com.amazonaws.services.s3.internal.ServerSideEncryptionResult getTemplates$436852db() -> getTemplates$436852db
    void setSystemId(java.lang.String) -> setSystemId
    java.lang.String getSystemId() -> getSystemId
com.amazonaws.javax.xml.transform.sax.TransformerHandler -> com.amazonaws.javax.xml.transform.sax.TransformerHandler:
    void setResult(com.amazonaws.javax.xml.transform.Result) -> setResult
    void setSystemId(java.lang.String) -> setSystemId
    java.lang.String getSystemId() -> getSystemId
    com.amazonaws.javax.xml.transform.Transformer getTransformer() -> getTransformer
com.amazonaws.javax.xml.transform.stream.StreamResult -> com.amazonaws.javax.xml.transform.stream.a:
    java.lang.String systemId -> a
    java.io.OutputStream outputStream -> b
    java.io.Writer writer -> c
    void setOutputStream(java.io.OutputStream) -> a
    java.io.OutputStream getOutputStream() -> a
    void setWriter(java.io.Writer) -> a
    java.io.Writer getWriter() -> b
    void setSystemId(java.lang.String) -> a
    java.lang.String getSystemId() -> getSystemId
com.amazonaws.javax.xml.transform.stream.StreamSource -> com.amazonaws.javax.xml.transform.stream.b:
com.amazonaws.services.autoscaling.AmazonAutoScaling -> com.amazonaws.services.autoscaling.AmazonAutoScaling:
    void setEndpoint(java.lang.String) -> setEndpoint
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult describeAutoScalingGroups(com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest) -> describeAutoScalingGroups
    void enableMetricsCollection(com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest) -> enableMetricsCollection
    void resumeProcesses(com.amazonaws.services.autoscaling.model.ResumeProcessesRequest) -> resumeProcesses
    void deleteLaunchConfiguration(com.amazonaws.services.autoscaling.model.DeleteLaunchConfigurationRequest) -> deleteLaunchConfiguration
    com.amazonaws.services.autoscaling.model.DescribePoliciesResult describePolicies(com.amazonaws.services.autoscaling.model.DescribePoliciesRequest) -> describePolicies
    com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult describeScalingProcessTypes(com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesRequest) -> describeScalingProcessTypes
    void createAutoScalingGroup(com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest) -> createAutoScalingGroup
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult describeScalingActivities(com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest) -> describeScalingActivities
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult describeNotificationConfigurations(com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest) -> describeNotificationConfigurations
    void executePolicy(com.amazonaws.services.autoscaling.model.ExecutePolicyRequest) -> executePolicy
    com.amazonaws.services.autoscaling.model.PutScalingPolicyResult putScalingPolicy(com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest) -> putScalingPolicy
    void putNotificationConfiguration(com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest) -> putNotificationConfiguration
    void deletePolicy(com.amazonaws.services.autoscaling.model.DeletePolicyRequest) -> deletePolicy
    void deleteNotificationConfiguration(com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest) -> deleteNotificationConfiguration
    void deleteScheduledAction(com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest) -> deleteScheduledAction
    void setInstanceHealth(com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest) -> setInstanceHealth
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult describeAutoScalingNotificationTypes(com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesRequest) -> describeAutoScalingNotificationTypes
    void suspendProcesses(com.amazonaws.services.autoscaling.model.SuspendProcessesRequest) -> suspendProcesses
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult describeAutoScalingInstances(com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest) -> describeAutoScalingInstances
    void createLaunchConfiguration(com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest) -> createLaunchConfiguration
    void deleteAutoScalingGroup(com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest) -> deleteAutoScalingGroup
    void disableMetricsCollection(com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest) -> disableMetricsCollection
    void updateAutoScalingGroup(com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest) -> updateAutoScalingGroup
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult describeLaunchConfigurations(com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest) -> describeLaunchConfigurations
    com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult describeAdjustmentTypes(com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesRequest) -> describeAdjustmentTypes
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult describeScheduledActions(com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest) -> describeScheduledActions
    void putScheduledUpdateGroupAction(com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest) -> putScheduledUpdateGroupAction
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult describeMetricCollectionTypes(com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesRequest) -> describeMetricCollectionTypes
    void setDesiredCapacity(com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest) -> setDesiredCapacity
    com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupResult terminateInstanceInAutoScalingGroup(com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest) -> terminateInstanceInAutoScalingGroup
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult describeAutoScalingGroups() -> describeAutoScalingGroups
    com.amazonaws.services.autoscaling.model.DescribePoliciesResult describePolicies() -> describePolicies
    com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult describeScalingProcessTypes() -> describeScalingProcessTypes
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult describeScalingActivities() -> describeScalingActivities
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult describeNotificationConfigurations() -> describeNotificationConfigurations
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult describeAutoScalingNotificationTypes() -> describeAutoScalingNotificationTypes
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult describeAutoScalingInstances() -> describeAutoScalingInstances
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult describeLaunchConfigurations() -> describeLaunchConfigurations
    com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult describeAdjustmentTypes() -> describeAdjustmentTypes
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult describeScheduledActions() -> describeScheduledActions
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult describeMetricCollectionTypes() -> describeMetricCollectionTypes
    void shutdown() -> shutdown
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
com.amazonaws.services.autoscaling.AmazonAutoScalingAsync -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsync:
    java.util.concurrent.Future describeAutoScalingGroupsAsync(com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest) -> describeAutoScalingGroupsAsync
    java.util.concurrent.Future enableMetricsCollectionAsync(com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest) -> enableMetricsCollectionAsync
    java.util.concurrent.Future resumeProcessesAsync(com.amazonaws.services.autoscaling.model.ResumeProcessesRequest) -> resumeProcessesAsync
    java.util.concurrent.Future deleteLaunchConfigurationAsync(com.amazonaws.services.autoscaling.model.DeleteLaunchConfigurationRequest) -> deleteLaunchConfigurationAsync
    java.util.concurrent.Future describePoliciesAsync(com.amazonaws.services.autoscaling.model.DescribePoliciesRequest) -> describePoliciesAsync
    java.util.concurrent.Future describeScalingProcessTypesAsync(com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesRequest) -> describeScalingProcessTypesAsync
    java.util.concurrent.Future createAutoScalingGroupAsync(com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest) -> createAutoScalingGroupAsync
    java.util.concurrent.Future describeScalingActivitiesAsync(com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest) -> describeScalingActivitiesAsync
    java.util.concurrent.Future describeNotificationConfigurationsAsync(com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest) -> describeNotificationConfigurationsAsync
    java.util.concurrent.Future executePolicyAsync(com.amazonaws.services.autoscaling.model.ExecutePolicyRequest) -> executePolicyAsync
    java.util.concurrent.Future putScalingPolicyAsync(com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest) -> putScalingPolicyAsync
    java.util.concurrent.Future putNotificationConfigurationAsync(com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest) -> putNotificationConfigurationAsync
    java.util.concurrent.Future deletePolicyAsync(com.amazonaws.services.autoscaling.model.DeletePolicyRequest) -> deletePolicyAsync
    java.util.concurrent.Future deleteNotificationConfigurationAsync(com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest) -> deleteNotificationConfigurationAsync
    java.util.concurrent.Future deleteScheduledActionAsync(com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest) -> deleteScheduledActionAsync
    java.util.concurrent.Future setInstanceHealthAsync(com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest) -> setInstanceHealthAsync
    java.util.concurrent.Future describeAutoScalingNotificationTypesAsync(com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesRequest) -> describeAutoScalingNotificationTypesAsync
    java.util.concurrent.Future suspendProcessesAsync(com.amazonaws.services.autoscaling.model.SuspendProcessesRequest) -> suspendProcessesAsync
    java.util.concurrent.Future describeAutoScalingInstancesAsync(com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest) -> describeAutoScalingInstancesAsync
    java.util.concurrent.Future createLaunchConfigurationAsync(com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest) -> createLaunchConfigurationAsync
    java.util.concurrent.Future deleteAutoScalingGroupAsync(com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest) -> deleteAutoScalingGroupAsync
    java.util.concurrent.Future disableMetricsCollectionAsync(com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest) -> disableMetricsCollectionAsync
    java.util.concurrent.Future updateAutoScalingGroupAsync(com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest) -> updateAutoScalingGroupAsync
    java.util.concurrent.Future describeLaunchConfigurationsAsync(com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest) -> describeLaunchConfigurationsAsync
    java.util.concurrent.Future describeAdjustmentTypesAsync(com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesRequest) -> describeAdjustmentTypesAsync
    java.util.concurrent.Future describeScheduledActionsAsync(com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest) -> describeScheduledActionsAsync
    java.util.concurrent.Future putScheduledUpdateGroupActionAsync(com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest) -> putScheduledUpdateGroupActionAsync
    java.util.concurrent.Future describeMetricCollectionTypesAsync(com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesRequest) -> describeMetricCollectionTypesAsync
    java.util.concurrent.Future setDesiredCapacityAsync(com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest) -> setDesiredCapacityAsync
    java.util.concurrent.Future terminateInstanceInAutoScalingGroupAsync(com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest) -> terminateInstanceInAutoScalingGroupAsync
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient:
    java.util.concurrent.ExecutorService executorService -> d
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.Future describeAutoScalingGroupsAsync(com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest) -> describeAutoScalingGroupsAsync
    java.util.concurrent.Future enableMetricsCollectionAsync(com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest) -> enableMetricsCollectionAsync
    java.util.concurrent.Future resumeProcessesAsync(com.amazonaws.services.autoscaling.model.ResumeProcessesRequest) -> resumeProcessesAsync
    java.util.concurrent.Future deleteLaunchConfigurationAsync(com.amazonaws.services.autoscaling.model.DeleteLaunchConfigurationRequest) -> deleteLaunchConfigurationAsync
    java.util.concurrent.Future describePoliciesAsync(com.amazonaws.services.autoscaling.model.DescribePoliciesRequest) -> describePoliciesAsync
    java.util.concurrent.Future describeScalingProcessTypesAsync(com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesRequest) -> describeScalingProcessTypesAsync
    java.util.concurrent.Future createAutoScalingGroupAsync(com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest) -> createAutoScalingGroupAsync
    java.util.concurrent.Future describeScalingActivitiesAsync(com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest) -> describeScalingActivitiesAsync
    java.util.concurrent.Future describeNotificationConfigurationsAsync(com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest) -> describeNotificationConfigurationsAsync
    java.util.concurrent.Future executePolicyAsync(com.amazonaws.services.autoscaling.model.ExecutePolicyRequest) -> executePolicyAsync
    java.util.concurrent.Future putScalingPolicyAsync(com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest) -> putScalingPolicyAsync
    java.util.concurrent.Future putNotificationConfigurationAsync(com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest) -> putNotificationConfigurationAsync
    java.util.concurrent.Future deletePolicyAsync(com.amazonaws.services.autoscaling.model.DeletePolicyRequest) -> deletePolicyAsync
    java.util.concurrent.Future deleteNotificationConfigurationAsync(com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest) -> deleteNotificationConfigurationAsync
    java.util.concurrent.Future deleteScheduledActionAsync(com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest) -> deleteScheduledActionAsync
    java.util.concurrent.Future setInstanceHealthAsync(com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest) -> setInstanceHealthAsync
    java.util.concurrent.Future describeAutoScalingNotificationTypesAsync(com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesRequest) -> describeAutoScalingNotificationTypesAsync
    java.util.concurrent.Future suspendProcessesAsync(com.amazonaws.services.autoscaling.model.SuspendProcessesRequest) -> suspendProcessesAsync
    java.util.concurrent.Future describeAutoScalingInstancesAsync(com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest) -> describeAutoScalingInstancesAsync
    java.util.concurrent.Future createLaunchConfigurationAsync(com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest) -> createLaunchConfigurationAsync
    java.util.concurrent.Future deleteAutoScalingGroupAsync(com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest) -> deleteAutoScalingGroupAsync
    java.util.concurrent.Future disableMetricsCollectionAsync(com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest) -> disableMetricsCollectionAsync
    java.util.concurrent.Future updateAutoScalingGroupAsync(com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest) -> updateAutoScalingGroupAsync
    java.util.concurrent.Future describeLaunchConfigurationsAsync(com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest) -> describeLaunchConfigurationsAsync
    java.util.concurrent.Future describeAdjustmentTypesAsync(com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesRequest) -> describeAdjustmentTypesAsync
    java.util.concurrent.Future describeScheduledActionsAsync(com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest) -> describeScheduledActionsAsync
    java.util.concurrent.Future putScheduledUpdateGroupActionAsync(com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest) -> putScheduledUpdateGroupActionAsync
    java.util.concurrent.Future describeMetricCollectionTypesAsync(com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesRequest) -> describeMetricCollectionTypesAsync
    java.util.concurrent.Future setDesiredCapacityAsync(com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest) -> setDesiredCapacityAsync
    java.util.concurrent.Future terminateInstanceInAutoScalingGroupAsync(com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest) -> terminateInstanceInAutoScalingGroupAsync
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$1 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$1:
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest val$describeAutoScalingGroupsRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$10 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$10:
    com.amazonaws.services.autoscaling.model.ExecutePolicyRequest val$executePolicyRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$11 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$11:
    com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest val$putScalingPolicyRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.PutScalingPolicyResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$12 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$12:
    com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest val$putNotificationConfigurationRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$13 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$13:
    com.amazonaws.services.autoscaling.model.DeletePolicyRequest val$deletePolicyRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$14 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$14:
    com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest val$deleteNotificationConfigurationRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$15 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$15:
    com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest val$deleteScheduledActionRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$16 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$16:
    com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest val$setInstanceHealthRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$17 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$17:
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesRequest val$describeAutoScalingNotificationTypesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$18 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$18:
    com.amazonaws.services.autoscaling.model.SuspendProcessesRequest val$suspendProcessesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$19 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$19:
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest val$describeAutoScalingInstancesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$2 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$2:
    com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest val$enableMetricsCollectionRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$20 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$20:
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest val$createLaunchConfigurationRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$21 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$21:
    com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest val$deleteAutoScalingGroupRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$22 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$22:
    com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest val$disableMetricsCollectionRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$23 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$23:
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest val$updateAutoScalingGroupRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$24 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$24:
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest val$describeLaunchConfigurationsRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$25 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$25:
    com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesRequest val$describeAdjustmentTypesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$26 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$26:
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest val$describeScheduledActionsRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$27 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$27:
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest val$putScheduledUpdateGroupActionRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$28 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$28:
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesRequest val$describeMetricCollectionTypesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$29 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$29:
    com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest val$setDesiredCapacityRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$3 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$3:
    com.amazonaws.services.autoscaling.model.ResumeProcessesRequest val$resumeProcessesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$30 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$30:
    com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest val$terminateInstanceInAutoScalingGroupRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$4 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$4:
    com.amazonaws.services.autoscaling.model.DeleteLaunchConfigurationRequest val$deleteLaunchConfigurationRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$5 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$5:
    com.amazonaws.services.autoscaling.model.DescribePoliciesRequest val$describePoliciesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribePoliciesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$6 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$6:
    com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesRequest val$describeScalingProcessTypesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$7 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$7:
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest val$createAutoScalingGroupRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$8 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$8:
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest val$describeScalingActivitiesRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$9 -> com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient$9:
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest val$describeNotificationConfigurationsRequest -> a
    com.amazonaws.services.autoscaling.AmazonAutoScalingAsyncClient this$0 -> b
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.autoscaling.AmazonAutoScalingClient -> com.amazonaws.services.autoscaling.AmazonAutoScalingClient:
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> d
    java.util.List exceptionUnmarshallers -> e
    com.amazonaws.auth.QueryStringSigner signer -> f
    void init() -> b
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult describeAutoScalingGroups(com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest) -> describeAutoScalingGroups
    void enableMetricsCollection(com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest) -> enableMetricsCollection
    void resumeProcesses(com.amazonaws.services.autoscaling.model.ResumeProcessesRequest) -> resumeProcesses
    void deleteLaunchConfiguration(com.amazonaws.services.autoscaling.model.DeleteLaunchConfigurationRequest) -> deleteLaunchConfiguration
    com.amazonaws.services.autoscaling.model.DescribePoliciesResult describePolicies(com.amazonaws.services.autoscaling.model.DescribePoliciesRequest) -> describePolicies
    com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult describeScalingProcessTypes(com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesRequest) -> describeScalingProcessTypes
    void createAutoScalingGroup(com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest) -> createAutoScalingGroup
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult describeScalingActivities(com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest) -> describeScalingActivities
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult describeNotificationConfigurations(com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest) -> describeNotificationConfigurations
    void executePolicy(com.amazonaws.services.autoscaling.model.ExecutePolicyRequest) -> executePolicy
    com.amazonaws.services.autoscaling.model.PutScalingPolicyResult putScalingPolicy(com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest) -> putScalingPolicy
    void putNotificationConfiguration(com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest) -> putNotificationConfiguration
    void deletePolicy(com.amazonaws.services.autoscaling.model.DeletePolicyRequest) -> deletePolicy
    void deleteNotificationConfiguration(com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest) -> deleteNotificationConfiguration
    void deleteScheduledAction(com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest) -> deleteScheduledAction
    void setInstanceHealth(com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest) -> setInstanceHealth
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult describeAutoScalingNotificationTypes(com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesRequest) -> describeAutoScalingNotificationTypes
    void suspendProcesses(com.amazonaws.services.autoscaling.model.SuspendProcessesRequest) -> suspendProcesses
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult describeAutoScalingInstances(com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest) -> describeAutoScalingInstances
    void createLaunchConfiguration(com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest) -> createLaunchConfiguration
    void deleteAutoScalingGroup(com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest) -> deleteAutoScalingGroup
    void disableMetricsCollection(com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest) -> disableMetricsCollection
    void updateAutoScalingGroup(com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest) -> updateAutoScalingGroup
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult describeLaunchConfigurations(com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest) -> describeLaunchConfigurations
    com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult describeAdjustmentTypes(com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesRequest) -> describeAdjustmentTypes
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult describeScheduledActions(com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest) -> describeScheduledActions
    void putScheduledUpdateGroupAction(com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest) -> putScheduledUpdateGroupAction
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult describeMetricCollectionTypes(com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesRequest) -> describeMetricCollectionTypes
    void setDesiredCapacity(com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest) -> setDesiredCapacity
    com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupResult terminateInstanceInAutoScalingGroup(com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest) -> terminateInstanceInAutoScalingGroup
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult describeAutoScalingGroups() -> describeAutoScalingGroups
    com.amazonaws.services.autoscaling.model.DescribePoliciesResult describePolicies() -> describePolicies
    com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult describeScalingProcessTypes() -> describeScalingProcessTypes
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult describeScalingActivities() -> describeScalingActivities
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult describeNotificationConfigurations() -> describeNotificationConfigurations
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult describeAutoScalingNotificationTypes() -> describeAutoScalingNotificationTypes
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult describeAutoScalingInstances() -> describeAutoScalingInstances
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult describeLaunchConfigurations() -> describeLaunchConfigurations
    com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult describeAdjustmentTypes() -> describeAdjustmentTypes
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult describeScheduledActions() -> describeScheduledActions
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult describeMetricCollectionTypes() -> describeMetricCollectionTypes
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller) -> a
com.amazonaws.services.autoscaling.model.Activity -> com.amazonaws.services.autoscaling.model.Activity:
    java.lang.String activityId -> a
    java.lang.String autoScalingGroupName -> b
    java.lang.String description -> c
    java.lang.String cause -> d
    java.util.Date startTime -> e
    java.util.Date endTime -> f
    java.lang.String statusCode -> g
    java.lang.String statusMessage -> h
    java.lang.Integer progress -> i
    java.lang.String getActivityId() -> getActivityId
    void setActivityId(java.lang.String) -> setActivityId
    com.amazonaws.services.autoscaling.model.Activity withActivityId(java.lang.String) -> withActivityId
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.Activity withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.autoscaling.model.Activity withDescription(java.lang.String) -> withDescription
    java.lang.String getCause() -> getCause
    void setCause(java.lang.String) -> setCause
    com.amazonaws.services.autoscaling.model.Activity withCause(java.lang.String) -> withCause
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    com.amazonaws.services.autoscaling.model.Activity withStartTime(java.util.Date) -> withStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    com.amazonaws.services.autoscaling.model.Activity withEndTime(java.util.Date) -> withEndTime
    java.lang.String getStatusCode() -> getStatusCode
    void setStatusCode(java.lang.String) -> setStatusCode
    com.amazonaws.services.autoscaling.model.Activity withStatusCode(java.lang.String) -> withStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    void setStatusMessage(java.lang.String) -> setStatusMessage
    com.amazonaws.services.autoscaling.model.Activity withStatusMessage(java.lang.String) -> withStatusMessage
    java.lang.Integer getProgress() -> getProgress
    void setProgress(java.lang.Integer) -> setProgress
    com.amazonaws.services.autoscaling.model.Activity withProgress(java.lang.Integer) -> withProgress
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.AdjustmentType -> com.amazonaws.services.autoscaling.model.AdjustmentType:
    java.lang.String adjustmentType -> a
    java.lang.String getAdjustmentType() -> getAdjustmentType
    void setAdjustmentType(java.lang.String) -> setAdjustmentType
    com.amazonaws.services.autoscaling.model.AdjustmentType withAdjustmentType(java.lang.String) -> withAdjustmentType
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.Alarm -> com.amazonaws.services.autoscaling.model.Alarm:
    java.lang.String alarmName -> a
    java.lang.String alarmARN -> b
    java.lang.String getAlarmName() -> getAlarmName
    void setAlarmName(java.lang.String) -> setAlarmName
    com.amazonaws.services.autoscaling.model.Alarm withAlarmName(java.lang.String) -> withAlarmName
    java.lang.String getAlarmARN() -> getAlarmARN
    void setAlarmARN(java.lang.String) -> setAlarmARN
    com.amazonaws.services.autoscaling.model.Alarm withAlarmARN(java.lang.String) -> withAlarmARN
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.AlreadyExistsException -> com.amazonaws.services.autoscaling.model.AlreadyExistsException:
com.amazonaws.services.autoscaling.model.AutoScalingGroup -> com.amazonaws.services.autoscaling.model.AutoScalingGroup:
    java.lang.String autoScalingGroupName -> a
    java.lang.String autoScalingGroupARN -> b
    java.lang.String launchConfigurationName -> c
    java.lang.Integer minSize -> d
    java.lang.Integer maxSize -> e
    java.lang.Integer desiredCapacity -> f
    java.lang.Integer defaultCooldown -> g
    java.util.List availabilityZones -> h
    java.util.List loadBalancerNames -> i
    java.lang.String healthCheckType -> j
    java.lang.Integer healthCheckGracePeriod -> k
    java.util.List instances -> l
    java.util.Date createdTime -> m
    java.util.List suspendedProcesses -> n
    java.lang.String placementGroup -> o
    java.lang.String vPCZoneIdentifier -> p
    java.util.List enabledMetrics -> q
    java.lang.String status -> r
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getAutoScalingGroupARN() -> getAutoScalingGroupARN
    void setAutoScalingGroupARN(java.lang.String) -> setAutoScalingGroupARN
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withAutoScalingGroupARN(java.lang.String) -> withAutoScalingGroupARN
    java.lang.String getLaunchConfigurationName() -> getLaunchConfigurationName
    void setLaunchConfigurationName(java.lang.String) -> setLaunchConfigurationName
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withLaunchConfigurationName(java.lang.String) -> withLaunchConfigurationName
    java.lang.Integer getMinSize() -> getMinSize
    void setMinSize(java.lang.Integer) -> setMinSize
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withMinSize(java.lang.Integer) -> withMinSize
    java.lang.Integer getMaxSize() -> getMaxSize
    void setMaxSize(java.lang.Integer) -> setMaxSize
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withMaxSize(java.lang.Integer) -> withMaxSize
    java.lang.Integer getDesiredCapacity() -> getDesiredCapacity
    void setDesiredCapacity(java.lang.Integer) -> setDesiredCapacity
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withDesiredCapacity(java.lang.Integer) -> withDesiredCapacity
    java.lang.Integer getDefaultCooldown() -> getDefaultCooldown
    void setDefaultCooldown(java.lang.Integer) -> setDefaultCooldown
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withDefaultCooldown(java.lang.Integer) -> withDefaultCooldown
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.util.List getLoadBalancerNames() -> getLoadBalancerNames
    void setLoadBalancerNames(java.util.Collection) -> setLoadBalancerNames
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withLoadBalancerNames(java.lang.String[]) -> withLoadBalancerNames
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withLoadBalancerNames(java.util.Collection) -> withLoadBalancerNames
    java.lang.String getHealthCheckType() -> getHealthCheckType
    void setHealthCheckType(java.lang.String) -> setHealthCheckType
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withHealthCheckType(java.lang.String) -> withHealthCheckType
    java.lang.Integer getHealthCheckGracePeriod() -> getHealthCheckGracePeriod
    void setHealthCheckGracePeriod(java.lang.Integer) -> setHealthCheckGracePeriod
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withHealthCheckGracePeriod(java.lang.Integer) -> withHealthCheckGracePeriod
    java.util.List getInstances() -> getInstances
    void setInstances(java.util.Collection) -> setInstances
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withInstances(com.amazonaws.services.autoscaling.model.Instance[]) -> withInstances
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withInstances(java.util.Collection) -> withInstances
    java.util.Date getCreatedTime() -> getCreatedTime
    void setCreatedTime(java.util.Date) -> setCreatedTime
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withCreatedTime(java.util.Date) -> withCreatedTime
    java.util.List getSuspendedProcesses() -> getSuspendedProcesses
    void setSuspendedProcesses(java.util.Collection) -> setSuspendedProcesses
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withSuspendedProcesses(com.amazonaws.services.autoscaling.model.SuspendedProcess[]) -> withSuspendedProcesses
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withSuspendedProcesses(java.util.Collection) -> withSuspendedProcesses
    java.lang.String getPlacementGroup() -> getPlacementGroup
    void setPlacementGroup(java.lang.String) -> setPlacementGroup
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withPlacementGroup(java.lang.String) -> withPlacementGroup
    java.lang.String getVPCZoneIdentifier() -> getVPCZoneIdentifier
    void setVPCZoneIdentifier(java.lang.String) -> setVPCZoneIdentifier
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withVPCZoneIdentifier(java.lang.String) -> withVPCZoneIdentifier
    java.util.List getEnabledMetrics() -> getEnabledMetrics
    void setEnabledMetrics(java.util.Collection) -> setEnabledMetrics
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withEnabledMetrics(com.amazonaws.services.autoscaling.model.EnabledMetric[]) -> withEnabledMetrics
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withEnabledMetrics(java.util.Collection) -> withEnabledMetrics
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    com.amazonaws.services.autoscaling.model.AutoScalingGroup withStatus(java.lang.String) -> withStatus
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails -> com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails:
    java.lang.String instanceId -> a
    java.lang.String autoScalingGroupName -> b
    java.lang.String availabilityZone -> c
    java.lang.String lifecycleState -> d
    java.lang.String healthStatus -> e
    java.lang.String launchConfigurationName -> f
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.String getLifecycleState() -> getLifecycleState
    void setLifecycleState(java.lang.String) -> setLifecycleState
    com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails withLifecycleState(java.lang.String) -> withLifecycleState
    java.lang.String getHealthStatus() -> getHealthStatus
    void setHealthStatus(java.lang.String) -> setHealthStatus
    com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails withHealthStatus(java.lang.String) -> withHealthStatus
    java.lang.String getLaunchConfigurationName() -> getLaunchConfigurationName
    void setLaunchConfigurationName(java.lang.String) -> setLaunchConfigurationName
    com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails withLaunchConfigurationName(java.lang.String) -> withLaunchConfigurationName
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.BlockDeviceMapping -> com.amazonaws.services.autoscaling.model.BlockDeviceMapping:
    java.lang.String virtualName -> a
    java.lang.String deviceName -> b
    com.amazonaws.services.autoscaling.model.Ebs ebs -> c
    java.lang.String getVirtualName() -> getVirtualName
    void setVirtualName(java.lang.String) -> setVirtualName
    com.amazonaws.services.autoscaling.model.BlockDeviceMapping withVirtualName(java.lang.String) -> withVirtualName
    java.lang.String getDeviceName() -> getDeviceName
    void setDeviceName(java.lang.String) -> setDeviceName
    com.amazonaws.services.autoscaling.model.BlockDeviceMapping withDeviceName(java.lang.String) -> withDeviceName
    com.amazonaws.services.autoscaling.model.Ebs getEbs() -> getEbs
    void setEbs(com.amazonaws.services.autoscaling.model.Ebs) -> setEbs
    com.amazonaws.services.autoscaling.model.BlockDeviceMapping withEbs(com.amazonaws.services.autoscaling.model.Ebs) -> withEbs
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest -> com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String launchConfigurationName -> b
    java.lang.Integer minSize -> c
    java.lang.Integer maxSize -> d
    java.lang.Integer desiredCapacity -> e
    java.lang.Integer defaultCooldown -> f
    java.util.List availabilityZones -> g
    java.util.List loadBalancerNames -> h
    java.lang.String healthCheckType -> i
    java.lang.Integer healthCheckGracePeriod -> j
    java.lang.String placementGroup -> k
    java.lang.String vPCZoneIdentifier -> l
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getLaunchConfigurationName() -> getLaunchConfigurationName
    void setLaunchConfigurationName(java.lang.String) -> setLaunchConfigurationName
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withLaunchConfigurationName(java.lang.String) -> withLaunchConfigurationName
    java.lang.Integer getMinSize() -> getMinSize
    void setMinSize(java.lang.Integer) -> setMinSize
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withMinSize(java.lang.Integer) -> withMinSize
    java.lang.Integer getMaxSize() -> getMaxSize
    void setMaxSize(java.lang.Integer) -> setMaxSize
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withMaxSize(java.lang.Integer) -> withMaxSize
    java.lang.Integer getDesiredCapacity() -> getDesiredCapacity
    void setDesiredCapacity(java.lang.Integer) -> setDesiredCapacity
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withDesiredCapacity(java.lang.Integer) -> withDesiredCapacity
    java.lang.Integer getDefaultCooldown() -> getDefaultCooldown
    void setDefaultCooldown(java.lang.Integer) -> setDefaultCooldown
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withDefaultCooldown(java.lang.Integer) -> withDefaultCooldown
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.util.List getLoadBalancerNames() -> getLoadBalancerNames
    void setLoadBalancerNames(java.util.Collection) -> setLoadBalancerNames
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withLoadBalancerNames(java.lang.String[]) -> withLoadBalancerNames
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withLoadBalancerNames(java.util.Collection) -> withLoadBalancerNames
    java.lang.String getHealthCheckType() -> getHealthCheckType
    void setHealthCheckType(java.lang.String) -> setHealthCheckType
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withHealthCheckType(java.lang.String) -> withHealthCheckType
    java.lang.Integer getHealthCheckGracePeriod() -> getHealthCheckGracePeriod
    void setHealthCheckGracePeriod(java.lang.Integer) -> setHealthCheckGracePeriod
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withHealthCheckGracePeriod(java.lang.Integer) -> withHealthCheckGracePeriod
    java.lang.String getPlacementGroup() -> getPlacementGroup
    void setPlacementGroup(java.lang.String) -> setPlacementGroup
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withPlacementGroup(java.lang.String) -> withPlacementGroup
    java.lang.String getVPCZoneIdentifier() -> getVPCZoneIdentifier
    void setVPCZoneIdentifier(java.lang.String) -> setVPCZoneIdentifier
    com.amazonaws.services.autoscaling.model.CreateAutoScalingGroupRequest withVPCZoneIdentifier(java.lang.String) -> withVPCZoneIdentifier
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest -> com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest:
    java.lang.String launchConfigurationName -> a
    java.lang.String imageId -> b
    java.lang.String keyName -> c
    java.util.List securityGroups -> d
    java.lang.String userData -> e
    java.lang.String instanceType -> f
    java.lang.String kernelId -> g
    java.lang.String ramdiskId -> h
    java.util.List blockDeviceMappings -> i
    com.amazonaws.services.autoscaling.model.InstanceMonitoring instanceMonitoring -> j
    java.lang.String getLaunchConfigurationName() -> getLaunchConfigurationName
    void setLaunchConfigurationName(java.lang.String) -> setLaunchConfigurationName
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withLaunchConfigurationName(java.lang.String) -> withLaunchConfigurationName
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withImageId(java.lang.String) -> withImageId
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withKeyName(java.lang.String) -> withKeyName
    java.util.List getSecurityGroups() -> getSecurityGroups
    void setSecurityGroups(java.util.Collection) -> setSecurityGroups
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withSecurityGroups(java.lang.String[]) -> withSecurityGroups
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withSecurityGroups(java.util.Collection) -> withSecurityGroups
    java.lang.String getUserData() -> getUserData
    void setUserData(java.lang.String) -> setUserData
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withUserData(java.lang.String) -> withUserData
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withInstanceType(java.lang.String) -> withInstanceType
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withRamdiskId(java.lang.String) -> withRamdiskId
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withBlockDeviceMappings(com.amazonaws.services.autoscaling.model.BlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    com.amazonaws.services.autoscaling.model.InstanceMonitoring getInstanceMonitoring() -> getInstanceMonitoring
    void setInstanceMonitoring(com.amazonaws.services.autoscaling.model.InstanceMonitoring) -> setInstanceMonitoring
    com.amazonaws.services.autoscaling.model.CreateLaunchConfigurationRequest withInstanceMonitoring(com.amazonaws.services.autoscaling.model.InstanceMonitoring) -> withInstanceMonitoring
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest -> com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.Boolean forceDelete -> b
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.Boolean isForceDelete() -> isForceDelete
    void setForceDelete(java.lang.Boolean) -> setForceDelete
    com.amazonaws.services.autoscaling.model.DeleteAutoScalingGroupRequest withForceDelete(java.lang.Boolean) -> withForceDelete
    java.lang.Boolean getForceDelete() -> getForceDelete
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DeleteLaunchConfigurationRequest -> com.amazonaws.services.autoscaling.model.DeleteLaunchConfigurationRequest:
    java.lang.String launchConfigurationName -> a
    java.lang.String getLaunchConfigurationName() -> getLaunchConfigurationName
    void setLaunchConfigurationName(java.lang.String) -> setLaunchConfigurationName
    com.amazonaws.services.autoscaling.model.DeleteLaunchConfigurationRequest withLaunchConfigurationName(java.lang.String) -> withLaunchConfigurationName
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest -> com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String topicARN -> b
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getTopicARN() -> getTopicARN
    void setTopicARN(java.lang.String) -> setTopicARN
    com.amazonaws.services.autoscaling.model.DeleteNotificationConfigurationRequest withTopicARN(java.lang.String) -> withTopicARN
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DeletePolicyRequest -> com.amazonaws.services.autoscaling.model.DeletePolicyRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String policyName -> b
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.DeletePolicyRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.autoscaling.model.DeletePolicyRequest withPolicyName(java.lang.String) -> withPolicyName
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest -> com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String scheduledActionName -> b
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getScheduledActionName() -> getScheduledActionName
    void setScheduledActionName(java.lang.String) -> setScheduledActionName
    com.amazonaws.services.autoscaling.model.DeleteScheduledActionRequest withScheduledActionName(java.lang.String) -> withScheduledActionName
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesRequest -> com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult -> com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult:
    java.util.List adjustmentTypes -> a
    java.util.List getAdjustmentTypes() -> getAdjustmentTypes
    void setAdjustmentTypes(java.util.Collection) -> setAdjustmentTypes
    com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult withAdjustmentTypes(com.amazonaws.services.autoscaling.model.AdjustmentType[]) -> withAdjustmentTypes
    com.amazonaws.services.autoscaling.model.DescribeAdjustmentTypesResult withAdjustmentTypes(java.util.Collection) -> withAdjustmentTypes
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest -> com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest:
    java.util.List autoScalingGroupNames -> a
    java.lang.String nextToken -> b
    java.lang.Integer maxRecords -> c
    java.util.List getAutoScalingGroupNames() -> getAutoScalingGroupNames
    void setAutoScalingGroupNames(java.util.Collection) -> setAutoScalingGroupNames
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest withAutoScalingGroupNames(java.lang.String[]) -> withAutoScalingGroupNames
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest withAutoScalingGroupNames(java.util.Collection) -> withAutoScalingGroupNames
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult -> com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult:
    java.util.List autoScalingGroups -> a
    java.lang.String nextToken -> b
    java.util.List getAutoScalingGroups() -> getAutoScalingGroups
    void setAutoScalingGroups(java.util.Collection) -> setAutoScalingGroups
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult withAutoScalingGroups(com.amazonaws.services.autoscaling.model.AutoScalingGroup[]) -> withAutoScalingGroups
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult withAutoScalingGroups(java.util.Collection) -> withAutoScalingGroups
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingGroupsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest -> com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest:
    java.util.List instanceIds -> a
    java.lang.Integer maxRecords -> b
    java.lang.String nextToken -> c
    java.util.List getInstanceIds() -> getInstanceIds
    void setInstanceIds(java.util.Collection) -> setInstanceIds
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest withInstanceIds(java.lang.String[]) -> withInstanceIds
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest withInstanceIds(java.util.Collection) -> withInstanceIds
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult -> com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult:
    java.util.List autoScalingInstances -> a
    java.lang.String nextToken -> b
    java.util.List getAutoScalingInstances() -> getAutoScalingInstances
    void setAutoScalingInstances(java.util.Collection) -> setAutoScalingInstances
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult withAutoScalingInstances(com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails[]) -> withAutoScalingInstances
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult withAutoScalingInstances(java.util.Collection) -> withAutoScalingInstances
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingInstancesResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesRequest -> com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult -> com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult:
    java.util.List autoScalingNotificationTypes -> a
    java.util.List getAutoScalingNotificationTypes() -> getAutoScalingNotificationTypes
    void setAutoScalingNotificationTypes(java.util.Collection) -> setAutoScalingNotificationTypes
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult withAutoScalingNotificationTypes(java.lang.String[]) -> withAutoScalingNotificationTypes
    com.amazonaws.services.autoscaling.model.DescribeAutoScalingNotificationTypesResult withAutoScalingNotificationTypes(java.util.Collection) -> withAutoScalingNotificationTypes
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest -> com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest:
    java.util.List launchConfigurationNames -> a
    java.lang.String nextToken -> b
    java.lang.Integer maxRecords -> c
    java.util.List getLaunchConfigurationNames() -> getLaunchConfigurationNames
    void setLaunchConfigurationNames(java.util.Collection) -> setLaunchConfigurationNames
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest withLaunchConfigurationNames(java.lang.String[]) -> withLaunchConfigurationNames
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest withLaunchConfigurationNames(java.util.Collection) -> withLaunchConfigurationNames
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult -> com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult:
    java.util.List launchConfigurations -> a
    java.lang.String nextToken -> b
    java.util.List getLaunchConfigurations() -> getLaunchConfigurations
    void setLaunchConfigurations(java.util.Collection) -> setLaunchConfigurations
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult withLaunchConfigurations(com.amazonaws.services.autoscaling.model.LaunchConfiguration[]) -> withLaunchConfigurations
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult withLaunchConfigurations(java.util.Collection) -> withLaunchConfigurations
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeLaunchConfigurationsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesRequest -> com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult -> com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult:
    java.util.List metrics -> a
    java.util.List granularities -> b
    java.util.List getMetrics() -> getMetrics
    void setMetrics(java.util.Collection) -> setMetrics
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult withMetrics(com.amazonaws.services.autoscaling.model.MetricCollectionType[]) -> withMetrics
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult withMetrics(java.util.Collection) -> withMetrics
    java.util.List getGranularities() -> getGranularities
    void setGranularities(java.util.Collection) -> setGranularities
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult withGranularities(com.amazonaws.services.autoscaling.model.MetricGranularityType[]) -> withGranularities
    com.amazonaws.services.autoscaling.model.DescribeMetricCollectionTypesResult withGranularities(java.util.Collection) -> withGranularities
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest -> com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest:
    java.util.List autoScalingGroupNames -> a
    java.lang.String nextToken -> b
    java.lang.Integer maxRecords -> c
    java.util.List getAutoScalingGroupNames() -> getAutoScalingGroupNames
    void setAutoScalingGroupNames(java.util.Collection) -> setAutoScalingGroupNames
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest withAutoScalingGroupNames(java.lang.String[]) -> withAutoScalingGroupNames
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest withAutoScalingGroupNames(java.util.Collection) -> withAutoScalingGroupNames
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult -> com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult:
    java.util.List notificationConfigurations -> a
    java.lang.String nextToken -> b
    java.util.List getNotificationConfigurations() -> getNotificationConfigurations
    void setNotificationConfigurations(java.util.Collection) -> setNotificationConfigurations
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult withNotificationConfigurations(com.amazonaws.services.autoscaling.model.NotificationConfiguration[]) -> withNotificationConfigurations
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult withNotificationConfigurations(java.util.Collection) -> withNotificationConfigurations
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeNotificationConfigurationsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribePoliciesRequest -> com.amazonaws.services.autoscaling.model.DescribePoliciesRequest:
    java.lang.String autoScalingGroupName -> a
    java.util.List policyNames -> b
    java.lang.String nextToken -> c
    java.lang.Integer maxRecords -> d
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.DescribePoliciesRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.util.List getPolicyNames() -> getPolicyNames
    void setPolicyNames(java.util.Collection) -> setPolicyNames
    com.amazonaws.services.autoscaling.model.DescribePoliciesRequest withPolicyNames(java.lang.String[]) -> withPolicyNames
    com.amazonaws.services.autoscaling.model.DescribePoliciesRequest withPolicyNames(java.util.Collection) -> withPolicyNames
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribePoliciesRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.autoscaling.model.DescribePoliciesRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribePoliciesResult -> com.amazonaws.services.autoscaling.model.DescribePoliciesResult:
    java.util.List scalingPolicies -> a
    java.lang.String nextToken -> b
    java.util.List getScalingPolicies() -> getScalingPolicies
    void setScalingPolicies(java.util.Collection) -> setScalingPolicies
    com.amazonaws.services.autoscaling.model.DescribePoliciesResult withScalingPolicies(com.amazonaws.services.autoscaling.model.ScalingPolicy[]) -> withScalingPolicies
    com.amazonaws.services.autoscaling.model.DescribePoliciesResult withScalingPolicies(java.util.Collection) -> withScalingPolicies
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribePoliciesResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest -> com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest:
    java.util.List activityIds -> a
    java.lang.String autoScalingGroupName -> b
    java.lang.Integer maxRecords -> c
    java.lang.String nextToken -> d
    java.util.List getActivityIds() -> getActivityIds
    void setActivityIds(java.util.Collection) -> setActivityIds
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest withActivityIds(java.lang.String[]) -> withActivityIds
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest withActivityIds(java.util.Collection) -> withActivityIds
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult -> com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult:
    java.util.List activities -> a
    java.lang.String nextToken -> b
    java.util.List getActivities() -> getActivities
    void setActivities(java.util.Collection) -> setActivities
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult withActivities(com.amazonaws.services.autoscaling.model.Activity[]) -> withActivities
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult withActivities(java.util.Collection) -> withActivities
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeScalingActivitiesResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesRequest -> com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult -> com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult:
    java.util.List processes -> a
    java.util.List getProcesses() -> getProcesses
    void setProcesses(java.util.Collection) -> setProcesses
    com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult withProcesses(com.amazonaws.services.autoscaling.model.ProcessType[]) -> withProcesses
    com.amazonaws.services.autoscaling.model.DescribeScalingProcessTypesResult withProcesses(java.util.Collection) -> withProcesses
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest -> com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest:
    java.lang.String autoScalingGroupName -> a
    java.util.List scheduledActionNames -> b
    java.util.Date startTime -> c
    java.util.Date endTime -> d
    java.lang.String nextToken -> e
    java.lang.Integer maxRecords -> f
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.util.List getScheduledActionNames() -> getScheduledActionNames
    void setScheduledActionNames(java.util.Collection) -> setScheduledActionNames
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest withScheduledActionNames(java.lang.String[]) -> withScheduledActionNames
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest withScheduledActionNames(java.util.Collection) -> withScheduledActionNames
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest withStartTime(java.util.Date) -> withStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest withEndTime(java.util.Date) -> withEndTime
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult -> com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult:
    java.util.List scheduledUpdateGroupActions -> a
    java.lang.String nextToken -> b
    java.util.List getScheduledUpdateGroupActions() -> getScheduledUpdateGroupActions
    void setScheduledUpdateGroupActions(java.util.Collection) -> setScheduledUpdateGroupActions
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult withScheduledUpdateGroupActions(com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction[]) -> withScheduledUpdateGroupActions
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult withScheduledUpdateGroupActions(java.util.Collection) -> withScheduledUpdateGroupActions
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.autoscaling.model.DescribeScheduledActionsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest -> com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest:
    java.lang.String autoScalingGroupName -> a
    java.util.List metrics -> b
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.util.List getMetrics() -> getMetrics
    void setMetrics(java.util.Collection) -> setMetrics
    com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest withMetrics(java.lang.String[]) -> withMetrics
    com.amazonaws.services.autoscaling.model.DisableMetricsCollectionRequest withMetrics(java.util.Collection) -> withMetrics
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.Ebs -> com.amazonaws.services.autoscaling.model.Ebs:
    java.lang.String snapshotId -> a
    java.lang.Integer volumeSize -> b
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.autoscaling.model.Ebs withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.Integer getVolumeSize() -> getVolumeSize
    void setVolumeSize(java.lang.Integer) -> setVolumeSize
    com.amazonaws.services.autoscaling.model.Ebs withVolumeSize(java.lang.Integer) -> withVolumeSize
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest -> com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest:
    java.lang.String autoScalingGroupName -> a
    java.util.List metrics -> b
    java.lang.String granularity -> c
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.util.List getMetrics() -> getMetrics
    void setMetrics(java.util.Collection) -> setMetrics
    com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest withMetrics(java.lang.String[]) -> withMetrics
    com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest withMetrics(java.util.Collection) -> withMetrics
    java.lang.String getGranularity() -> getGranularity
    void setGranularity(java.lang.String) -> setGranularity
    com.amazonaws.services.autoscaling.model.EnableMetricsCollectionRequest withGranularity(java.lang.String) -> withGranularity
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.EnabledMetric -> com.amazonaws.services.autoscaling.model.EnabledMetric:
    java.lang.String metric -> a
    java.lang.String granularity -> b
    java.lang.String getMetric() -> getMetric
    void setMetric(java.lang.String) -> setMetric
    com.amazonaws.services.autoscaling.model.EnabledMetric withMetric(java.lang.String) -> withMetric
    java.lang.String getGranularity() -> getGranularity
    void setGranularity(java.lang.String) -> setGranularity
    com.amazonaws.services.autoscaling.model.EnabledMetric withGranularity(java.lang.String) -> withGranularity
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.ExecutePolicyRequest -> com.amazonaws.services.autoscaling.model.ExecutePolicyRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String policyName -> b
    java.lang.Boolean honorCooldown -> c
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.ExecutePolicyRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.autoscaling.model.ExecutePolicyRequest withPolicyName(java.lang.String) -> withPolicyName
    java.lang.Boolean isHonorCooldown() -> isHonorCooldown
    void setHonorCooldown(java.lang.Boolean) -> setHonorCooldown
    com.amazonaws.services.autoscaling.model.ExecutePolicyRequest withHonorCooldown(java.lang.Boolean) -> withHonorCooldown
    java.lang.Boolean getHonorCooldown() -> getHonorCooldown
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.Instance -> com.amazonaws.services.autoscaling.model.Instance:
    java.lang.String instanceId -> a
    java.lang.String availabilityZone -> b
    java.lang.String lifecycleState -> c
    java.lang.String healthStatus -> d
    java.lang.String launchConfigurationName -> e
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.autoscaling.model.Instance withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.autoscaling.model.Instance withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.String getLifecycleState() -> getLifecycleState
    void setLifecycleState(java.lang.String) -> setLifecycleState
    com.amazonaws.services.autoscaling.model.Instance withLifecycleState(java.lang.String) -> withLifecycleState
    java.lang.String getHealthStatus() -> getHealthStatus
    void setHealthStatus(java.lang.String) -> setHealthStatus
    com.amazonaws.services.autoscaling.model.Instance withHealthStatus(java.lang.String) -> withHealthStatus
    java.lang.String getLaunchConfigurationName() -> getLaunchConfigurationName
    void setLaunchConfigurationName(java.lang.String) -> setLaunchConfigurationName
    com.amazonaws.services.autoscaling.model.Instance withLaunchConfigurationName(java.lang.String) -> withLaunchConfigurationName
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.InstanceMonitoring -> com.amazonaws.services.autoscaling.model.InstanceMonitoring:
    java.lang.Boolean enabled -> a
    java.lang.Boolean isEnabled() -> isEnabled
    void setEnabled(java.lang.Boolean) -> setEnabled
    com.amazonaws.services.autoscaling.model.InstanceMonitoring withEnabled(java.lang.Boolean) -> withEnabled
    java.lang.Boolean getEnabled() -> getEnabled
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.InvalidNextTokenException -> com.amazonaws.services.autoscaling.model.InvalidNextTokenException:
com.amazonaws.services.autoscaling.model.LaunchConfiguration -> com.amazonaws.services.autoscaling.model.LaunchConfiguration:
    java.lang.String launchConfigurationName -> a
    java.lang.String launchConfigurationARN -> b
    java.lang.String imageId -> c
    java.lang.String keyName -> d
    java.util.List securityGroups -> e
    java.lang.String userData -> f
    java.lang.String instanceType -> g
    java.lang.String kernelId -> h
    java.lang.String ramdiskId -> i
    java.util.List blockDeviceMappings -> j
    com.amazonaws.services.autoscaling.model.InstanceMonitoring instanceMonitoring -> k
    java.util.Date createdTime -> l
    java.lang.String getLaunchConfigurationName() -> getLaunchConfigurationName
    void setLaunchConfigurationName(java.lang.String) -> setLaunchConfigurationName
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withLaunchConfigurationName(java.lang.String) -> withLaunchConfigurationName
    java.lang.String getLaunchConfigurationARN() -> getLaunchConfigurationARN
    void setLaunchConfigurationARN(java.lang.String) -> setLaunchConfigurationARN
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withLaunchConfigurationARN(java.lang.String) -> withLaunchConfigurationARN
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withImageId(java.lang.String) -> withImageId
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withKeyName(java.lang.String) -> withKeyName
    java.util.List getSecurityGroups() -> getSecurityGroups
    void setSecurityGroups(java.util.Collection) -> setSecurityGroups
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withSecurityGroups(java.lang.String[]) -> withSecurityGroups
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withSecurityGroups(java.util.Collection) -> withSecurityGroups
    java.lang.String getUserData() -> getUserData
    void setUserData(java.lang.String) -> setUserData
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withUserData(java.lang.String) -> withUserData
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withInstanceType(java.lang.String) -> withInstanceType
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withRamdiskId(java.lang.String) -> withRamdiskId
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withBlockDeviceMappings(com.amazonaws.services.autoscaling.model.BlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    com.amazonaws.services.autoscaling.model.InstanceMonitoring getInstanceMonitoring() -> getInstanceMonitoring
    void setInstanceMonitoring(com.amazonaws.services.autoscaling.model.InstanceMonitoring) -> setInstanceMonitoring
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withInstanceMonitoring(com.amazonaws.services.autoscaling.model.InstanceMonitoring) -> withInstanceMonitoring
    java.util.Date getCreatedTime() -> getCreatedTime
    void setCreatedTime(java.util.Date) -> setCreatedTime
    com.amazonaws.services.autoscaling.model.LaunchConfiguration withCreatedTime(java.util.Date) -> withCreatedTime
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.LimitExceededException -> com.amazonaws.services.autoscaling.model.LimitExceededException:
com.amazonaws.services.autoscaling.model.MetricCollectionType -> com.amazonaws.services.autoscaling.model.MetricCollectionType:
    java.lang.String metric -> a
    java.lang.String getMetric() -> getMetric
    void setMetric(java.lang.String) -> setMetric
    com.amazonaws.services.autoscaling.model.MetricCollectionType withMetric(java.lang.String) -> withMetric
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.MetricGranularityType -> com.amazonaws.services.autoscaling.model.MetricGranularityType:
    java.lang.String granularity -> a
    java.lang.String getGranularity() -> getGranularity
    void setGranularity(java.lang.String) -> setGranularity
    com.amazonaws.services.autoscaling.model.MetricGranularityType withGranularity(java.lang.String) -> withGranularity
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.NotificationConfiguration -> com.amazonaws.services.autoscaling.model.NotificationConfiguration:
    java.lang.String autoScalingGroupName -> a
    java.lang.String topicARN -> b
    java.lang.String notificationType -> c
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.NotificationConfiguration withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getTopicARN() -> getTopicARN
    void setTopicARN(java.lang.String) -> setTopicARN
    com.amazonaws.services.autoscaling.model.NotificationConfiguration withTopicARN(java.lang.String) -> withTopicARN
    java.lang.String getNotificationType() -> getNotificationType
    void setNotificationType(java.lang.String) -> setNotificationType
    com.amazonaws.services.autoscaling.model.NotificationConfiguration withNotificationType(java.lang.String) -> withNotificationType
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.ProcessType -> com.amazonaws.services.autoscaling.model.ProcessType:
    java.lang.String processName -> a
    java.lang.String getProcessName() -> getProcessName
    void setProcessName(java.lang.String) -> setProcessName
    com.amazonaws.services.autoscaling.model.ProcessType withProcessName(java.lang.String) -> withProcessName
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest -> com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String topicARN -> b
    java.util.List notificationTypes -> c
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getTopicARN() -> getTopicARN
    void setTopicARN(java.lang.String) -> setTopicARN
    com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest withTopicARN(java.lang.String) -> withTopicARN
    java.util.List getNotificationTypes() -> getNotificationTypes
    void setNotificationTypes(java.util.Collection) -> setNotificationTypes
    com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest withNotificationTypes(java.lang.String[]) -> withNotificationTypes
    com.amazonaws.services.autoscaling.model.PutNotificationConfigurationRequest withNotificationTypes(java.util.Collection) -> withNotificationTypes
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest -> com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String policyName -> b
    java.lang.Integer scalingAdjustment -> c
    java.lang.String adjustmentType -> d
    java.lang.Integer cooldown -> e
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest withPolicyName(java.lang.String) -> withPolicyName
    java.lang.Integer getScalingAdjustment() -> getScalingAdjustment
    void setScalingAdjustment(java.lang.Integer) -> setScalingAdjustment
    com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest withScalingAdjustment(java.lang.Integer) -> withScalingAdjustment
    java.lang.String getAdjustmentType() -> getAdjustmentType
    void setAdjustmentType(java.lang.String) -> setAdjustmentType
    com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest withAdjustmentType(java.lang.String) -> withAdjustmentType
    java.lang.Integer getCooldown() -> getCooldown
    void setCooldown(java.lang.Integer) -> setCooldown
    com.amazonaws.services.autoscaling.model.PutScalingPolicyRequest withCooldown(java.lang.Integer) -> withCooldown
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.PutScalingPolicyResult -> com.amazonaws.services.autoscaling.model.PutScalingPolicyResult:
    java.lang.String policyARN -> a
    java.lang.String getPolicyARN() -> getPolicyARN
    void setPolicyARN(java.lang.String) -> setPolicyARN
    com.amazonaws.services.autoscaling.model.PutScalingPolicyResult withPolicyARN(java.lang.String) -> withPolicyARN
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest -> com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String scheduledActionName -> b
    java.util.Date time -> c
    java.util.Date startTime -> d
    java.util.Date endTime -> e
    java.lang.String recurrence -> f
    java.lang.Integer minSize -> g
    java.lang.Integer maxSize -> h
    java.lang.Integer desiredCapacity -> i
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getScheduledActionName() -> getScheduledActionName
    void setScheduledActionName(java.lang.String) -> setScheduledActionName
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withScheduledActionName(java.lang.String) -> withScheduledActionName
    java.util.Date getTime() -> getTime
    void setTime(java.util.Date) -> setTime
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withTime(java.util.Date) -> withTime
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withStartTime(java.util.Date) -> withStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withEndTime(java.util.Date) -> withEndTime
    java.lang.String getRecurrence() -> getRecurrence
    void setRecurrence(java.lang.String) -> setRecurrence
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withRecurrence(java.lang.String) -> withRecurrence
    java.lang.Integer getMinSize() -> getMinSize
    void setMinSize(java.lang.Integer) -> setMinSize
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withMinSize(java.lang.Integer) -> withMinSize
    java.lang.Integer getMaxSize() -> getMaxSize
    void setMaxSize(java.lang.Integer) -> setMaxSize
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withMaxSize(java.lang.Integer) -> withMaxSize
    java.lang.Integer getDesiredCapacity() -> getDesiredCapacity
    void setDesiredCapacity(java.lang.Integer) -> setDesiredCapacity
    com.amazonaws.services.autoscaling.model.PutScheduledUpdateGroupActionRequest withDesiredCapacity(java.lang.Integer) -> withDesiredCapacity
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.ResourceInUseException -> com.amazonaws.services.autoscaling.model.ResourceInUseException:
com.amazonaws.services.autoscaling.model.ResumeProcessesRequest -> com.amazonaws.services.autoscaling.model.ResumeProcessesRequest:
    java.lang.String autoScalingGroupName -> a
    java.util.List scalingProcesses -> b
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.ResumeProcessesRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.util.List getScalingProcesses() -> getScalingProcesses
    void setScalingProcesses(java.util.Collection) -> setScalingProcesses
    com.amazonaws.services.autoscaling.model.ResumeProcessesRequest withScalingProcesses(java.lang.String[]) -> withScalingProcesses
    com.amazonaws.services.autoscaling.model.ResumeProcessesRequest withScalingProcesses(java.util.Collection) -> withScalingProcesses
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.ScalingActivityInProgressException -> com.amazonaws.services.autoscaling.model.ScalingActivityInProgressException:
com.amazonaws.services.autoscaling.model.ScalingPolicy -> com.amazonaws.services.autoscaling.model.ScalingPolicy:
    java.lang.String autoScalingGroupName -> a
    java.lang.String policyName -> b
    java.lang.Integer scalingAdjustment -> c
    java.lang.String adjustmentType -> d
    java.lang.Integer cooldown -> e
    java.lang.String policyARN -> f
    java.util.List alarms -> g
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.ScalingPolicy withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.autoscaling.model.ScalingPolicy withPolicyName(java.lang.String) -> withPolicyName
    java.lang.Integer getScalingAdjustment() -> getScalingAdjustment
    void setScalingAdjustment(java.lang.Integer) -> setScalingAdjustment
    com.amazonaws.services.autoscaling.model.ScalingPolicy withScalingAdjustment(java.lang.Integer) -> withScalingAdjustment
    java.lang.String getAdjustmentType() -> getAdjustmentType
    void setAdjustmentType(java.lang.String) -> setAdjustmentType
    com.amazonaws.services.autoscaling.model.ScalingPolicy withAdjustmentType(java.lang.String) -> withAdjustmentType
    java.lang.Integer getCooldown() -> getCooldown
    void setCooldown(java.lang.Integer) -> setCooldown
    com.amazonaws.services.autoscaling.model.ScalingPolicy withCooldown(java.lang.Integer) -> withCooldown
    java.lang.String getPolicyARN() -> getPolicyARN
    void setPolicyARN(java.lang.String) -> setPolicyARN
    com.amazonaws.services.autoscaling.model.ScalingPolicy withPolicyARN(java.lang.String) -> withPolicyARN
    java.util.List getAlarms() -> getAlarms
    void setAlarms(java.util.Collection) -> setAlarms
    com.amazonaws.services.autoscaling.model.ScalingPolicy withAlarms(com.amazonaws.services.autoscaling.model.Alarm[]) -> withAlarms
    com.amazonaws.services.autoscaling.model.ScalingPolicy withAlarms(java.util.Collection) -> withAlarms
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction -> com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction:
    java.lang.String autoScalingGroupName -> a
    java.lang.String scheduledActionName -> b
    java.lang.String scheduledActionARN -> c
    java.util.Date time -> d
    java.util.Date startTime -> e
    java.util.Date endTime -> f
    java.lang.String recurrence -> g
    java.lang.Integer minSize -> h
    java.lang.Integer maxSize -> i
    java.lang.Integer desiredCapacity -> j
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getScheduledActionName() -> getScheduledActionName
    void setScheduledActionName(java.lang.String) -> setScheduledActionName
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withScheduledActionName(java.lang.String) -> withScheduledActionName
    java.lang.String getScheduledActionARN() -> getScheduledActionARN
    void setScheduledActionARN(java.lang.String) -> setScheduledActionARN
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withScheduledActionARN(java.lang.String) -> withScheduledActionARN
    java.util.Date getTime() -> getTime
    void setTime(java.util.Date) -> setTime
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withTime(java.util.Date) -> withTime
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withStartTime(java.util.Date) -> withStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withEndTime(java.util.Date) -> withEndTime
    java.lang.String getRecurrence() -> getRecurrence
    void setRecurrence(java.lang.String) -> setRecurrence
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withRecurrence(java.lang.String) -> withRecurrence
    java.lang.Integer getMinSize() -> getMinSize
    void setMinSize(java.lang.Integer) -> setMinSize
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withMinSize(java.lang.Integer) -> withMinSize
    java.lang.Integer getMaxSize() -> getMaxSize
    void setMaxSize(java.lang.Integer) -> setMaxSize
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withMaxSize(java.lang.Integer) -> withMaxSize
    java.lang.Integer getDesiredCapacity() -> getDesiredCapacity
    void setDesiredCapacity(java.lang.Integer) -> setDesiredCapacity
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction withDesiredCapacity(java.lang.Integer) -> withDesiredCapacity
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest -> com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.Integer desiredCapacity -> b
    java.lang.Boolean honorCooldown -> c
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.Integer getDesiredCapacity() -> getDesiredCapacity
    void setDesiredCapacity(java.lang.Integer) -> setDesiredCapacity
    com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest withDesiredCapacity(java.lang.Integer) -> withDesiredCapacity
    java.lang.Boolean isHonorCooldown() -> isHonorCooldown
    void setHonorCooldown(java.lang.Boolean) -> setHonorCooldown
    com.amazonaws.services.autoscaling.model.SetDesiredCapacityRequest withHonorCooldown(java.lang.Boolean) -> withHonorCooldown
    java.lang.Boolean getHonorCooldown() -> getHonorCooldown
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest -> com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest:
    java.lang.String instanceId -> a
    java.lang.String healthStatus -> b
    java.lang.Boolean shouldRespectGracePeriod -> c
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getHealthStatus() -> getHealthStatus
    void setHealthStatus(java.lang.String) -> setHealthStatus
    com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest withHealthStatus(java.lang.String) -> withHealthStatus
    java.lang.Boolean isShouldRespectGracePeriod() -> isShouldRespectGracePeriod
    void setShouldRespectGracePeriod(java.lang.Boolean) -> setShouldRespectGracePeriod
    com.amazonaws.services.autoscaling.model.SetInstanceHealthRequest withShouldRespectGracePeriod(java.lang.Boolean) -> withShouldRespectGracePeriod
    java.lang.Boolean getShouldRespectGracePeriod() -> getShouldRespectGracePeriod
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.SuspendProcessesRequest -> com.amazonaws.services.autoscaling.model.SuspendProcessesRequest:
    java.lang.String autoScalingGroupName -> a
    java.util.List scalingProcesses -> b
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.SuspendProcessesRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.util.List getScalingProcesses() -> getScalingProcesses
    void setScalingProcesses(java.util.Collection) -> setScalingProcesses
    com.amazonaws.services.autoscaling.model.SuspendProcessesRequest withScalingProcesses(java.lang.String[]) -> withScalingProcesses
    com.amazonaws.services.autoscaling.model.SuspendProcessesRequest withScalingProcesses(java.util.Collection) -> withScalingProcesses
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.SuspendedProcess -> com.amazonaws.services.autoscaling.model.SuspendedProcess:
    java.lang.String processName -> a
    java.lang.String suspensionReason -> b
    java.lang.String getProcessName() -> getProcessName
    void setProcessName(java.lang.String) -> setProcessName
    com.amazonaws.services.autoscaling.model.SuspendedProcess withProcessName(java.lang.String) -> withProcessName
    java.lang.String getSuspensionReason() -> getSuspensionReason
    void setSuspensionReason(java.lang.String) -> setSuspensionReason
    com.amazonaws.services.autoscaling.model.SuspendedProcess withSuspensionReason(java.lang.String) -> withSuspensionReason
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest -> com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest:
    java.lang.String instanceId -> a
    java.lang.Boolean shouldDecrementDesiredCapacity -> b
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.Boolean isShouldDecrementDesiredCapacity() -> isShouldDecrementDesiredCapacity
    void setShouldDecrementDesiredCapacity(java.lang.Boolean) -> setShouldDecrementDesiredCapacity
    com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest withShouldDecrementDesiredCapacity(java.lang.Boolean) -> withShouldDecrementDesiredCapacity
    java.lang.Boolean getShouldDecrementDesiredCapacity() -> getShouldDecrementDesiredCapacity
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupResult -> com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupResult:
    com.amazonaws.services.autoscaling.model.Activity activity -> a
    com.amazonaws.services.autoscaling.model.Activity getActivity() -> getActivity
    void setActivity(com.amazonaws.services.autoscaling.model.Activity) -> setActivity
    com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupResult withActivity(com.amazonaws.services.autoscaling.model.Activity) -> withActivity
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest -> com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest:
    java.lang.String autoScalingGroupName -> a
    java.lang.String launchConfigurationName -> b
    java.lang.Integer minSize -> c
    java.lang.Integer maxSize -> d
    java.lang.Integer desiredCapacity -> e
    java.lang.Integer defaultCooldown -> f
    java.util.List availabilityZones -> g
    java.lang.String healthCheckType -> h
    java.lang.Integer healthCheckGracePeriod -> i
    java.lang.String placementGroup -> j
    java.lang.String vPCZoneIdentifier -> k
    java.lang.String getAutoScalingGroupName() -> getAutoScalingGroupName
    void setAutoScalingGroupName(java.lang.String) -> setAutoScalingGroupName
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withAutoScalingGroupName(java.lang.String) -> withAutoScalingGroupName
    java.lang.String getLaunchConfigurationName() -> getLaunchConfigurationName
    void setLaunchConfigurationName(java.lang.String) -> setLaunchConfigurationName
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withLaunchConfigurationName(java.lang.String) -> withLaunchConfigurationName
    java.lang.Integer getMinSize() -> getMinSize
    void setMinSize(java.lang.Integer) -> setMinSize
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withMinSize(java.lang.Integer) -> withMinSize
    java.lang.Integer getMaxSize() -> getMaxSize
    void setMaxSize(java.lang.Integer) -> setMaxSize
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withMaxSize(java.lang.Integer) -> withMaxSize
    java.lang.Integer getDesiredCapacity() -> getDesiredCapacity
    void setDesiredCapacity(java.lang.Integer) -> setDesiredCapacity
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withDesiredCapacity(java.lang.Integer) -> withDesiredCapacity
    java.lang.Integer getDefaultCooldown() -> getDefaultCooldown
    void setDefaultCooldown(java.lang.Integer) -> setDefaultCooldown
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withDefaultCooldown(java.lang.Integer) -> withDefaultCooldown
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.lang.String getHealthCheckType() -> getHealthCheckType
    void setHealthCheckType(java.lang.String) -> setHealthCheckType
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withHealthCheckType(java.lang.String) -> withHealthCheckType
    java.lang.Integer getHealthCheckGracePeriod() -> getHealthCheckGracePeriod
    void setHealthCheckGracePeriod(java.lang.Integer) -> setHealthCheckGracePeriod
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withHealthCheckGracePeriod(java.lang.Integer) -> withHealthCheckGracePeriod
    java.lang.String getPlacementGroup() -> getPlacementGroup
    void setPlacementGroup(java.lang.String) -> setPlacementGroup
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withPlacementGroup(java.lang.String) -> withPlacementGroup
    java.lang.String getVPCZoneIdentifier() -> getVPCZoneIdentifier
    void setVPCZoneIdentifier(java.lang.String) -> setVPCZoneIdentifier
    com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest withVPCZoneIdentifier(java.lang.String) -> withVPCZoneIdentifier
    java.lang.String toString() -> toString
com.amazonaws.services.autoscaling.model.package-info -> com.amazonaws.services.autoscaling.model.package-info:
com.amazonaws.services.autoscaling.model.transform.ActivityStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.N:
    com.amazonaws.services.autoscaling.model.transform.ActivityStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.Activity unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.ActivityStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.AdjustmentTypeStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.g:
    com.amazonaws.services.autoscaling.model.transform.AdjustmentTypeStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.AdjustmentType unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.AdjustmentTypeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.AlarmStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.L:
    com.amazonaws.services.autoscaling.model.transform.AlarmStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.Alarm unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.AlarmStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.AlreadyExistsExceptionUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.r:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.AutoScalingGroupStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.c:
    com.amazonaws.services.autoscaling.model.transform.AutoScalingGroupStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.AutoScalingGroup unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.AutoScalingGroupStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.AutoScalingInstanceDetailsStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.x:
    com.amazonaws.services.autoscaling.model.transform.AutoScalingInstanceDetailsStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.AutoScalingInstanceDetails unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.AutoScalingInstanceDetailsStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.BlockDeviceMappingStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.z:
    com.amazonaws.services.autoscaling.model.transform.BlockDeviceMappingStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.BlockDeviceMapping unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.BlockDeviceMappingStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.CreateAutoScalingGroupRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.aj:
com.amazonaws.services.autoscaling.model.transform.CreateLaunchConfigurationRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.w:
com.amazonaws.services.autoscaling.model.transform.DeleteAutoScalingGroupRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.ae:
com.amazonaws.services.autoscaling.model.transform.DeleteLaunchConfigurationRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.af:
com.amazonaws.services.autoscaling.model.transform.DeleteNotificationConfigurationRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.ac:
com.amazonaws.services.autoscaling.model.transform.DeletePolicyRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.K:
com.amazonaws.services.autoscaling.model.transform.DeleteScheduledActionRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.an:
com.amazonaws.services.autoscaling.model.transform.DescribeAdjustmentTypesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.j:
com.amazonaws.services.autoscaling.model.transform.DescribeAdjustmentTypesResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.e:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeAutoScalingGroupsRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.R:
com.amazonaws.services.autoscaling.model.transform.DescribeAutoScalingGroupsResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.Q:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeAutoScalingInstancesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.u:
com.amazonaws.services.autoscaling.model.transform.DescribeAutoScalingInstancesResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.Z:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeAutoScalingNotificationTypesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.aa:
com.amazonaws.services.autoscaling.model.transform.DescribeAutoScalingNotificationTypesResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.ah:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeLaunchConfigurationsRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.O:
com.amazonaws.services.autoscaling.model.transform.DescribeLaunchConfigurationsResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.t:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeMetricCollectionTypesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.ag:
com.amazonaws.services.autoscaling.model.transform.DescribeMetricCollectionTypesResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.F:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeNotificationConfigurationsRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.m:
com.amazonaws.services.autoscaling.model.transform.DescribeNotificationConfigurationsResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.n:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribePoliciesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.J:
com.amazonaws.services.autoscaling.model.transform.DescribePoliciesResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.al:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeScalingActivitiesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.D:
com.amazonaws.services.autoscaling.model.transform.DescribeScalingActivitiesResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.B:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeScalingProcessTypesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.T:
com.amazonaws.services.autoscaling.model.transform.DescribeScalingProcessTypesResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.H:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DescribeScheduledActionsRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.I:
com.amazonaws.services.autoscaling.model.transform.DescribeScheduledActionsResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.a:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.DisableMetricsCollectionRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.W:
com.amazonaws.services.autoscaling.model.transform.EbsStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.C:
    com.amazonaws.services.autoscaling.model.transform.EbsStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.Ebs unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.EbsStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.EnableMetricsCollectionRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.ab:
com.amazonaws.services.autoscaling.model.transform.EnabledMetricStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.ak:
    com.amazonaws.services.autoscaling.model.transform.EnabledMetricStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.EnabledMetric unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.EnabledMetricStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.ExecutePolicyRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.V:
com.amazonaws.services.autoscaling.model.transform.InstanceMonitoringStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.b:
    com.amazonaws.services.autoscaling.model.transform.InstanceMonitoringStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.InstanceMonitoring unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.InstanceMonitoringStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.InstanceStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.P:
    com.amazonaws.services.autoscaling.model.transform.InstanceStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.Instance unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.InstanceStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.InvalidNextTokenExceptionUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.Y:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.LaunchConfigurationStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.S:
    com.amazonaws.services.autoscaling.model.transform.LaunchConfigurationStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.LaunchConfiguration unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.LaunchConfigurationStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.LimitExceededExceptionUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.U:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.MetricCollectionTypeStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.k:
    com.amazonaws.services.autoscaling.model.transform.MetricCollectionTypeStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.MetricCollectionType unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.MetricCollectionTypeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.MetricGranularityTypeStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.l:
    com.amazonaws.services.autoscaling.model.transform.MetricGranularityTypeStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.MetricGranularityType unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.MetricGranularityTypeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.NotificationConfigurationStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.ad:
    com.amazonaws.services.autoscaling.model.transform.NotificationConfigurationStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.NotificationConfiguration unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.NotificationConfigurationStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.ProcessTypeStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.X:
    com.amazonaws.services.autoscaling.model.transform.ProcessTypeStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.ProcessType unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.ProcessTypeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.PutNotificationConfigurationRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.am:
com.amazonaws.services.autoscaling.model.transform.PutScalingPolicyRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.M:
com.amazonaws.services.autoscaling.model.transform.PutScalingPolicyResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.y:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.PutScheduledUpdateGroupActionRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.s:
com.amazonaws.services.autoscaling.model.transform.ResourceInUseExceptionUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.f:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.ResumeProcessesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.v:
com.amazonaws.services.autoscaling.model.transform.ScalingActivityInProgressExceptionUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.ai:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.ScalingPolicyStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.A:
    com.amazonaws.services.autoscaling.model.transform.ScalingPolicyStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.ScalingPolicy unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.ScalingPolicyStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.ScheduledUpdateGroupActionStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.q:
    com.amazonaws.services.autoscaling.model.transform.ScheduledUpdateGroupActionStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.ScheduledUpdateGroupAction unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.ScheduledUpdateGroupActionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.SetDesiredCapacityRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.h:
com.amazonaws.services.autoscaling.model.transform.SetInstanceHealthRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.i:
com.amazonaws.services.autoscaling.model.transform.SuspendProcessesRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.p:
com.amazonaws.services.autoscaling.model.transform.SuspendedProcessStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.d:
    com.amazonaws.services.autoscaling.model.transform.SuspendedProcessStaxUnmarshaller instance -> a
    com.amazonaws.services.autoscaling.model.SuspendedProcess unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.autoscaling.model.transform.SuspendedProcessStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.TerminateInstanceInAutoScalingGroupRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.o:
com.amazonaws.services.autoscaling.model.transform.TerminateInstanceInAutoScalingGroupResultStaxUnmarshaller -> com.amazonaws.services.autoscaling.model.transform.E:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.autoscaling.model.transform.UpdateAutoScalingGroupRequestMarshaller -> com.amazonaws.services.autoscaling.model.transform.G:
com.amazonaws.services.autoscaling.package-info -> com.amazonaws.services.autoscaling.package-info:
com.amazonaws.services.cloudwatch.AmazonCloudWatch -> com.amazonaws.services.cloudwatch.AmazonCloudWatch:
    void setEndpoint(java.lang.String) -> setEndpoint
    void putMetricAlarm(com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest) -> putMetricAlarm
    void putMetricData(com.amazonaws.services.cloudwatch.model.PutMetricDataRequest) -> putMetricData
    com.amazonaws.services.cloudwatch.model.ListMetricsResult listMetrics(com.amazonaws.services.cloudwatch.model.ListMetricsRequest) -> listMetrics
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult getMetricStatistics(com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest) -> getMetricStatistics
    void disableAlarmActions(com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest) -> disableAlarmActions
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult describeAlarms(com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest) -> describeAlarms
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricResult describeAlarmsForMetric(com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest) -> describeAlarmsForMetric
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult describeAlarmHistory(com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest) -> describeAlarmHistory
    void enableAlarmActions(com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest) -> enableAlarmActions
    void deleteAlarms(com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest) -> deleteAlarms
    void setAlarmState(com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest) -> setAlarmState
    com.amazonaws.services.cloudwatch.model.ListMetricsResult listMetrics() -> listMetrics
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult describeAlarms() -> describeAlarms
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult describeAlarmHistory() -> describeAlarmHistory
    void shutdown() -> shutdown
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsync -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsync:
    java.util.concurrent.Future putMetricAlarmAsync(com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest) -> putMetricAlarmAsync
    java.util.concurrent.Future putMetricDataAsync(com.amazonaws.services.cloudwatch.model.PutMetricDataRequest) -> putMetricDataAsync
    java.util.concurrent.Future listMetricsAsync(com.amazonaws.services.cloudwatch.model.ListMetricsRequest) -> listMetricsAsync
    java.util.concurrent.Future getMetricStatisticsAsync(com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest) -> getMetricStatisticsAsync
    java.util.concurrent.Future disableAlarmActionsAsync(com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest) -> disableAlarmActionsAsync
    java.util.concurrent.Future describeAlarmsAsync(com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest) -> describeAlarmsAsync
    java.util.concurrent.Future describeAlarmsForMetricAsync(com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest) -> describeAlarmsForMetricAsync
    java.util.concurrent.Future describeAlarmHistoryAsync(com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest) -> describeAlarmHistoryAsync
    java.util.concurrent.Future enableAlarmActionsAsync(com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest) -> enableAlarmActionsAsync
    java.util.concurrent.Future deleteAlarmsAsync(com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest) -> deleteAlarmsAsync
    java.util.concurrent.Future setAlarmStateAsync(com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest) -> setAlarmStateAsync
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient:
    java.util.concurrent.ExecutorService executorService -> d
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.Future putMetricAlarmAsync(com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest) -> putMetricAlarmAsync
    java.util.concurrent.Future putMetricDataAsync(com.amazonaws.services.cloudwatch.model.PutMetricDataRequest) -> putMetricDataAsync
    java.util.concurrent.Future listMetricsAsync(com.amazonaws.services.cloudwatch.model.ListMetricsRequest) -> listMetricsAsync
    java.util.concurrent.Future getMetricStatisticsAsync(com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest) -> getMetricStatisticsAsync
    java.util.concurrent.Future disableAlarmActionsAsync(com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest) -> disableAlarmActionsAsync
    java.util.concurrent.Future describeAlarmsAsync(com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest) -> describeAlarmsAsync
    java.util.concurrent.Future describeAlarmsForMetricAsync(com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest) -> describeAlarmsForMetricAsync
    java.util.concurrent.Future describeAlarmHistoryAsync(com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest) -> describeAlarmHistoryAsync
    java.util.concurrent.Future enableAlarmActionsAsync(com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest) -> enableAlarmActionsAsync
    java.util.concurrent.Future deleteAlarmsAsync(com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest) -> deleteAlarmsAsync
    java.util.concurrent.Future setAlarmStateAsync(com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest) -> setAlarmStateAsync
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$1 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$1:
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest val$putMetricAlarmRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$10 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$10:
    com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest val$deleteAlarmsRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$11 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$11:
    com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest val$setAlarmStateRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$2 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$2:
    com.amazonaws.services.cloudwatch.model.PutMetricDataRequest val$putMetricDataRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$3 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$3:
    com.amazonaws.services.cloudwatch.model.ListMetricsRequest val$listMetricsRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    com.amazonaws.services.cloudwatch.model.ListMetricsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$4 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$4:
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest val$getMetricStatisticsRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$5 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$5:
    com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest val$disableAlarmActionsRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$6 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$6:
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest val$describeAlarmsRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$7 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$7:
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest val$describeAlarmsForMetricRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$8 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$8:
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest val$describeAlarmHistoryRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$9 -> com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient$9:
    com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest val$enableAlarmActionsRequest -> a
    com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.cloudwatch.AmazonCloudWatchClient -> com.amazonaws.services.cloudwatch.AmazonCloudWatchClient:
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> d
    java.util.List exceptionUnmarshallers -> e
    com.amazonaws.auth.QueryStringSigner signer -> f
    void init() -> b
    void putMetricAlarm(com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest) -> putMetricAlarm
    void putMetricData(com.amazonaws.services.cloudwatch.model.PutMetricDataRequest) -> putMetricData
    com.amazonaws.services.cloudwatch.model.ListMetricsResult listMetrics(com.amazonaws.services.cloudwatch.model.ListMetricsRequest) -> listMetrics
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult getMetricStatistics(com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest) -> getMetricStatistics
    void disableAlarmActions(com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest) -> disableAlarmActions
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult describeAlarms(com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest) -> describeAlarms
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricResult describeAlarmsForMetric(com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest) -> describeAlarmsForMetric
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult describeAlarmHistory(com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest) -> describeAlarmHistory
    void enableAlarmActions(com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest) -> enableAlarmActions
    void deleteAlarms(com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest) -> deleteAlarms
    void setAlarmState(com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest) -> setAlarmState
    com.amazonaws.services.cloudwatch.model.ListMetricsResult listMetrics() -> listMetrics
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult describeAlarms() -> describeAlarms
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult describeAlarmHistory() -> describeAlarmHistory
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller) -> a
com.amazonaws.services.cloudwatch.model.AlarmHistoryItem -> com.amazonaws.services.cloudwatch.model.AlarmHistoryItem:
    java.lang.String alarmName -> a
    java.util.Date timestamp -> b
    java.lang.String historyItemType -> c
    java.lang.String historySummary -> d
    java.lang.String historyData -> e
    java.lang.String getAlarmName() -> getAlarmName
    void setAlarmName(java.lang.String) -> setAlarmName
    com.amazonaws.services.cloudwatch.model.AlarmHistoryItem withAlarmName(java.lang.String) -> withAlarmName
    java.util.Date getTimestamp() -> getTimestamp
    void setTimestamp(java.util.Date) -> setTimestamp
    com.amazonaws.services.cloudwatch.model.AlarmHistoryItem withTimestamp(java.util.Date) -> withTimestamp
    java.lang.String getHistoryItemType() -> getHistoryItemType
    void setHistoryItemType(java.lang.String) -> setHistoryItemType
    com.amazonaws.services.cloudwatch.model.AlarmHistoryItem withHistoryItemType(java.lang.String) -> withHistoryItemType
    java.lang.String getHistorySummary() -> getHistorySummary
    void setHistorySummary(java.lang.String) -> setHistorySummary
    com.amazonaws.services.cloudwatch.model.AlarmHistoryItem withHistorySummary(java.lang.String) -> withHistorySummary
    java.lang.String getHistoryData() -> getHistoryData
    void setHistoryData(java.lang.String) -> setHistoryData
    com.amazonaws.services.cloudwatch.model.AlarmHistoryItem withHistoryData(java.lang.String) -> withHistoryData
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.ComparisonOperator -> com.amazonaws.services.cloudwatch.model.ComparisonOperator:
    com.amazonaws.services.cloudwatch.model.ComparisonOperator GreaterThanOrEqualToThreshold -> GreaterThanOrEqualToThreshold
    com.amazonaws.services.cloudwatch.model.ComparisonOperator GreaterThanThreshold -> GreaterThanThreshold
    com.amazonaws.services.cloudwatch.model.ComparisonOperator LessThanThreshold -> LessThanThreshold
    com.amazonaws.services.cloudwatch.model.ComparisonOperator LessThanOrEqualToThreshold -> LessThanOrEqualToThreshold
    java.lang.String value -> a
    com.amazonaws.services.cloudwatch.model.ComparisonOperator[] $VALUES -> b
    com.amazonaws.services.cloudwatch.model.ComparisonOperator[] values() -> values
    com.amazonaws.services.cloudwatch.model.ComparisonOperator valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.cloudwatch.model.ComparisonOperator fromValue(java.lang.String) -> fromValue
com.amazonaws.services.cloudwatch.model.Datapoint -> com.amazonaws.services.cloudwatch.model.Datapoint:
    java.util.Date timestamp -> a
    java.lang.Double sampleCount -> b
    java.lang.Double average -> c
    java.lang.Double sum -> d
    java.lang.Double minimum -> e
    java.lang.Double maximum -> f
    java.lang.String unit -> g
    java.util.Date getTimestamp() -> getTimestamp
    void setTimestamp(java.util.Date) -> setTimestamp
    com.amazonaws.services.cloudwatch.model.Datapoint withTimestamp(java.util.Date) -> withTimestamp
    java.lang.Double getSampleCount() -> getSampleCount
    void setSampleCount(java.lang.Double) -> setSampleCount
    com.amazonaws.services.cloudwatch.model.Datapoint withSampleCount(java.lang.Double) -> withSampleCount
    java.lang.Double getAverage() -> getAverage
    void setAverage(java.lang.Double) -> setAverage
    com.amazonaws.services.cloudwatch.model.Datapoint withAverage(java.lang.Double) -> withAverage
    java.lang.Double getSum() -> getSum
    void setSum(java.lang.Double) -> setSum
    com.amazonaws.services.cloudwatch.model.Datapoint withSum(java.lang.Double) -> withSum
    java.lang.Double getMinimum() -> getMinimum
    void setMinimum(java.lang.Double) -> setMinimum
    com.amazonaws.services.cloudwatch.model.Datapoint withMinimum(java.lang.Double) -> withMinimum
    java.lang.Double getMaximum() -> getMaximum
    void setMaximum(java.lang.Double) -> setMaximum
    com.amazonaws.services.cloudwatch.model.Datapoint withMaximum(java.lang.Double) -> withMaximum
    java.lang.String getUnit() -> getUnit
    void setUnit(java.lang.String) -> setUnit
    com.amazonaws.services.cloudwatch.model.Datapoint withUnit(java.lang.String) -> withUnit
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest -> com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest:
    java.util.List alarmNames -> a
    java.util.List getAlarmNames() -> getAlarmNames
    void setAlarmNames(java.util.Collection) -> setAlarmNames
    com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest withAlarmNames(java.lang.String[]) -> withAlarmNames
    com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest withAlarmNames(java.util.Collection) -> withAlarmNames
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest -> com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest:
    java.lang.String alarmName -> a
    java.lang.String historyItemType -> b
    java.util.Date startDate -> c
    java.util.Date endDate -> d
    java.lang.Integer maxRecords -> e
    java.lang.String nextToken -> f
    java.lang.String getAlarmName() -> getAlarmName
    void setAlarmName(java.lang.String) -> setAlarmName
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest withAlarmName(java.lang.String) -> withAlarmName
    java.lang.String getHistoryItemType() -> getHistoryItemType
    void setHistoryItemType(java.lang.String) -> setHistoryItemType
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest withHistoryItemType(java.lang.String) -> withHistoryItemType
    java.util.Date getStartDate() -> getStartDate
    void setStartDate(java.util.Date) -> setStartDate
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest withStartDate(java.util.Date) -> withStartDate
    java.util.Date getEndDate() -> getEndDate
    void setEndDate(java.util.Date) -> setEndDate
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest withEndDate(java.util.Date) -> withEndDate
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult -> com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult:
    java.util.List alarmHistoryItems -> a
    java.lang.String nextToken -> b
    java.util.List getAlarmHistoryItems() -> getAlarmHistoryItems
    void setAlarmHistoryItems(java.util.Collection) -> setAlarmHistoryItems
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult withAlarmHistoryItems(com.amazonaws.services.cloudwatch.model.AlarmHistoryItem[]) -> withAlarmHistoryItems
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult withAlarmHistoryItems(java.util.Collection) -> withAlarmHistoryItems
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest -> com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest:
    java.lang.String metricName -> a
    java.lang.String namespace -> b
    java.lang.String statistic -> c
    java.util.List dimensions -> d
    java.lang.Integer period -> e
    java.lang.String unit -> f
    java.lang.String getMetricName() -> getMetricName
    void setMetricName(java.lang.String) -> setMetricName
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest withMetricName(java.lang.String) -> withMetricName
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest withNamespace(java.lang.String) -> withNamespace
    java.lang.String getStatistic() -> getStatistic
    void setStatistic(java.lang.String) -> setStatistic
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest withStatistic(java.lang.String) -> withStatistic
    java.util.List getDimensions() -> getDimensions
    void setDimensions(java.util.Collection) -> setDimensions
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest withDimensions(com.amazonaws.services.cloudwatch.model.Dimension[]) -> withDimensions
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest withDimensions(java.util.Collection) -> withDimensions
    java.lang.Integer getPeriod() -> getPeriod
    void setPeriod(java.lang.Integer) -> setPeriod
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest withPeriod(java.lang.Integer) -> withPeriod
    java.lang.String getUnit() -> getUnit
    void setUnit(java.lang.String) -> setUnit
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest withUnit(java.lang.String) -> withUnit
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricResult -> com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricResult:
    java.util.List metricAlarms -> a
    java.util.List getMetricAlarms() -> getMetricAlarms
    void setMetricAlarms(java.util.Collection) -> setMetricAlarms
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricResult withMetricAlarms(com.amazonaws.services.cloudwatch.model.MetricAlarm[]) -> withMetricAlarms
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricResult withMetricAlarms(java.util.Collection) -> withMetricAlarms
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest -> com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest:
    java.util.List alarmNames -> a
    java.lang.String alarmNamePrefix -> b
    java.lang.String stateValue -> c
    java.lang.String actionPrefix -> d
    java.lang.Integer maxRecords -> e
    java.lang.String nextToken -> f
    java.util.List getAlarmNames() -> getAlarmNames
    void setAlarmNames(java.util.Collection) -> setAlarmNames
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest withAlarmNames(java.lang.String[]) -> withAlarmNames
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest withAlarmNames(java.util.Collection) -> withAlarmNames
    java.lang.String getAlarmNamePrefix() -> getAlarmNamePrefix
    void setAlarmNamePrefix(java.lang.String) -> setAlarmNamePrefix
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest withAlarmNamePrefix(java.lang.String) -> withAlarmNamePrefix
    java.lang.String getStateValue() -> getStateValue
    void setStateValue(java.lang.String) -> setStateValue
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest withStateValue(java.lang.String) -> withStateValue
    java.lang.String getActionPrefix() -> getActionPrefix
    void setActionPrefix(java.lang.String) -> setActionPrefix
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest withActionPrefix(java.lang.String) -> withActionPrefix
    java.lang.Integer getMaxRecords() -> getMaxRecords
    void setMaxRecords(java.lang.Integer) -> setMaxRecords
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest withMaxRecords(java.lang.Integer) -> withMaxRecords
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult -> com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult:
    java.util.List metricAlarms -> a
    java.lang.String nextToken -> b
    java.util.List getMetricAlarms() -> getMetricAlarms
    void setMetricAlarms(java.util.Collection) -> setMetricAlarms
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult withMetricAlarms(com.amazonaws.services.cloudwatch.model.MetricAlarm[]) -> withMetricAlarms
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult withMetricAlarms(java.util.Collection) -> withMetricAlarms
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.Dimension -> com.amazonaws.services.cloudwatch.model.Dimension:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.cloudwatch.model.Dimension withName(java.lang.String) -> withName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.cloudwatch.model.Dimension withValue(java.lang.String) -> withValue
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DimensionFilter -> com.amazonaws.services.cloudwatch.model.DimensionFilter:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.cloudwatch.model.DimensionFilter withName(java.lang.String) -> withName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.cloudwatch.model.DimensionFilter withValue(java.lang.String) -> withValue
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest -> com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest:
    java.util.List alarmNames -> a
    java.util.List getAlarmNames() -> getAlarmNames
    void setAlarmNames(java.util.Collection) -> setAlarmNames
    com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest withAlarmNames(java.lang.String[]) -> withAlarmNames
    com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest withAlarmNames(java.util.Collection) -> withAlarmNames
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest -> com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest:
    java.util.List alarmNames -> a
    java.util.List getAlarmNames() -> getAlarmNames
    void setAlarmNames(java.util.Collection) -> setAlarmNames
    com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest withAlarmNames(java.lang.String[]) -> withAlarmNames
    com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest withAlarmNames(java.util.Collection) -> withAlarmNames
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest -> com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest:
    java.lang.String namespace -> a
    java.lang.String metricName -> b
    java.util.List dimensions -> c
    java.util.Date startTime -> d
    java.util.Date endTime -> e
    java.lang.Integer period -> f
    java.util.List statistics -> g
    java.lang.String unit -> h
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withNamespace(java.lang.String) -> withNamespace
    java.lang.String getMetricName() -> getMetricName
    void setMetricName(java.lang.String) -> setMetricName
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withMetricName(java.lang.String) -> withMetricName
    java.util.List getDimensions() -> getDimensions
    void setDimensions(java.util.Collection) -> setDimensions
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withDimensions(com.amazonaws.services.cloudwatch.model.Dimension[]) -> withDimensions
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withDimensions(java.util.Collection) -> withDimensions
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withStartTime(java.util.Date) -> withStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withEndTime(java.util.Date) -> withEndTime
    java.lang.Integer getPeriod() -> getPeriod
    void setPeriod(java.lang.Integer) -> setPeriod
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withPeriod(java.lang.Integer) -> withPeriod
    java.util.List getStatistics() -> getStatistics
    void setStatistics(java.util.Collection) -> setStatistics
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withStatistics(java.lang.String[]) -> withStatistics
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withStatistics(java.util.Collection) -> withStatistics
    java.lang.String getUnit() -> getUnit
    void setUnit(java.lang.String) -> setUnit
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest withUnit(java.lang.String) -> withUnit
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult -> com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult:
    java.lang.String label -> a
    java.util.List datapoints -> b
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult withLabel(java.lang.String) -> withLabel
    java.util.List getDatapoints() -> getDatapoints
    void setDatapoints(java.util.Collection) -> setDatapoints
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult withDatapoints(com.amazonaws.services.cloudwatch.model.Datapoint[]) -> withDatapoints
    com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult withDatapoints(java.util.Collection) -> withDatapoints
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.HistoryItemType -> com.amazonaws.services.cloudwatch.model.HistoryItemType:
    com.amazonaws.services.cloudwatch.model.HistoryItemType ConfigurationUpdate -> ConfigurationUpdate
    com.amazonaws.services.cloudwatch.model.HistoryItemType StateUpdate -> StateUpdate
    com.amazonaws.services.cloudwatch.model.HistoryItemType Action -> Action
    java.lang.String value -> a
    com.amazonaws.services.cloudwatch.model.HistoryItemType[] $VALUES -> b
    com.amazonaws.services.cloudwatch.model.HistoryItemType[] values() -> values
    com.amazonaws.services.cloudwatch.model.HistoryItemType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.cloudwatch.model.HistoryItemType fromValue(java.lang.String) -> fromValue
com.amazonaws.services.cloudwatch.model.InternalServiceException -> com.amazonaws.services.cloudwatch.model.InternalServiceException:
com.amazonaws.services.cloudwatch.model.InvalidFormatException -> com.amazonaws.services.cloudwatch.model.InvalidFormatException:
com.amazonaws.services.cloudwatch.model.InvalidNextTokenException -> com.amazonaws.services.cloudwatch.model.InvalidNextTokenException:
com.amazonaws.services.cloudwatch.model.InvalidParameterCombinationException -> com.amazonaws.services.cloudwatch.model.InvalidParameterCombinationException:
com.amazonaws.services.cloudwatch.model.InvalidParameterValueException -> com.amazonaws.services.cloudwatch.model.InvalidParameterValueException:
com.amazonaws.services.cloudwatch.model.LimitExceededException -> com.amazonaws.services.cloudwatch.model.LimitExceededException:
com.amazonaws.services.cloudwatch.model.ListMetricsRequest -> com.amazonaws.services.cloudwatch.model.ListMetricsRequest:
    java.lang.String namespace -> a
    java.lang.String metricName -> b
    java.util.List dimensions -> c
    java.lang.String nextToken -> d
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    com.amazonaws.services.cloudwatch.model.ListMetricsRequest withNamespace(java.lang.String) -> withNamespace
    java.lang.String getMetricName() -> getMetricName
    void setMetricName(java.lang.String) -> setMetricName
    com.amazonaws.services.cloudwatch.model.ListMetricsRequest withMetricName(java.lang.String) -> withMetricName
    java.util.List getDimensions() -> getDimensions
    void setDimensions(java.util.Collection) -> setDimensions
    com.amazonaws.services.cloudwatch.model.ListMetricsRequest withDimensions(com.amazonaws.services.cloudwatch.model.DimensionFilter[]) -> withDimensions
    com.amazonaws.services.cloudwatch.model.ListMetricsRequest withDimensions(java.util.Collection) -> withDimensions
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.cloudwatch.model.ListMetricsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.ListMetricsResult -> com.amazonaws.services.cloudwatch.model.ListMetricsResult:
    java.util.List metrics -> a
    java.lang.String nextToken -> b
    java.util.List getMetrics() -> getMetrics
    void setMetrics(java.util.Collection) -> setMetrics
    com.amazonaws.services.cloudwatch.model.ListMetricsResult withMetrics(com.amazonaws.services.cloudwatch.model.Metric[]) -> withMetrics
    com.amazonaws.services.cloudwatch.model.ListMetricsResult withMetrics(java.util.Collection) -> withMetrics
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.cloudwatch.model.ListMetricsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.Metric -> com.amazonaws.services.cloudwatch.model.Metric:
    java.lang.String namespace -> a
    java.lang.String metricName -> b
    java.util.List dimensions -> c
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    com.amazonaws.services.cloudwatch.model.Metric withNamespace(java.lang.String) -> withNamespace
    java.lang.String getMetricName() -> getMetricName
    void setMetricName(java.lang.String) -> setMetricName
    com.amazonaws.services.cloudwatch.model.Metric withMetricName(java.lang.String) -> withMetricName
    java.util.List getDimensions() -> getDimensions
    void setDimensions(java.util.Collection) -> setDimensions
    com.amazonaws.services.cloudwatch.model.Metric withDimensions(com.amazonaws.services.cloudwatch.model.Dimension[]) -> withDimensions
    com.amazonaws.services.cloudwatch.model.Metric withDimensions(java.util.Collection) -> withDimensions
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.MetricAlarm -> com.amazonaws.services.cloudwatch.model.MetricAlarm:
    java.lang.String alarmName -> a
    java.lang.String alarmArn -> b
    java.lang.String alarmDescription -> c
    java.util.Date alarmConfigurationUpdatedTimestamp -> d
    java.lang.Boolean actionsEnabled -> e
    java.util.List oKActions -> f
    java.util.List alarmActions -> g
    java.util.List insufficientDataActions -> h
    java.lang.String stateValue -> i
    java.lang.String stateReason -> j
    java.lang.String stateReasonData -> k
    java.util.Date stateUpdatedTimestamp -> l
    java.lang.String metricName -> m
    java.lang.String namespace -> n
    java.lang.String statistic -> o
    java.util.List dimensions -> p
    java.lang.Integer period -> q
    java.lang.String unit -> r
    java.lang.Integer evaluationPeriods -> s
    java.lang.Double threshold -> t
    java.lang.String comparisonOperator -> u
    java.lang.String getAlarmName() -> getAlarmName
    void setAlarmName(java.lang.String) -> setAlarmName
    com.amazonaws.services.cloudwatch.model.MetricAlarm withAlarmName(java.lang.String) -> withAlarmName
    java.lang.String getAlarmArn() -> getAlarmArn
    void setAlarmArn(java.lang.String) -> setAlarmArn
    com.amazonaws.services.cloudwatch.model.MetricAlarm withAlarmArn(java.lang.String) -> withAlarmArn
    java.lang.String getAlarmDescription() -> getAlarmDescription
    void setAlarmDescription(java.lang.String) -> setAlarmDescription
    com.amazonaws.services.cloudwatch.model.MetricAlarm withAlarmDescription(java.lang.String) -> withAlarmDescription
    java.util.Date getAlarmConfigurationUpdatedTimestamp() -> getAlarmConfigurationUpdatedTimestamp
    void setAlarmConfigurationUpdatedTimestamp(java.util.Date) -> setAlarmConfigurationUpdatedTimestamp
    com.amazonaws.services.cloudwatch.model.MetricAlarm withAlarmConfigurationUpdatedTimestamp(java.util.Date) -> withAlarmConfigurationUpdatedTimestamp
    java.lang.Boolean isActionsEnabled() -> isActionsEnabled
    void setActionsEnabled(java.lang.Boolean) -> setActionsEnabled
    com.amazonaws.services.cloudwatch.model.MetricAlarm withActionsEnabled(java.lang.Boolean) -> withActionsEnabled
    java.lang.Boolean getActionsEnabled() -> getActionsEnabled
    java.util.List getOKActions() -> getOKActions
    void setOKActions(java.util.Collection) -> setOKActions
    com.amazonaws.services.cloudwatch.model.MetricAlarm withOKActions(java.lang.String[]) -> withOKActions
    com.amazonaws.services.cloudwatch.model.MetricAlarm withOKActions(java.util.Collection) -> withOKActions
    java.util.List getAlarmActions() -> getAlarmActions
    void setAlarmActions(java.util.Collection) -> setAlarmActions
    com.amazonaws.services.cloudwatch.model.MetricAlarm withAlarmActions(java.lang.String[]) -> withAlarmActions
    com.amazonaws.services.cloudwatch.model.MetricAlarm withAlarmActions(java.util.Collection) -> withAlarmActions
    java.util.List getInsufficientDataActions() -> getInsufficientDataActions
    void setInsufficientDataActions(java.util.Collection) -> setInsufficientDataActions
    com.amazonaws.services.cloudwatch.model.MetricAlarm withInsufficientDataActions(java.lang.String[]) -> withInsufficientDataActions
    com.amazonaws.services.cloudwatch.model.MetricAlarm withInsufficientDataActions(java.util.Collection) -> withInsufficientDataActions
    java.lang.String getStateValue() -> getStateValue
    void setStateValue(java.lang.String) -> setStateValue
    com.amazonaws.services.cloudwatch.model.MetricAlarm withStateValue(java.lang.String) -> withStateValue
    java.lang.String getStateReason() -> getStateReason
    void setStateReason(java.lang.String) -> setStateReason
    com.amazonaws.services.cloudwatch.model.MetricAlarm withStateReason(java.lang.String) -> withStateReason
    java.lang.String getStateReasonData() -> getStateReasonData
    void setStateReasonData(java.lang.String) -> setStateReasonData
    com.amazonaws.services.cloudwatch.model.MetricAlarm withStateReasonData(java.lang.String) -> withStateReasonData
    java.util.Date getStateUpdatedTimestamp() -> getStateUpdatedTimestamp
    void setStateUpdatedTimestamp(java.util.Date) -> setStateUpdatedTimestamp
    com.amazonaws.services.cloudwatch.model.MetricAlarm withStateUpdatedTimestamp(java.util.Date) -> withStateUpdatedTimestamp
    java.lang.String getMetricName() -> getMetricName
    void setMetricName(java.lang.String) -> setMetricName
    com.amazonaws.services.cloudwatch.model.MetricAlarm withMetricName(java.lang.String) -> withMetricName
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    com.amazonaws.services.cloudwatch.model.MetricAlarm withNamespace(java.lang.String) -> withNamespace
    java.lang.String getStatistic() -> getStatistic
    void setStatistic(java.lang.String) -> setStatistic
    com.amazonaws.services.cloudwatch.model.MetricAlarm withStatistic(java.lang.String) -> withStatistic
    java.util.List getDimensions() -> getDimensions
    void setDimensions(java.util.Collection) -> setDimensions
    com.amazonaws.services.cloudwatch.model.MetricAlarm withDimensions(com.amazonaws.services.cloudwatch.model.Dimension[]) -> withDimensions
    com.amazonaws.services.cloudwatch.model.MetricAlarm withDimensions(java.util.Collection) -> withDimensions
    java.lang.Integer getPeriod() -> getPeriod
    void setPeriod(java.lang.Integer) -> setPeriod
    com.amazonaws.services.cloudwatch.model.MetricAlarm withPeriod(java.lang.Integer) -> withPeriod
    java.lang.String getUnit() -> getUnit
    void setUnit(java.lang.String) -> setUnit
    com.amazonaws.services.cloudwatch.model.MetricAlarm withUnit(java.lang.String) -> withUnit
    java.lang.Integer getEvaluationPeriods() -> getEvaluationPeriods
    void setEvaluationPeriods(java.lang.Integer) -> setEvaluationPeriods
    com.amazonaws.services.cloudwatch.model.MetricAlarm withEvaluationPeriods(java.lang.Integer) -> withEvaluationPeriods
    java.lang.Double getThreshold() -> getThreshold
    void setThreshold(java.lang.Double) -> setThreshold
    com.amazonaws.services.cloudwatch.model.MetricAlarm withThreshold(java.lang.Double) -> withThreshold
    java.lang.String getComparisonOperator() -> getComparisonOperator
    void setComparisonOperator(java.lang.String) -> setComparisonOperator
    com.amazonaws.services.cloudwatch.model.MetricAlarm withComparisonOperator(java.lang.String) -> withComparisonOperator
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.MetricDatum -> com.amazonaws.services.cloudwatch.model.MetricDatum:
    java.lang.String metricName -> a
    java.util.List dimensions -> b
    java.util.Date timestamp -> c
    java.lang.Double value -> d
    com.amazonaws.services.cloudwatch.model.StatisticSet statisticValues -> e
    java.lang.String unit -> f
    java.lang.String getMetricName() -> getMetricName
    void setMetricName(java.lang.String) -> setMetricName
    com.amazonaws.services.cloudwatch.model.MetricDatum withMetricName(java.lang.String) -> withMetricName
    java.util.List getDimensions() -> getDimensions
    void setDimensions(java.util.Collection) -> setDimensions
    com.amazonaws.services.cloudwatch.model.MetricDatum withDimensions(com.amazonaws.services.cloudwatch.model.Dimension[]) -> withDimensions
    com.amazonaws.services.cloudwatch.model.MetricDatum withDimensions(java.util.Collection) -> withDimensions
    java.util.Date getTimestamp() -> getTimestamp
    void setTimestamp(java.util.Date) -> setTimestamp
    com.amazonaws.services.cloudwatch.model.MetricDatum withTimestamp(java.util.Date) -> withTimestamp
    java.lang.Double getValue() -> getValue
    void setValue(java.lang.Double) -> setValue
    com.amazonaws.services.cloudwatch.model.MetricDatum withValue(java.lang.Double) -> withValue
    com.amazonaws.services.cloudwatch.model.StatisticSet getStatisticValues() -> getStatisticValues
    void setStatisticValues(com.amazonaws.services.cloudwatch.model.StatisticSet) -> setStatisticValues
    com.amazonaws.services.cloudwatch.model.MetricDatum withStatisticValues(com.amazonaws.services.cloudwatch.model.StatisticSet) -> withStatisticValues
    java.lang.String getUnit() -> getUnit
    void setUnit(java.lang.String) -> setUnit
    com.amazonaws.services.cloudwatch.model.MetricDatum withUnit(java.lang.String) -> withUnit
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.MissingRequiredParameterException -> com.amazonaws.services.cloudwatch.model.MissingRequiredParameterException:
com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest -> com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest:
    java.lang.String alarmName -> a
    java.lang.String alarmDescription -> b
    java.lang.Boolean actionsEnabled -> c
    java.util.List oKActions -> d
    java.util.List alarmActions -> e
    java.util.List insufficientDataActions -> f
    java.lang.String metricName -> g
    java.lang.String namespace -> h
    java.lang.String statistic -> i
    java.util.List dimensions -> j
    java.lang.Integer period -> k
    java.lang.String unit -> l
    java.lang.Integer evaluationPeriods -> m
    java.lang.Double threshold -> n
    java.lang.String comparisonOperator -> o
    java.lang.String getAlarmName() -> getAlarmName
    void setAlarmName(java.lang.String) -> setAlarmName
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withAlarmName(java.lang.String) -> withAlarmName
    java.lang.String getAlarmDescription() -> getAlarmDescription
    void setAlarmDescription(java.lang.String) -> setAlarmDescription
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withAlarmDescription(java.lang.String) -> withAlarmDescription
    java.lang.Boolean isActionsEnabled() -> isActionsEnabled
    void setActionsEnabled(java.lang.Boolean) -> setActionsEnabled
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withActionsEnabled(java.lang.Boolean) -> withActionsEnabled
    java.lang.Boolean getActionsEnabled() -> getActionsEnabled
    java.util.List getOKActions() -> getOKActions
    void setOKActions(java.util.Collection) -> setOKActions
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withOKActions(java.lang.String[]) -> withOKActions
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withOKActions(java.util.Collection) -> withOKActions
    java.util.List getAlarmActions() -> getAlarmActions
    void setAlarmActions(java.util.Collection) -> setAlarmActions
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withAlarmActions(java.lang.String[]) -> withAlarmActions
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withAlarmActions(java.util.Collection) -> withAlarmActions
    java.util.List getInsufficientDataActions() -> getInsufficientDataActions
    void setInsufficientDataActions(java.util.Collection) -> setInsufficientDataActions
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withInsufficientDataActions(java.lang.String[]) -> withInsufficientDataActions
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withInsufficientDataActions(java.util.Collection) -> withInsufficientDataActions
    java.lang.String getMetricName() -> getMetricName
    void setMetricName(java.lang.String) -> setMetricName
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withMetricName(java.lang.String) -> withMetricName
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withNamespace(java.lang.String) -> withNamespace
    java.lang.String getStatistic() -> getStatistic
    void setStatistic(java.lang.String) -> setStatistic
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withStatistic(java.lang.String) -> withStatistic
    java.util.List getDimensions() -> getDimensions
    void setDimensions(java.util.Collection) -> setDimensions
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withDimensions(com.amazonaws.services.cloudwatch.model.Dimension[]) -> withDimensions
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withDimensions(java.util.Collection) -> withDimensions
    java.lang.Integer getPeriod() -> getPeriod
    void setPeriod(java.lang.Integer) -> setPeriod
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withPeriod(java.lang.Integer) -> withPeriod
    java.lang.String getUnit() -> getUnit
    void setUnit(java.lang.String) -> setUnit
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withUnit(java.lang.String) -> withUnit
    java.lang.Integer getEvaluationPeriods() -> getEvaluationPeriods
    void setEvaluationPeriods(java.lang.Integer) -> setEvaluationPeriods
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withEvaluationPeriods(java.lang.Integer) -> withEvaluationPeriods
    java.lang.Double getThreshold() -> getThreshold
    void setThreshold(java.lang.Double) -> setThreshold
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withThreshold(java.lang.Double) -> withThreshold
    java.lang.String getComparisonOperator() -> getComparisonOperator
    void setComparisonOperator(java.lang.String) -> setComparisonOperator
    com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest withComparisonOperator(java.lang.String) -> withComparisonOperator
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.PutMetricDataRequest -> com.amazonaws.services.cloudwatch.model.PutMetricDataRequest:
    java.lang.String namespace -> a
    java.util.List metricData -> b
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    com.amazonaws.services.cloudwatch.model.PutMetricDataRequest withNamespace(java.lang.String) -> withNamespace
    java.util.List getMetricData() -> getMetricData
    void setMetricData(java.util.Collection) -> setMetricData
    com.amazonaws.services.cloudwatch.model.PutMetricDataRequest withMetricData(com.amazonaws.services.cloudwatch.model.MetricDatum[]) -> withMetricData
    com.amazonaws.services.cloudwatch.model.PutMetricDataRequest withMetricData(java.util.Collection) -> withMetricData
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.ResourceNotFoundException -> com.amazonaws.services.cloudwatch.model.ResourceNotFoundException:
com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest -> com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest:
    java.lang.String alarmName -> a
    java.lang.String stateValue -> b
    java.lang.String stateReason -> c
    java.lang.String stateReasonData -> d
    java.lang.String getAlarmName() -> getAlarmName
    void setAlarmName(java.lang.String) -> setAlarmName
    com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest withAlarmName(java.lang.String) -> withAlarmName
    java.lang.String getStateValue() -> getStateValue
    void setStateValue(java.lang.String) -> setStateValue
    com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest withStateValue(java.lang.String) -> withStateValue
    java.lang.String getStateReason() -> getStateReason
    void setStateReason(java.lang.String) -> setStateReason
    com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest withStateReason(java.lang.String) -> withStateReason
    java.lang.String getStateReasonData() -> getStateReasonData
    void setStateReasonData(java.lang.String) -> setStateReasonData
    com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest withStateReasonData(java.lang.String) -> withStateReasonData
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.StandardUnit -> com.amazonaws.services.cloudwatch.model.StandardUnit:
    com.amazonaws.services.cloudwatch.model.StandardUnit Seconds -> Seconds
    com.amazonaws.services.cloudwatch.model.StandardUnit Microseconds -> Microseconds
    com.amazonaws.services.cloudwatch.model.StandardUnit Milliseconds -> Milliseconds
    com.amazonaws.services.cloudwatch.model.StandardUnit Bytes -> Bytes
    com.amazonaws.services.cloudwatch.model.StandardUnit Kilobytes -> Kilobytes
    com.amazonaws.services.cloudwatch.model.StandardUnit Megabytes -> Megabytes
    com.amazonaws.services.cloudwatch.model.StandardUnit Gigabytes -> Gigabytes
    com.amazonaws.services.cloudwatch.model.StandardUnit Terabytes -> Terabytes
    com.amazonaws.services.cloudwatch.model.StandardUnit Bits -> Bits
    com.amazonaws.services.cloudwatch.model.StandardUnit Kilobits -> Kilobits
    com.amazonaws.services.cloudwatch.model.StandardUnit Megabits -> Megabits
    com.amazonaws.services.cloudwatch.model.StandardUnit Gigabits -> Gigabits
    com.amazonaws.services.cloudwatch.model.StandardUnit Terabits -> Terabits
    com.amazonaws.services.cloudwatch.model.StandardUnit Percent -> Percent
    com.amazonaws.services.cloudwatch.model.StandardUnit Count -> Count
    com.amazonaws.services.cloudwatch.model.StandardUnit BytesSecond -> BytesSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit KilobytesSecond -> KilobytesSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit MegabytesSecond -> MegabytesSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit GigabytesSecond -> GigabytesSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit TerabytesSecond -> TerabytesSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit BitsSecond -> BitsSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit KilobitsSecond -> KilobitsSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit MegabitsSecond -> MegabitsSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit GigabitsSecond -> GigabitsSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit TerabitsSecond -> TerabitsSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit CountSecond -> CountSecond
    com.amazonaws.services.cloudwatch.model.StandardUnit None -> None
    java.lang.String value -> a
    com.amazonaws.services.cloudwatch.model.StandardUnit[] $VALUES -> b
    com.amazonaws.services.cloudwatch.model.StandardUnit[] values() -> values
    com.amazonaws.services.cloudwatch.model.StandardUnit valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.cloudwatch.model.StandardUnit fromValue(java.lang.String) -> fromValue
com.amazonaws.services.cloudwatch.model.StateValue -> com.amazonaws.services.cloudwatch.model.StateValue:
    com.amazonaws.services.cloudwatch.model.StateValue OK -> OK
    com.amazonaws.services.cloudwatch.model.StateValue ALARM -> ALARM
    com.amazonaws.services.cloudwatch.model.StateValue INSUFFICIENT_DATA -> INSUFFICIENT_DATA
    java.lang.String value -> a
    com.amazonaws.services.cloudwatch.model.StateValue[] $VALUES -> b
    com.amazonaws.services.cloudwatch.model.StateValue[] values() -> values
    com.amazonaws.services.cloudwatch.model.StateValue valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.cloudwatch.model.StateValue fromValue(java.lang.String) -> fromValue
com.amazonaws.services.cloudwatch.model.Statistic -> com.amazonaws.services.cloudwatch.model.Statistic:
    com.amazonaws.services.cloudwatch.model.Statistic SampleCount -> SampleCount
    com.amazonaws.services.cloudwatch.model.Statistic Average -> Average
    com.amazonaws.services.cloudwatch.model.Statistic Sum -> Sum
    com.amazonaws.services.cloudwatch.model.Statistic Minimum -> Minimum
    com.amazonaws.services.cloudwatch.model.Statistic Maximum -> Maximum
    java.lang.String value -> a
    com.amazonaws.services.cloudwatch.model.Statistic[] $VALUES -> b
    com.amazonaws.services.cloudwatch.model.Statistic[] values() -> values
    com.amazonaws.services.cloudwatch.model.Statistic valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.cloudwatch.model.Statistic fromValue(java.lang.String) -> fromValue
com.amazonaws.services.cloudwatch.model.StatisticSet -> com.amazonaws.services.cloudwatch.model.StatisticSet:
    java.lang.Double sampleCount -> a
    java.lang.Double sum -> b
    java.lang.Double minimum -> c
    java.lang.Double maximum -> d
    java.lang.Double getSampleCount() -> getSampleCount
    void setSampleCount(java.lang.Double) -> setSampleCount
    com.amazonaws.services.cloudwatch.model.StatisticSet withSampleCount(java.lang.Double) -> withSampleCount
    java.lang.Double getSum() -> getSum
    void setSum(java.lang.Double) -> setSum
    com.amazonaws.services.cloudwatch.model.StatisticSet withSum(java.lang.Double) -> withSum
    java.lang.Double getMinimum() -> getMinimum
    void setMinimum(java.lang.Double) -> setMinimum
    com.amazonaws.services.cloudwatch.model.StatisticSet withMinimum(java.lang.Double) -> withMinimum
    java.lang.Double getMaximum() -> getMaximum
    void setMaximum(java.lang.Double) -> setMaximum
    com.amazonaws.services.cloudwatch.model.StatisticSet withMaximum(java.lang.Double) -> withMaximum
    java.lang.String toString() -> toString
com.amazonaws.services.cloudwatch.model.package-info -> com.amazonaws.services.cloudwatch.model.package-info:
com.amazonaws.services.cloudwatch.model.transform.AlarmHistoryItemStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.l:
    com.amazonaws.services.cloudwatch.model.transform.AlarmHistoryItemStaxUnmarshaller instance -> a
    com.amazonaws.services.cloudwatch.model.AlarmHistoryItem unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.cloudwatch.model.transform.AlarmHistoryItemStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.DatapointStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.v:
    com.amazonaws.services.cloudwatch.model.transform.DatapointStaxUnmarshaller instance -> a
    com.amazonaws.services.cloudwatch.model.Datapoint unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.cloudwatch.model.transform.DatapointStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.DeleteAlarmsRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.r:
com.amazonaws.services.cloudwatch.model.transform.DescribeAlarmHistoryRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.d:
com.amazonaws.services.cloudwatch.model.transform.DescribeAlarmHistoryResultStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.x:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.DescribeAlarmsForMetricRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.f:
com.amazonaws.services.cloudwatch.model.transform.DescribeAlarmsForMetricResultStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.B:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.DescribeAlarmsRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.q:
com.amazonaws.services.cloudwatch.model.transform.DescribeAlarmsResultStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.p:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.DimensionStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.h:
    com.amazonaws.services.cloudwatch.model.transform.DimensionStaxUnmarshaller instance -> a
    com.amazonaws.services.cloudwatch.model.Dimension unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.cloudwatch.model.transform.DimensionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.DisableAlarmActionsRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.k:
com.amazonaws.services.cloudwatch.model.transform.EnableAlarmActionsRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.a:
com.amazonaws.services.cloudwatch.model.transform.GetMetricStatisticsRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.n:
com.amazonaws.services.cloudwatch.model.transform.GetMetricStatisticsResultStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.g:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.InternalServiceExceptionUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.y:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.InvalidFormatExceptionUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.z:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.InvalidNextTokenExceptionUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.s:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.InvalidParameterCombinationExceptionUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.i:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.InvalidParameterValueExceptionUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.A:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.LimitExceededExceptionUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.o:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.ListMetricsRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.b:
com.amazonaws.services.cloudwatch.model.transform.ListMetricsResultStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.t:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.MetricAlarmStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.u:
    com.amazonaws.services.cloudwatch.model.transform.MetricAlarmStaxUnmarshaller instance -> a
    com.amazonaws.services.cloudwatch.model.MetricAlarm unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.cloudwatch.model.transform.MetricAlarmStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.MetricStaxUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.m:
    com.amazonaws.services.cloudwatch.model.transform.MetricStaxUnmarshaller instance -> a
    com.amazonaws.services.cloudwatch.model.Metric unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.cloudwatch.model.transform.MetricStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.MissingRequiredParameterExceptionUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.c:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.PutMetricAlarmRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.j:
com.amazonaws.services.cloudwatch.model.transform.PutMetricDataRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.C:
com.amazonaws.services.cloudwatch.model.transform.ResourceNotFoundExceptionUnmarshaller -> com.amazonaws.services.cloudwatch.model.transform.e:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.cloudwatch.model.transform.SetAlarmStateRequestMarshaller -> com.amazonaws.services.cloudwatch.model.transform.w:
com.amazonaws.services.cloudwatch.package-info -> com.amazonaws.services.cloudwatch.package-info:
com.amazonaws.services.ec2.AmazonEC2 -> com.amazonaws.services.ec2.AmazonEC2:
    void setEndpoint(java.lang.String) -> setEndpoint
    void rebootInstances(com.amazonaws.services.ec2.model.RebootInstancesRequest) -> rebootInstances
    com.amazonaws.services.ec2.model.DescribeReservedInstancesResult describeReservedInstances(com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest) -> describeReservedInstances
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult describeAvailabilityZones(com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest) -> describeAvailabilityZones
    com.amazonaws.services.ec2.model.DetachVolumeResult detachVolume(com.amazonaws.services.ec2.model.DetachVolumeRequest) -> detachVolume
    void deleteKeyPair(com.amazonaws.services.ec2.model.DeleteKeyPairRequest) -> deleteKeyPair
    com.amazonaws.services.ec2.model.UnmonitorInstancesResult unmonitorInstances(com.amazonaws.services.ec2.model.UnmonitorInstancesRequest) -> unmonitorInstances
    com.amazonaws.services.ec2.model.CreateImageResult createImage(com.amazonaws.services.ec2.model.CreateImageRequest) -> createImage
    void deleteSecurityGroup(com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest) -> deleteSecurityGroup
    com.amazonaws.services.ec2.model.GetPasswordDataResult getPasswordData(com.amazonaws.services.ec2.model.GetPasswordDataRequest) -> getPasswordData
    com.amazonaws.services.ec2.model.StopInstancesResult stopInstances(com.amazonaws.services.ec2.model.StopInstancesRequest) -> stopInstances
    com.amazonaws.services.ec2.model.ImportKeyPairResult importKeyPair(com.amazonaws.services.ec2.model.ImportKeyPairRequest) -> importKeyPair
    com.amazonaws.services.ec2.model.CreateSecurityGroupResult createSecurityGroup(com.amazonaws.services.ec2.model.CreateSecurityGroupRequest) -> createSecurityGroup
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult describeSpotPriceHistory(com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest) -> describeSpotPriceHistory
    com.amazonaws.services.ec2.model.DescribeRegionsResult describeRegions(com.amazonaws.services.ec2.model.DescribeRegionsRequest) -> describeRegions
    void resetSnapshotAttribute(com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest) -> resetSnapshotAttribute
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult describeSecurityGroups(com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest) -> describeSecurityGroups
    void deregisterImage(com.amazonaws.services.ec2.model.DeregisterImageRequest) -> deregisterImage
    com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription(com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionRequest) -> describeSpotDatafeedSubscription
    void deleteTags(com.amazonaws.services.ec2.model.DeleteTagsRequest) -> deleteTags
    com.amazonaws.services.ec2.model.AttachVolumeResult attachVolume(com.amazonaws.services.ec2.model.AttachVolumeRequest) -> attachVolume
    com.amazonaws.services.ec2.model.DescribeLicensesResult describeLicenses(com.amazonaws.services.ec2.model.DescribeLicensesRequest) -> describeLicenses
    void activateLicense(com.amazonaws.services.ec2.model.ActivateLicenseRequest) -> activateLicense
    void resetImageAttribute(com.amazonaws.services.ec2.model.ResetImageAttributeRequest) -> resetImageAttribute
    com.amazonaws.services.ec2.model.CreateSnapshotResult createSnapshot(com.amazonaws.services.ec2.model.CreateSnapshotRequest) -> createSnapshot
    void deleteVolume(com.amazonaws.services.ec2.model.DeleteVolumeRequest) -> deleteVolume
    void deactivateLicense(com.amazonaws.services.ec2.model.DeactivateLicenseRequest) -> deactivateLicense
    com.amazonaws.services.ec2.model.AssociateAddressResult associateAddress(com.amazonaws.services.ec2.model.AssociateAddressRequest) -> associateAddress
    com.amazonaws.services.ec2.model.DescribeVolumesResult describeVolumes(com.amazonaws.services.ec2.model.DescribeVolumesRequest) -> describeVolumes
    com.amazonaws.services.ec2.model.MonitorInstancesResult monitorInstances(com.amazonaws.services.ec2.model.MonitorInstancesRequest) -> monitorInstances
    com.amazonaws.services.ec2.model.DescribeBundleTasksResult describeBundleTasks(com.amazonaws.services.ec2.model.DescribeBundleTasksRequest) -> describeBundleTasks
    void revokeSecurityGroupIngress(com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest) -> revokeSecurityGroupIngress
    com.amazonaws.services.ec2.model.GetConsoleOutputResult getConsoleOutput(com.amazonaws.services.ec2.model.GetConsoleOutputRequest) -> getConsoleOutput
    void modifyImageAttribute(com.amazonaws.services.ec2.model.ModifyImageAttributeRequest) -> modifyImageAttribute
    com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionResult createSpotDatafeedSubscription(com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest) -> createSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeInstanceAttributeResult describeInstanceAttribute(com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest) -> describeInstanceAttribute
    com.amazonaws.services.ec2.model.RunInstancesResult runInstances(com.amazonaws.services.ec2.model.RunInstancesRequest) -> runInstances
    com.amazonaws.services.ec2.model.DescribePlacementGroupsResult describePlacementGroups(com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest) -> describePlacementGroups
    com.amazonaws.services.ec2.model.DescribeInstancesResult describeInstances(com.amazonaws.services.ec2.model.DescribeInstancesRequest) -> describeInstances
    com.amazonaws.services.ec2.model.DescribeImagesResult describeImages(com.amazonaws.services.ec2.model.DescribeImagesRequest) -> describeImages
    com.amazonaws.services.ec2.model.StartInstancesResult startInstances(com.amazonaws.services.ec2.model.StartInstancesRequest) -> startInstances
    void modifyInstanceAttribute(com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest) -> modifyInstanceAttribute
    void authorizeSecurityGroupIngress(com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest) -> authorizeSecurityGroupIngress
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult describeSpotInstanceRequests(com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest) -> describeSpotInstanceRequests
    com.amazonaws.services.ec2.model.RequestSpotInstancesResult requestSpotInstances(com.amazonaws.services.ec2.model.RequestSpotInstancesRequest) -> requestSpotInstances
    void createTags(com.amazonaws.services.ec2.model.CreateTagsRequest) -> createTags
    com.amazonaws.services.ec2.model.DescribeTagsResult describeTags(com.amazonaws.services.ec2.model.DescribeTagsRequest) -> describeTags
    com.amazonaws.services.ec2.model.CancelBundleTaskResult cancelBundleTask(com.amazonaws.services.ec2.model.CancelBundleTaskRequest) -> cancelBundleTask
    com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsResult cancelSpotInstanceRequests(com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest) -> cancelSpotInstanceRequests
    com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingResult purchaseReservedInstancesOffering(com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest) -> purchaseReservedInstancesOffering
    void modifySnapshotAttribute(com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest) -> modifySnapshotAttribute
    com.amazonaws.services.ec2.model.TerminateInstancesResult terminateInstances(com.amazonaws.services.ec2.model.TerminateInstancesRequest) -> terminateInstances
    void deleteSpotDatafeedSubscription(com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionRequest) -> deleteSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult describeSnapshotAttribute(com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest) -> describeSnapshotAttribute
    com.amazonaws.services.ec2.model.DescribeAddressesResult describeAddresses(com.amazonaws.services.ec2.model.DescribeAddressesRequest) -> describeAddresses
    com.amazonaws.services.ec2.model.DescribeKeyPairsResult describeKeyPairs(com.amazonaws.services.ec2.model.DescribeKeyPairsRequest) -> describeKeyPairs
    com.amazonaws.services.ec2.model.DescribeImageAttributeResult describeImageAttribute(com.amazonaws.services.ec2.model.DescribeImageAttributeRequest) -> describeImageAttribute
    com.amazonaws.services.ec2.model.ConfirmProductInstanceResult confirmProductInstance(com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest) -> confirmProductInstance
    com.amazonaws.services.ec2.model.CreateVolumeResult createVolume(com.amazonaws.services.ec2.model.CreateVolumeRequest) -> createVolume
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult describeReservedInstancesOfferings(com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest) -> describeReservedInstancesOfferings
    void deleteSnapshot(com.amazonaws.services.ec2.model.DeleteSnapshotRequest) -> deleteSnapshot
    void disassociateAddress(com.amazonaws.services.ec2.model.DisassociateAddressRequest) -> disassociateAddress
    void createPlacementGroup(com.amazonaws.services.ec2.model.CreatePlacementGroupRequest) -> createPlacementGroup
    com.amazonaws.services.ec2.model.BundleInstanceResult bundleInstance(com.amazonaws.services.ec2.model.BundleInstanceRequest) -> bundleInstance
    void deletePlacementGroup(com.amazonaws.services.ec2.model.DeletePlacementGroupRequest) -> deletePlacementGroup
    com.amazonaws.services.ec2.model.AllocateAddressResult allocateAddress(com.amazonaws.services.ec2.model.AllocateAddressRequest) -> allocateAddress
    void releaseAddress(com.amazonaws.services.ec2.model.ReleaseAddressRequest) -> releaseAddress
    void resetInstanceAttribute(com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest) -> resetInstanceAttribute
    com.amazonaws.services.ec2.model.CreateKeyPairResult createKeyPair(com.amazonaws.services.ec2.model.CreateKeyPairRequest) -> createKeyPair
    com.amazonaws.services.ec2.model.DescribeSnapshotsResult describeSnapshots(com.amazonaws.services.ec2.model.DescribeSnapshotsRequest) -> describeSnapshots
    com.amazonaws.services.ec2.model.RegisterImageResult registerImage(com.amazonaws.services.ec2.model.RegisterImageRequest) -> registerImage
    com.amazonaws.services.ec2.model.DescribeReservedInstancesResult describeReservedInstances() -> describeReservedInstances
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult describeAvailabilityZones() -> describeAvailabilityZones
    void deleteSecurityGroup() -> deleteSecurityGroup
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult describeSpotPriceHistory() -> describeSpotPriceHistory
    com.amazonaws.services.ec2.model.DescribeRegionsResult describeRegions() -> describeRegions
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult describeSecurityGroups() -> describeSecurityGroups
    com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription() -> describeSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeLicensesResult describeLicenses() -> describeLicenses
    com.amazonaws.services.ec2.model.DescribeVolumesResult describeVolumes() -> describeVolumes
    com.amazonaws.services.ec2.model.DescribeBundleTasksResult describeBundleTasks() -> describeBundleTasks
    void revokeSecurityGroupIngress() -> revokeSecurityGroupIngress
    com.amazonaws.services.ec2.model.DescribePlacementGroupsResult describePlacementGroups() -> describePlacementGroups
    com.amazonaws.services.ec2.model.DescribeInstancesResult describeInstances() -> describeInstances
    com.amazonaws.services.ec2.model.DescribeImagesResult describeImages() -> describeImages
    void authorizeSecurityGroupIngress() -> authorizeSecurityGroupIngress
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult describeSpotInstanceRequests() -> describeSpotInstanceRequests
    com.amazonaws.services.ec2.model.DescribeTagsResult describeTags() -> describeTags
    void deleteSpotDatafeedSubscription() -> deleteSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeAddressesResult describeAddresses() -> describeAddresses
    com.amazonaws.services.ec2.model.DescribeKeyPairsResult describeKeyPairs() -> describeKeyPairs
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult describeReservedInstancesOfferings() -> describeReservedInstancesOfferings
    com.amazonaws.services.ec2.model.AllocateAddressResult allocateAddress() -> allocateAddress
    void releaseAddress() -> releaseAddress
    com.amazonaws.services.ec2.model.DescribeSnapshotsResult describeSnapshots() -> describeSnapshots
    com.amazonaws.services.ec2.model.RegisterImageResult registerImage() -> registerImage
    void shutdown() -> shutdown
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
com.amazonaws.services.ec2.AmazonEC2Async -> com.amazonaws.services.ec2.AmazonEC2Async:
    java.util.concurrent.Future rebootInstancesAsync(com.amazonaws.services.ec2.model.RebootInstancesRequest) -> rebootInstancesAsync
    java.util.concurrent.Future describeReservedInstancesAsync(com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest) -> describeReservedInstancesAsync
    java.util.concurrent.Future describeAvailabilityZonesAsync(com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest) -> describeAvailabilityZonesAsync
    java.util.concurrent.Future detachVolumeAsync(com.amazonaws.services.ec2.model.DetachVolumeRequest) -> detachVolumeAsync
    java.util.concurrent.Future deleteKeyPairAsync(com.amazonaws.services.ec2.model.DeleteKeyPairRequest) -> deleteKeyPairAsync
    java.util.concurrent.Future unmonitorInstancesAsync(com.amazonaws.services.ec2.model.UnmonitorInstancesRequest) -> unmonitorInstancesAsync
    java.util.concurrent.Future createImageAsync(com.amazonaws.services.ec2.model.CreateImageRequest) -> createImageAsync
    java.util.concurrent.Future deleteSecurityGroupAsync(com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest) -> deleteSecurityGroupAsync
    java.util.concurrent.Future getPasswordDataAsync(com.amazonaws.services.ec2.model.GetPasswordDataRequest) -> getPasswordDataAsync
    java.util.concurrent.Future stopInstancesAsync(com.amazonaws.services.ec2.model.StopInstancesRequest) -> stopInstancesAsync
    java.util.concurrent.Future importKeyPairAsync(com.amazonaws.services.ec2.model.ImportKeyPairRequest) -> importKeyPairAsync
    java.util.concurrent.Future createSecurityGroupAsync(com.amazonaws.services.ec2.model.CreateSecurityGroupRequest) -> createSecurityGroupAsync
    java.util.concurrent.Future describeSpotPriceHistoryAsync(com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest) -> describeSpotPriceHistoryAsync
    java.util.concurrent.Future describeRegionsAsync(com.amazonaws.services.ec2.model.DescribeRegionsRequest) -> describeRegionsAsync
    java.util.concurrent.Future resetSnapshotAttributeAsync(com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest) -> resetSnapshotAttributeAsync
    java.util.concurrent.Future describeSecurityGroupsAsync(com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest) -> describeSecurityGroupsAsync
    java.util.concurrent.Future deregisterImageAsync(com.amazonaws.services.ec2.model.DeregisterImageRequest) -> deregisterImageAsync
    java.util.concurrent.Future describeSpotDatafeedSubscriptionAsync(com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionRequest) -> describeSpotDatafeedSubscriptionAsync
    java.util.concurrent.Future deleteTagsAsync(com.amazonaws.services.ec2.model.DeleteTagsRequest) -> deleteTagsAsync
    java.util.concurrent.Future attachVolumeAsync(com.amazonaws.services.ec2.model.AttachVolumeRequest) -> attachVolumeAsync
    java.util.concurrent.Future describeLicensesAsync(com.amazonaws.services.ec2.model.DescribeLicensesRequest) -> describeLicensesAsync
    java.util.concurrent.Future activateLicenseAsync(com.amazonaws.services.ec2.model.ActivateLicenseRequest) -> activateLicenseAsync
    java.util.concurrent.Future resetImageAttributeAsync(com.amazonaws.services.ec2.model.ResetImageAttributeRequest) -> resetImageAttributeAsync
    java.util.concurrent.Future createSnapshotAsync(com.amazonaws.services.ec2.model.CreateSnapshotRequest) -> createSnapshotAsync
    java.util.concurrent.Future deleteVolumeAsync(com.amazonaws.services.ec2.model.DeleteVolumeRequest) -> deleteVolumeAsync
    java.util.concurrent.Future deactivateLicenseAsync(com.amazonaws.services.ec2.model.DeactivateLicenseRequest) -> deactivateLicenseAsync
    java.util.concurrent.Future associateAddressAsync(com.amazonaws.services.ec2.model.AssociateAddressRequest) -> associateAddressAsync
    java.util.concurrent.Future describeVolumesAsync(com.amazonaws.services.ec2.model.DescribeVolumesRequest) -> describeVolumesAsync
    java.util.concurrent.Future monitorInstancesAsync(com.amazonaws.services.ec2.model.MonitorInstancesRequest) -> monitorInstancesAsync
    java.util.concurrent.Future describeBundleTasksAsync(com.amazonaws.services.ec2.model.DescribeBundleTasksRequest) -> describeBundleTasksAsync
    java.util.concurrent.Future revokeSecurityGroupIngressAsync(com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest) -> revokeSecurityGroupIngressAsync
    java.util.concurrent.Future getConsoleOutputAsync(com.amazonaws.services.ec2.model.GetConsoleOutputRequest) -> getConsoleOutputAsync
    java.util.concurrent.Future modifyImageAttributeAsync(com.amazonaws.services.ec2.model.ModifyImageAttributeRequest) -> modifyImageAttributeAsync
    java.util.concurrent.Future createSpotDatafeedSubscriptionAsync(com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest) -> createSpotDatafeedSubscriptionAsync
    java.util.concurrent.Future describeInstanceAttributeAsync(com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest) -> describeInstanceAttributeAsync
    java.util.concurrent.Future runInstancesAsync(com.amazonaws.services.ec2.model.RunInstancesRequest) -> runInstancesAsync
    java.util.concurrent.Future describePlacementGroupsAsync(com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest) -> describePlacementGroupsAsync
    java.util.concurrent.Future describeInstancesAsync(com.amazonaws.services.ec2.model.DescribeInstancesRequest) -> describeInstancesAsync
    java.util.concurrent.Future describeImagesAsync(com.amazonaws.services.ec2.model.DescribeImagesRequest) -> describeImagesAsync
    java.util.concurrent.Future startInstancesAsync(com.amazonaws.services.ec2.model.StartInstancesRequest) -> startInstancesAsync
    java.util.concurrent.Future modifyInstanceAttributeAsync(com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest) -> modifyInstanceAttributeAsync
    java.util.concurrent.Future authorizeSecurityGroupIngressAsync(com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest) -> authorizeSecurityGroupIngressAsync
    java.util.concurrent.Future describeSpotInstanceRequestsAsync(com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest) -> describeSpotInstanceRequestsAsync
    java.util.concurrent.Future requestSpotInstancesAsync(com.amazonaws.services.ec2.model.RequestSpotInstancesRequest) -> requestSpotInstancesAsync
    java.util.concurrent.Future createTagsAsync(com.amazonaws.services.ec2.model.CreateTagsRequest) -> createTagsAsync
    java.util.concurrent.Future describeTagsAsync(com.amazonaws.services.ec2.model.DescribeTagsRequest) -> describeTagsAsync
    java.util.concurrent.Future cancelBundleTaskAsync(com.amazonaws.services.ec2.model.CancelBundleTaskRequest) -> cancelBundleTaskAsync
    java.util.concurrent.Future cancelSpotInstanceRequestsAsync(com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest) -> cancelSpotInstanceRequestsAsync
    java.util.concurrent.Future purchaseReservedInstancesOfferingAsync(com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest) -> purchaseReservedInstancesOfferingAsync
    java.util.concurrent.Future modifySnapshotAttributeAsync(com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest) -> modifySnapshotAttributeAsync
    java.util.concurrent.Future terminateInstancesAsync(com.amazonaws.services.ec2.model.TerminateInstancesRequest) -> terminateInstancesAsync
    java.util.concurrent.Future deleteSpotDatafeedSubscriptionAsync(com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionRequest) -> deleteSpotDatafeedSubscriptionAsync
    java.util.concurrent.Future describeSnapshotAttributeAsync(com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest) -> describeSnapshotAttributeAsync
    java.util.concurrent.Future describeAddressesAsync(com.amazonaws.services.ec2.model.DescribeAddressesRequest) -> describeAddressesAsync
    java.util.concurrent.Future describeKeyPairsAsync(com.amazonaws.services.ec2.model.DescribeKeyPairsRequest) -> describeKeyPairsAsync
    java.util.concurrent.Future describeImageAttributeAsync(com.amazonaws.services.ec2.model.DescribeImageAttributeRequest) -> describeImageAttributeAsync
    java.util.concurrent.Future confirmProductInstanceAsync(com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest) -> confirmProductInstanceAsync
    java.util.concurrent.Future createVolumeAsync(com.amazonaws.services.ec2.model.CreateVolumeRequest) -> createVolumeAsync
    java.util.concurrent.Future describeReservedInstancesOfferingsAsync(com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest) -> describeReservedInstancesOfferingsAsync
    java.util.concurrent.Future deleteSnapshotAsync(com.amazonaws.services.ec2.model.DeleteSnapshotRequest) -> deleteSnapshotAsync
    java.util.concurrent.Future disassociateAddressAsync(com.amazonaws.services.ec2.model.DisassociateAddressRequest) -> disassociateAddressAsync
    java.util.concurrent.Future createPlacementGroupAsync(com.amazonaws.services.ec2.model.CreatePlacementGroupRequest) -> createPlacementGroupAsync
    java.util.concurrent.Future bundleInstanceAsync(com.amazonaws.services.ec2.model.BundleInstanceRequest) -> bundleInstanceAsync
    java.util.concurrent.Future deletePlacementGroupAsync(com.amazonaws.services.ec2.model.DeletePlacementGroupRequest) -> deletePlacementGroupAsync
    java.util.concurrent.Future allocateAddressAsync(com.amazonaws.services.ec2.model.AllocateAddressRequest) -> allocateAddressAsync
    java.util.concurrent.Future releaseAddressAsync(com.amazonaws.services.ec2.model.ReleaseAddressRequest) -> releaseAddressAsync
    java.util.concurrent.Future resetInstanceAttributeAsync(com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest) -> resetInstanceAttributeAsync
    java.util.concurrent.Future createKeyPairAsync(com.amazonaws.services.ec2.model.CreateKeyPairRequest) -> createKeyPairAsync
    java.util.concurrent.Future describeSnapshotsAsync(com.amazonaws.services.ec2.model.DescribeSnapshotsRequest) -> describeSnapshotsAsync
    java.util.concurrent.Future registerImageAsync(com.amazonaws.services.ec2.model.RegisterImageRequest) -> registerImageAsync
com.amazonaws.services.ec2.AmazonEC2AsyncClient -> com.amazonaws.services.ec2.AmazonEC2AsyncClient:
    java.util.concurrent.ExecutorService executorService -> d
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.Future rebootInstancesAsync(com.amazonaws.services.ec2.model.RebootInstancesRequest) -> rebootInstancesAsync
    java.util.concurrent.Future describeReservedInstancesAsync(com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest) -> describeReservedInstancesAsync
    java.util.concurrent.Future describeAvailabilityZonesAsync(com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest) -> describeAvailabilityZonesAsync
    java.util.concurrent.Future detachVolumeAsync(com.amazonaws.services.ec2.model.DetachVolumeRequest) -> detachVolumeAsync
    java.util.concurrent.Future deleteKeyPairAsync(com.amazonaws.services.ec2.model.DeleteKeyPairRequest) -> deleteKeyPairAsync
    java.util.concurrent.Future unmonitorInstancesAsync(com.amazonaws.services.ec2.model.UnmonitorInstancesRequest) -> unmonitorInstancesAsync
    java.util.concurrent.Future createImageAsync(com.amazonaws.services.ec2.model.CreateImageRequest) -> createImageAsync
    java.util.concurrent.Future deleteSecurityGroupAsync(com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest) -> deleteSecurityGroupAsync
    java.util.concurrent.Future getPasswordDataAsync(com.amazonaws.services.ec2.model.GetPasswordDataRequest) -> getPasswordDataAsync
    java.util.concurrent.Future stopInstancesAsync(com.amazonaws.services.ec2.model.StopInstancesRequest) -> stopInstancesAsync
    java.util.concurrent.Future importKeyPairAsync(com.amazonaws.services.ec2.model.ImportKeyPairRequest) -> importKeyPairAsync
    java.util.concurrent.Future createSecurityGroupAsync(com.amazonaws.services.ec2.model.CreateSecurityGroupRequest) -> createSecurityGroupAsync
    java.util.concurrent.Future describeSpotPriceHistoryAsync(com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest) -> describeSpotPriceHistoryAsync
    java.util.concurrent.Future describeRegionsAsync(com.amazonaws.services.ec2.model.DescribeRegionsRequest) -> describeRegionsAsync
    java.util.concurrent.Future resetSnapshotAttributeAsync(com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest) -> resetSnapshotAttributeAsync
    java.util.concurrent.Future describeSecurityGroupsAsync(com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest) -> describeSecurityGroupsAsync
    java.util.concurrent.Future deregisterImageAsync(com.amazonaws.services.ec2.model.DeregisterImageRequest) -> deregisterImageAsync
    java.util.concurrent.Future describeSpotDatafeedSubscriptionAsync(com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionRequest) -> describeSpotDatafeedSubscriptionAsync
    java.util.concurrent.Future deleteTagsAsync(com.amazonaws.services.ec2.model.DeleteTagsRequest) -> deleteTagsAsync
    java.util.concurrent.Future attachVolumeAsync(com.amazonaws.services.ec2.model.AttachVolumeRequest) -> attachVolumeAsync
    java.util.concurrent.Future describeLicensesAsync(com.amazonaws.services.ec2.model.DescribeLicensesRequest) -> describeLicensesAsync
    java.util.concurrent.Future activateLicenseAsync(com.amazonaws.services.ec2.model.ActivateLicenseRequest) -> activateLicenseAsync
    java.util.concurrent.Future resetImageAttributeAsync(com.amazonaws.services.ec2.model.ResetImageAttributeRequest) -> resetImageAttributeAsync
    java.util.concurrent.Future createSnapshotAsync(com.amazonaws.services.ec2.model.CreateSnapshotRequest) -> createSnapshotAsync
    java.util.concurrent.Future deleteVolumeAsync(com.amazonaws.services.ec2.model.DeleteVolumeRequest) -> deleteVolumeAsync
    java.util.concurrent.Future deactivateLicenseAsync(com.amazonaws.services.ec2.model.DeactivateLicenseRequest) -> deactivateLicenseAsync
    java.util.concurrent.Future associateAddressAsync(com.amazonaws.services.ec2.model.AssociateAddressRequest) -> associateAddressAsync
    java.util.concurrent.Future describeVolumesAsync(com.amazonaws.services.ec2.model.DescribeVolumesRequest) -> describeVolumesAsync
    java.util.concurrent.Future monitorInstancesAsync(com.amazonaws.services.ec2.model.MonitorInstancesRequest) -> monitorInstancesAsync
    java.util.concurrent.Future describeBundleTasksAsync(com.amazonaws.services.ec2.model.DescribeBundleTasksRequest) -> describeBundleTasksAsync
    java.util.concurrent.Future revokeSecurityGroupIngressAsync(com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest) -> revokeSecurityGroupIngressAsync
    java.util.concurrent.Future getConsoleOutputAsync(com.amazonaws.services.ec2.model.GetConsoleOutputRequest) -> getConsoleOutputAsync
    java.util.concurrent.Future modifyImageAttributeAsync(com.amazonaws.services.ec2.model.ModifyImageAttributeRequest) -> modifyImageAttributeAsync
    java.util.concurrent.Future createSpotDatafeedSubscriptionAsync(com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest) -> createSpotDatafeedSubscriptionAsync
    java.util.concurrent.Future describeInstanceAttributeAsync(com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest) -> describeInstanceAttributeAsync
    java.util.concurrent.Future runInstancesAsync(com.amazonaws.services.ec2.model.RunInstancesRequest) -> runInstancesAsync
    java.util.concurrent.Future describePlacementGroupsAsync(com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest) -> describePlacementGroupsAsync
    java.util.concurrent.Future describeInstancesAsync(com.amazonaws.services.ec2.model.DescribeInstancesRequest) -> describeInstancesAsync
    java.util.concurrent.Future describeImagesAsync(com.amazonaws.services.ec2.model.DescribeImagesRequest) -> describeImagesAsync
    java.util.concurrent.Future startInstancesAsync(com.amazonaws.services.ec2.model.StartInstancesRequest) -> startInstancesAsync
    java.util.concurrent.Future modifyInstanceAttributeAsync(com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest) -> modifyInstanceAttributeAsync
    java.util.concurrent.Future authorizeSecurityGroupIngressAsync(com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest) -> authorizeSecurityGroupIngressAsync
    java.util.concurrent.Future describeSpotInstanceRequestsAsync(com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest) -> describeSpotInstanceRequestsAsync
    java.util.concurrent.Future requestSpotInstancesAsync(com.amazonaws.services.ec2.model.RequestSpotInstancesRequest) -> requestSpotInstancesAsync
    java.util.concurrent.Future createTagsAsync(com.amazonaws.services.ec2.model.CreateTagsRequest) -> createTagsAsync
    java.util.concurrent.Future describeTagsAsync(com.amazonaws.services.ec2.model.DescribeTagsRequest) -> describeTagsAsync
    java.util.concurrent.Future cancelBundleTaskAsync(com.amazonaws.services.ec2.model.CancelBundleTaskRequest) -> cancelBundleTaskAsync
    java.util.concurrent.Future cancelSpotInstanceRequestsAsync(com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest) -> cancelSpotInstanceRequestsAsync
    java.util.concurrent.Future purchaseReservedInstancesOfferingAsync(com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest) -> purchaseReservedInstancesOfferingAsync
    java.util.concurrent.Future modifySnapshotAttributeAsync(com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest) -> modifySnapshotAttributeAsync
    java.util.concurrent.Future terminateInstancesAsync(com.amazonaws.services.ec2.model.TerminateInstancesRequest) -> terminateInstancesAsync
    java.util.concurrent.Future deleteSpotDatafeedSubscriptionAsync(com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionRequest) -> deleteSpotDatafeedSubscriptionAsync
    java.util.concurrent.Future describeSnapshotAttributeAsync(com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest) -> describeSnapshotAttributeAsync
    java.util.concurrent.Future describeAddressesAsync(com.amazonaws.services.ec2.model.DescribeAddressesRequest) -> describeAddressesAsync
    java.util.concurrent.Future describeKeyPairsAsync(com.amazonaws.services.ec2.model.DescribeKeyPairsRequest) -> describeKeyPairsAsync
    java.util.concurrent.Future describeImageAttributeAsync(com.amazonaws.services.ec2.model.DescribeImageAttributeRequest) -> describeImageAttributeAsync
    java.util.concurrent.Future confirmProductInstanceAsync(com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest) -> confirmProductInstanceAsync
    java.util.concurrent.Future createVolumeAsync(com.amazonaws.services.ec2.model.CreateVolumeRequest) -> createVolumeAsync
    java.util.concurrent.Future describeReservedInstancesOfferingsAsync(com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest) -> describeReservedInstancesOfferingsAsync
    java.util.concurrent.Future deleteSnapshotAsync(com.amazonaws.services.ec2.model.DeleteSnapshotRequest) -> deleteSnapshotAsync
    java.util.concurrent.Future disassociateAddressAsync(com.amazonaws.services.ec2.model.DisassociateAddressRequest) -> disassociateAddressAsync
    java.util.concurrent.Future createPlacementGroupAsync(com.amazonaws.services.ec2.model.CreatePlacementGroupRequest) -> createPlacementGroupAsync
    java.util.concurrent.Future bundleInstanceAsync(com.amazonaws.services.ec2.model.BundleInstanceRequest) -> bundleInstanceAsync
    java.util.concurrent.Future deletePlacementGroupAsync(com.amazonaws.services.ec2.model.DeletePlacementGroupRequest) -> deletePlacementGroupAsync
    java.util.concurrent.Future allocateAddressAsync(com.amazonaws.services.ec2.model.AllocateAddressRequest) -> allocateAddressAsync
    java.util.concurrent.Future releaseAddressAsync(com.amazonaws.services.ec2.model.ReleaseAddressRequest) -> releaseAddressAsync
    java.util.concurrent.Future resetInstanceAttributeAsync(com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest) -> resetInstanceAttributeAsync
    java.util.concurrent.Future createKeyPairAsync(com.amazonaws.services.ec2.model.CreateKeyPairRequest) -> createKeyPairAsync
    java.util.concurrent.Future describeSnapshotsAsync(com.amazonaws.services.ec2.model.DescribeSnapshotsRequest) -> describeSnapshotsAsync
    java.util.concurrent.Future registerImageAsync(com.amazonaws.services.ec2.model.RegisterImageRequest) -> registerImageAsync
com.amazonaws.services.ec2.AmazonEC2AsyncClient$1 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$1:
    com.amazonaws.services.ec2.model.RebootInstancesRequest val$rebootInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$10 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$10:
    com.amazonaws.services.ec2.model.StopInstancesRequest val$stopInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.StopInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$11 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$11:
    com.amazonaws.services.ec2.model.ImportKeyPairRequest val$importKeyPairRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.ImportKeyPairResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$12 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$12:
    com.amazonaws.services.ec2.model.CreateSecurityGroupRequest val$createSecurityGroupRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.CreateSecurityGroupResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$13 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$13:
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest val$describeSpotPriceHistoryRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$14 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$14:
    com.amazonaws.services.ec2.model.DescribeRegionsRequest val$describeRegionsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeRegionsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$15 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$15:
    com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest val$resetSnapshotAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$16 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$16:
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest val$describeSecurityGroupsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$17 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$17:
    com.amazonaws.services.ec2.model.DeregisterImageRequest val$deregisterImageRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$18 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$18:
    com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionRequest val$describeSpotDatafeedSubscriptionRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$19 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$19:
    com.amazonaws.services.ec2.model.DeleteTagsRequest val$deleteTagsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$2 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$2:
    com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest val$describeReservedInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeReservedInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$20 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$20:
    com.amazonaws.services.ec2.model.AttachVolumeRequest val$attachVolumeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.AttachVolumeResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$21 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$21:
    com.amazonaws.services.ec2.model.DescribeLicensesRequest val$describeLicensesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeLicensesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$22 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$22:
    com.amazonaws.services.ec2.model.ActivateLicenseRequest val$activateLicenseRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$23 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$23:
    com.amazonaws.services.ec2.model.ResetImageAttributeRequest val$resetImageAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$24 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$24:
    com.amazonaws.services.ec2.model.CreateSnapshotRequest val$createSnapshotRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.CreateSnapshotResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$25 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$25:
    com.amazonaws.services.ec2.model.DeleteVolumeRequest val$deleteVolumeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$26 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$26:
    com.amazonaws.services.ec2.model.DeactivateLicenseRequest val$deactivateLicenseRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$27 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$27:
    com.amazonaws.services.ec2.model.AssociateAddressRequest val$associateAddressRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.AssociateAddressResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$28 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$28:
    com.amazonaws.services.ec2.model.DescribeVolumesRequest val$describeVolumesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeVolumesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$29 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$29:
    com.amazonaws.services.ec2.model.MonitorInstancesRequest val$monitorInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.MonitorInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$3 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$3:
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest val$describeAvailabilityZonesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$30 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$30:
    com.amazonaws.services.ec2.model.DescribeBundleTasksRequest val$describeBundleTasksRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeBundleTasksResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$31 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$31:
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest val$revokeSecurityGroupIngressRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$32 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$32:
    com.amazonaws.services.ec2.model.GetConsoleOutputRequest val$getConsoleOutputRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.GetConsoleOutputResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$33 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$33:
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest val$modifyImageAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$34 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$34:
    com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest val$createSpotDatafeedSubscriptionRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$35 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$35:
    com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest val$describeInstanceAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeInstanceAttributeResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$36 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$36:
    com.amazonaws.services.ec2.model.RunInstancesRequest val$runInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.RunInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$37 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$37:
    com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest val$describePlacementGroupsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribePlacementGroupsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$38 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$38:
    com.amazonaws.services.ec2.model.DescribeInstancesRequest val$describeInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$39 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$39:
    com.amazonaws.services.ec2.model.DescribeImagesRequest val$describeImagesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeImagesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$4 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$4:
    com.amazonaws.services.ec2.model.DetachVolumeRequest val$detachVolumeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DetachVolumeResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$40 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$40:
    com.amazonaws.services.ec2.model.StartInstancesRequest val$startInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.StartInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$41 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$41:
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest val$modifyInstanceAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$42 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$42:
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest val$authorizeSecurityGroupIngressRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$43 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$43:
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest val$describeSpotInstanceRequestsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$44 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$44:
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest val$requestSpotInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.RequestSpotInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$45 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$45:
    com.amazonaws.services.ec2.model.CreateTagsRequest val$createTagsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$46 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$46:
    com.amazonaws.services.ec2.model.DescribeTagsRequest val$describeTagsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeTagsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$47 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$47:
    com.amazonaws.services.ec2.model.CancelBundleTaskRequest val$cancelBundleTaskRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.CancelBundleTaskResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$48 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$48:
    com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest val$cancelSpotInstanceRequestsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$49 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$49:
    com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest val$purchaseReservedInstancesOfferingRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$5 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$5:
    com.amazonaws.services.ec2.model.DeleteKeyPairRequest val$deleteKeyPairRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$50 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$50:
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest val$modifySnapshotAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$51 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$51:
    com.amazonaws.services.ec2.model.TerminateInstancesRequest val$terminateInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.TerminateInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$52 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$52:
    com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionRequest val$deleteSpotDatafeedSubscriptionRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$53 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$53:
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest val$describeSnapshotAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$54 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$54:
    com.amazonaws.services.ec2.model.DescribeAddressesRequest val$describeAddressesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeAddressesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$55 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$55:
    com.amazonaws.services.ec2.model.DescribeKeyPairsRequest val$describeKeyPairsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeKeyPairsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$56 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$56:
    com.amazonaws.services.ec2.model.DescribeImageAttributeRequest val$describeImageAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeImageAttributeResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$57 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$57:
    com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest val$confirmProductInstanceRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.ConfirmProductInstanceResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$58 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$58:
    com.amazonaws.services.ec2.model.CreateVolumeRequest val$createVolumeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.CreateVolumeResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$59 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$59:
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest val$describeReservedInstancesOfferingsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$6 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$6:
    com.amazonaws.services.ec2.model.UnmonitorInstancesRequest val$unmonitorInstancesRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.UnmonitorInstancesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$60 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$60:
    com.amazonaws.services.ec2.model.DeleteSnapshotRequest val$deleteSnapshotRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$61 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$61:
    com.amazonaws.services.ec2.model.DisassociateAddressRequest val$disassociateAddressRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$62 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$62:
    com.amazonaws.services.ec2.model.CreatePlacementGroupRequest val$createPlacementGroupRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$63 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$63:
    com.amazonaws.services.ec2.model.BundleInstanceRequest val$bundleInstanceRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.BundleInstanceResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$64 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$64:
    com.amazonaws.services.ec2.model.DeletePlacementGroupRequest val$deletePlacementGroupRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$65 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$65:
    com.amazonaws.services.ec2.model.AllocateAddressRequest val$allocateAddressRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.AllocateAddressResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$66 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$66:
    com.amazonaws.services.ec2.model.ReleaseAddressRequest val$releaseAddressRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$67 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$67:
    com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest val$resetInstanceAttributeRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$68 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$68:
    com.amazonaws.services.ec2.model.CreateKeyPairRequest val$createKeyPairRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.CreateKeyPairResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$69 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$69:
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest val$describeSnapshotsRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.DescribeSnapshotsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$7 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$7:
    com.amazonaws.services.ec2.model.CreateImageRequest val$createImageRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.CreateImageResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$70 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$70:
    com.amazonaws.services.ec2.model.RegisterImageRequest val$registerImageRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.RegisterImageResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$8 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$8:
    com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest val$deleteSecurityGroupRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2AsyncClient$9 -> com.amazonaws.services.ec2.AmazonEC2AsyncClient$9:
    com.amazonaws.services.ec2.model.GetPasswordDataRequest val$getPasswordDataRequest -> a
    com.amazonaws.services.ec2.AmazonEC2AsyncClient this$0 -> b
    com.amazonaws.services.ec2.model.GetPasswordDataResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.ec2.AmazonEC2Client -> com.amazonaws.services.ec2.AmazonEC2Client:
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> d
    java.util.List exceptionUnmarshallers -> e
    com.amazonaws.auth.QueryStringSigner signer -> f
    void init() -> b
    void rebootInstances(com.amazonaws.services.ec2.model.RebootInstancesRequest) -> rebootInstances
    com.amazonaws.services.ec2.model.DescribeReservedInstancesResult describeReservedInstances(com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest) -> describeReservedInstances
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult describeAvailabilityZones(com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest) -> describeAvailabilityZones
    com.amazonaws.services.ec2.model.DetachVolumeResult detachVolume(com.amazonaws.services.ec2.model.DetachVolumeRequest) -> detachVolume
    void deleteKeyPair(com.amazonaws.services.ec2.model.DeleteKeyPairRequest) -> deleteKeyPair
    com.amazonaws.services.ec2.model.UnmonitorInstancesResult unmonitorInstances(com.amazonaws.services.ec2.model.UnmonitorInstancesRequest) -> unmonitorInstances
    com.amazonaws.services.ec2.model.CreateImageResult createImage(com.amazonaws.services.ec2.model.CreateImageRequest) -> createImage
    void deleteSecurityGroup(com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest) -> deleteSecurityGroup
    com.amazonaws.services.ec2.model.GetPasswordDataResult getPasswordData(com.amazonaws.services.ec2.model.GetPasswordDataRequest) -> getPasswordData
    com.amazonaws.services.ec2.model.StopInstancesResult stopInstances(com.amazonaws.services.ec2.model.StopInstancesRequest) -> stopInstances
    com.amazonaws.services.ec2.model.ImportKeyPairResult importKeyPair(com.amazonaws.services.ec2.model.ImportKeyPairRequest) -> importKeyPair
    com.amazonaws.services.ec2.model.CreateSecurityGroupResult createSecurityGroup(com.amazonaws.services.ec2.model.CreateSecurityGroupRequest) -> createSecurityGroup
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult describeSpotPriceHistory(com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest) -> describeSpotPriceHistory
    com.amazonaws.services.ec2.model.DescribeRegionsResult describeRegions(com.amazonaws.services.ec2.model.DescribeRegionsRequest) -> describeRegions
    void resetSnapshotAttribute(com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest) -> resetSnapshotAttribute
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult describeSecurityGroups(com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest) -> describeSecurityGroups
    void deregisterImage(com.amazonaws.services.ec2.model.DeregisterImageRequest) -> deregisterImage
    com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription(com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionRequest) -> describeSpotDatafeedSubscription
    void deleteTags(com.amazonaws.services.ec2.model.DeleteTagsRequest) -> deleteTags
    com.amazonaws.services.ec2.model.AttachVolumeResult attachVolume(com.amazonaws.services.ec2.model.AttachVolumeRequest) -> attachVolume
    com.amazonaws.services.ec2.model.DescribeLicensesResult describeLicenses(com.amazonaws.services.ec2.model.DescribeLicensesRequest) -> describeLicenses
    void activateLicense(com.amazonaws.services.ec2.model.ActivateLicenseRequest) -> activateLicense
    void resetImageAttribute(com.amazonaws.services.ec2.model.ResetImageAttributeRequest) -> resetImageAttribute
    com.amazonaws.services.ec2.model.CreateSnapshotResult createSnapshot(com.amazonaws.services.ec2.model.CreateSnapshotRequest) -> createSnapshot
    void deleteVolume(com.amazonaws.services.ec2.model.DeleteVolumeRequest) -> deleteVolume
    void deactivateLicense(com.amazonaws.services.ec2.model.DeactivateLicenseRequest) -> deactivateLicense
    com.amazonaws.services.ec2.model.AssociateAddressResult associateAddress(com.amazonaws.services.ec2.model.AssociateAddressRequest) -> associateAddress
    com.amazonaws.services.ec2.model.DescribeVolumesResult describeVolumes(com.amazonaws.services.ec2.model.DescribeVolumesRequest) -> describeVolumes
    com.amazonaws.services.ec2.model.MonitorInstancesResult monitorInstances(com.amazonaws.services.ec2.model.MonitorInstancesRequest) -> monitorInstances
    com.amazonaws.services.ec2.model.DescribeBundleTasksResult describeBundleTasks(com.amazonaws.services.ec2.model.DescribeBundleTasksRequest) -> describeBundleTasks
    void revokeSecurityGroupIngress(com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest) -> revokeSecurityGroupIngress
    com.amazonaws.services.ec2.model.GetConsoleOutputResult getConsoleOutput(com.amazonaws.services.ec2.model.GetConsoleOutputRequest) -> getConsoleOutput
    void modifyImageAttribute(com.amazonaws.services.ec2.model.ModifyImageAttributeRequest) -> modifyImageAttribute
    com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionResult createSpotDatafeedSubscription(com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest) -> createSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeInstanceAttributeResult describeInstanceAttribute(com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest) -> describeInstanceAttribute
    com.amazonaws.services.ec2.model.RunInstancesResult runInstances(com.amazonaws.services.ec2.model.RunInstancesRequest) -> runInstances
    com.amazonaws.services.ec2.model.DescribePlacementGroupsResult describePlacementGroups(com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest) -> describePlacementGroups
    com.amazonaws.services.ec2.model.DescribeInstancesResult describeInstances(com.amazonaws.services.ec2.model.DescribeInstancesRequest) -> describeInstances
    com.amazonaws.services.ec2.model.DescribeImagesResult describeImages(com.amazonaws.services.ec2.model.DescribeImagesRequest) -> describeImages
    com.amazonaws.services.ec2.model.StartInstancesResult startInstances(com.amazonaws.services.ec2.model.StartInstancesRequest) -> startInstances
    void modifyInstanceAttribute(com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest) -> modifyInstanceAttribute
    void authorizeSecurityGroupIngress(com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest) -> authorizeSecurityGroupIngress
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult describeSpotInstanceRequests(com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest) -> describeSpotInstanceRequests
    com.amazonaws.services.ec2.model.RequestSpotInstancesResult requestSpotInstances(com.amazonaws.services.ec2.model.RequestSpotInstancesRequest) -> requestSpotInstances
    void createTags(com.amazonaws.services.ec2.model.CreateTagsRequest) -> createTags
    com.amazonaws.services.ec2.model.DescribeTagsResult describeTags(com.amazonaws.services.ec2.model.DescribeTagsRequest) -> describeTags
    com.amazonaws.services.ec2.model.CancelBundleTaskResult cancelBundleTask(com.amazonaws.services.ec2.model.CancelBundleTaskRequest) -> cancelBundleTask
    com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsResult cancelSpotInstanceRequests(com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest) -> cancelSpotInstanceRequests
    com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingResult purchaseReservedInstancesOffering(com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest) -> purchaseReservedInstancesOffering
    void modifySnapshotAttribute(com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest) -> modifySnapshotAttribute
    com.amazonaws.services.ec2.model.TerminateInstancesResult terminateInstances(com.amazonaws.services.ec2.model.TerminateInstancesRequest) -> terminateInstances
    void deleteSpotDatafeedSubscription(com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionRequest) -> deleteSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult describeSnapshotAttribute(com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest) -> describeSnapshotAttribute
    com.amazonaws.services.ec2.model.DescribeAddressesResult describeAddresses(com.amazonaws.services.ec2.model.DescribeAddressesRequest) -> describeAddresses
    com.amazonaws.services.ec2.model.DescribeKeyPairsResult describeKeyPairs(com.amazonaws.services.ec2.model.DescribeKeyPairsRequest) -> describeKeyPairs
    com.amazonaws.services.ec2.model.DescribeImageAttributeResult describeImageAttribute(com.amazonaws.services.ec2.model.DescribeImageAttributeRequest) -> describeImageAttribute
    com.amazonaws.services.ec2.model.ConfirmProductInstanceResult confirmProductInstance(com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest) -> confirmProductInstance
    com.amazonaws.services.ec2.model.CreateVolumeResult createVolume(com.amazonaws.services.ec2.model.CreateVolumeRequest) -> createVolume
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult describeReservedInstancesOfferings(com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest) -> describeReservedInstancesOfferings
    void deleteSnapshot(com.amazonaws.services.ec2.model.DeleteSnapshotRequest) -> deleteSnapshot
    void disassociateAddress(com.amazonaws.services.ec2.model.DisassociateAddressRequest) -> disassociateAddress
    void createPlacementGroup(com.amazonaws.services.ec2.model.CreatePlacementGroupRequest) -> createPlacementGroup
    com.amazonaws.services.ec2.model.BundleInstanceResult bundleInstance(com.amazonaws.services.ec2.model.BundleInstanceRequest) -> bundleInstance
    void deletePlacementGroup(com.amazonaws.services.ec2.model.DeletePlacementGroupRequest) -> deletePlacementGroup
    com.amazonaws.services.ec2.model.AllocateAddressResult allocateAddress(com.amazonaws.services.ec2.model.AllocateAddressRequest) -> allocateAddress
    void releaseAddress(com.amazonaws.services.ec2.model.ReleaseAddressRequest) -> releaseAddress
    void resetInstanceAttribute(com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest) -> resetInstanceAttribute
    com.amazonaws.services.ec2.model.CreateKeyPairResult createKeyPair(com.amazonaws.services.ec2.model.CreateKeyPairRequest) -> createKeyPair
    com.amazonaws.services.ec2.model.DescribeSnapshotsResult describeSnapshots(com.amazonaws.services.ec2.model.DescribeSnapshotsRequest) -> describeSnapshots
    com.amazonaws.services.ec2.model.RegisterImageResult registerImage(com.amazonaws.services.ec2.model.RegisterImageRequest) -> registerImage
    com.amazonaws.services.ec2.model.DescribeReservedInstancesResult describeReservedInstances() -> describeReservedInstances
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult describeAvailabilityZones() -> describeAvailabilityZones
    void deleteSecurityGroup() -> deleteSecurityGroup
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult describeSpotPriceHistory() -> describeSpotPriceHistory
    com.amazonaws.services.ec2.model.DescribeRegionsResult describeRegions() -> describeRegions
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult describeSecurityGroups() -> describeSecurityGroups
    com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription() -> describeSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeLicensesResult describeLicenses() -> describeLicenses
    com.amazonaws.services.ec2.model.DescribeVolumesResult describeVolumes() -> describeVolumes
    com.amazonaws.services.ec2.model.DescribeBundleTasksResult describeBundleTasks() -> describeBundleTasks
    void revokeSecurityGroupIngress() -> revokeSecurityGroupIngress
    com.amazonaws.services.ec2.model.DescribePlacementGroupsResult describePlacementGroups() -> describePlacementGroups
    com.amazonaws.services.ec2.model.DescribeInstancesResult describeInstances() -> describeInstances
    com.amazonaws.services.ec2.model.DescribeImagesResult describeImages() -> describeImages
    void authorizeSecurityGroupIngress() -> authorizeSecurityGroupIngress
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult describeSpotInstanceRequests() -> describeSpotInstanceRequests
    com.amazonaws.services.ec2.model.DescribeTagsResult describeTags() -> describeTags
    void deleteSpotDatafeedSubscription() -> deleteSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeAddressesResult describeAddresses() -> describeAddresses
    com.amazonaws.services.ec2.model.DescribeKeyPairsResult describeKeyPairs() -> describeKeyPairs
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult describeReservedInstancesOfferings() -> describeReservedInstancesOfferings
    com.amazonaws.services.ec2.model.AllocateAddressResult allocateAddress() -> allocateAddress
    void releaseAddress() -> releaseAddress
    com.amazonaws.services.ec2.model.DescribeSnapshotsResult describeSnapshots() -> describeSnapshots
    com.amazonaws.services.ec2.model.RegisterImageResult registerImage() -> registerImage
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller) -> a
com.amazonaws.services.ec2.model.ActivateLicenseRequest -> com.amazonaws.services.ec2.model.ActivateLicenseRequest:
    java.lang.String licenseId -> a
    java.lang.Integer capacity -> b
    java.lang.String getLicenseId() -> getLicenseId
    void setLicenseId(java.lang.String) -> setLicenseId
    com.amazonaws.services.ec2.model.ActivateLicenseRequest withLicenseId(java.lang.String) -> withLicenseId
    java.lang.Integer getCapacity() -> getCapacity
    void setCapacity(java.lang.Integer) -> setCapacity
    com.amazonaws.services.ec2.model.ActivateLicenseRequest withCapacity(java.lang.Integer) -> withCapacity
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Address -> com.amazonaws.services.ec2.model.Address:
    java.lang.String instanceId -> a
    java.lang.String publicIp -> b
    java.lang.String allocationId -> c
    java.lang.String domain -> d
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.Address withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getPublicIp() -> getPublicIp
    void setPublicIp(java.lang.String) -> setPublicIp
    com.amazonaws.services.ec2.model.Address withPublicIp(java.lang.String) -> withPublicIp
    java.lang.String getAllocationId() -> getAllocationId
    void setAllocationId(java.lang.String) -> setAllocationId
    com.amazonaws.services.ec2.model.Address withAllocationId(java.lang.String) -> withAllocationId
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    com.amazonaws.services.ec2.model.Address withDomain(java.lang.String) -> withDomain
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.AllocateAddressRequest -> com.amazonaws.services.ec2.model.AllocateAddressRequest:
    java.lang.String domain -> a
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    com.amazonaws.services.ec2.model.AllocateAddressRequest withDomain(java.lang.String) -> withDomain
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.AllocateAddressResult -> com.amazonaws.services.ec2.model.AllocateAddressResult:
    java.lang.String publicIp -> a
    java.lang.String domain -> b
    java.lang.String allocationId -> c
    java.lang.String getPublicIp() -> getPublicIp
    void setPublicIp(java.lang.String) -> setPublicIp
    com.amazonaws.services.ec2.model.AllocateAddressResult withPublicIp(java.lang.String) -> withPublicIp
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    com.amazonaws.services.ec2.model.AllocateAddressResult withDomain(java.lang.String) -> withDomain
    java.lang.String getAllocationId() -> getAllocationId
    void setAllocationId(java.lang.String) -> setAllocationId
    com.amazonaws.services.ec2.model.AllocateAddressResult withAllocationId(java.lang.String) -> withAllocationId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.AssociateAddressRequest -> com.amazonaws.services.ec2.model.AssociateAddressRequest:
    java.lang.String instanceId -> a
    java.lang.String publicIp -> b
    java.lang.String allocationId -> c
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.AssociateAddressRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getPublicIp() -> getPublicIp
    void setPublicIp(java.lang.String) -> setPublicIp
    com.amazonaws.services.ec2.model.AssociateAddressRequest withPublicIp(java.lang.String) -> withPublicIp
    java.lang.String getAllocationId() -> getAllocationId
    void setAllocationId(java.lang.String) -> setAllocationId
    com.amazonaws.services.ec2.model.AssociateAddressRequest withAllocationId(java.lang.String) -> withAllocationId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.AssociateAddressResult -> com.amazonaws.services.ec2.model.AssociateAddressResult:
    java.lang.String associationId -> a
    java.lang.String getAssociationId() -> getAssociationId
    void setAssociationId(java.lang.String) -> setAssociationId
    com.amazonaws.services.ec2.model.AssociateAddressResult withAssociationId(java.lang.String) -> withAssociationId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.AttachVolumeRequest -> com.amazonaws.services.ec2.model.AttachVolumeRequest:
    java.lang.String volumeId -> a
    java.lang.String instanceId -> b
    java.lang.String device -> c
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.AttachVolumeRequest withVolumeId(java.lang.String) -> withVolumeId
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.AttachVolumeRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getDevice() -> getDevice
    void setDevice(java.lang.String) -> setDevice
    com.amazonaws.services.ec2.model.AttachVolumeRequest withDevice(java.lang.String) -> withDevice
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.AttachVolumeResult -> com.amazonaws.services.ec2.model.AttachVolumeResult:
    com.amazonaws.services.ec2.model.VolumeAttachment attachment -> a
    com.amazonaws.services.ec2.model.VolumeAttachment getAttachment() -> getAttachment
    void setAttachment(com.amazonaws.services.ec2.model.VolumeAttachment) -> setAttachment
    com.amazonaws.services.ec2.model.AttachVolumeResult withAttachment(com.amazonaws.services.ec2.model.VolumeAttachment) -> withAttachment
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest -> com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest:
    java.lang.String groupName -> a
    java.lang.String groupId -> b
    java.lang.String sourceSecurityGroupName -> c
    java.lang.String sourceSecurityGroupOwnerId -> d
    java.lang.String ipProtocol -> e
    java.lang.Integer fromPort -> f
    java.lang.Integer toPort -> g
    java.lang.String cidrIp -> h
    java.util.List ipPermissions -> i
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withGroupName(java.lang.String) -> withGroupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withGroupId(java.lang.String) -> withGroupId
    java.lang.String getSourceSecurityGroupName() -> getSourceSecurityGroupName
    void setSourceSecurityGroupName(java.lang.String) -> setSourceSecurityGroupName
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withSourceSecurityGroupName(java.lang.String) -> withSourceSecurityGroupName
    java.lang.String getSourceSecurityGroupOwnerId() -> getSourceSecurityGroupOwnerId
    void setSourceSecurityGroupOwnerId(java.lang.String) -> setSourceSecurityGroupOwnerId
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withSourceSecurityGroupOwnerId(java.lang.String) -> withSourceSecurityGroupOwnerId
    java.lang.String getIpProtocol() -> getIpProtocol
    void setIpProtocol(java.lang.String) -> setIpProtocol
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withIpProtocol(java.lang.String) -> withIpProtocol
    java.lang.Integer getFromPort() -> getFromPort
    void setFromPort(java.lang.Integer) -> setFromPort
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withFromPort(java.lang.Integer) -> withFromPort
    java.lang.Integer getToPort() -> getToPort
    void setToPort(java.lang.Integer) -> setToPort
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withToPort(java.lang.Integer) -> withToPort
    java.lang.String getCidrIp() -> getCidrIp
    void setCidrIp(java.lang.String) -> setCidrIp
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withCidrIp(java.lang.String) -> withCidrIp
    java.util.List getIpPermissions() -> getIpPermissions
    void setIpPermissions(java.util.Collection) -> setIpPermissions
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withIpPermissions(com.amazonaws.services.ec2.model.IpPermission[]) -> withIpPermissions
    com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest withIpPermissions(java.util.Collection) -> withIpPermissions
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.AvailabilityZone -> com.amazonaws.services.ec2.model.AvailabilityZone:
    java.lang.String zoneName -> a
    java.lang.String state -> b
    java.lang.String regionName -> c
    java.lang.String getZoneName() -> getZoneName
    void setZoneName(java.lang.String) -> setZoneName
    com.amazonaws.services.ec2.model.AvailabilityZone withZoneName(java.lang.String) -> withZoneName
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.AvailabilityZone withState(java.lang.String) -> withState
    java.lang.String getRegionName() -> getRegionName
    void setRegionName(java.lang.String) -> setRegionName
    com.amazonaws.services.ec2.model.AvailabilityZone withRegionName(java.lang.String) -> withRegionName
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.BlockDeviceMapping -> com.amazonaws.services.ec2.model.BlockDeviceMapping:
    java.lang.String virtualName -> a
    java.lang.String deviceName -> b
    com.amazonaws.services.ec2.model.EbsBlockDevice ebs -> c
    java.lang.String noDevice -> d
    java.lang.String getVirtualName() -> getVirtualName
    void setVirtualName(java.lang.String) -> setVirtualName
    com.amazonaws.services.ec2.model.BlockDeviceMapping withVirtualName(java.lang.String) -> withVirtualName
    java.lang.String getDeviceName() -> getDeviceName
    void setDeviceName(java.lang.String) -> setDeviceName
    com.amazonaws.services.ec2.model.BlockDeviceMapping withDeviceName(java.lang.String) -> withDeviceName
    com.amazonaws.services.ec2.model.EbsBlockDevice getEbs() -> getEbs
    void setEbs(com.amazonaws.services.ec2.model.EbsBlockDevice) -> setEbs
    com.amazonaws.services.ec2.model.BlockDeviceMapping withEbs(com.amazonaws.services.ec2.model.EbsBlockDevice) -> withEbs
    java.lang.String getNoDevice() -> getNoDevice
    void setNoDevice(java.lang.String) -> setNoDevice
    com.amazonaws.services.ec2.model.BlockDeviceMapping withNoDevice(java.lang.String) -> withNoDevice
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.BundleInstanceRequest -> com.amazonaws.services.ec2.model.BundleInstanceRequest:
    java.lang.String instanceId -> a
    com.amazonaws.services.ec2.model.Storage storage -> b
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.BundleInstanceRequest withInstanceId(java.lang.String) -> withInstanceId
    com.amazonaws.services.ec2.model.Storage getStorage() -> getStorage
    void setStorage(com.amazonaws.services.ec2.model.Storage) -> setStorage
    com.amazonaws.services.ec2.model.BundleInstanceRequest withStorage(com.amazonaws.services.ec2.model.Storage) -> withStorage
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.BundleInstanceResult -> com.amazonaws.services.ec2.model.BundleInstanceResult:
    com.amazonaws.services.ec2.model.BundleTask bundleTask -> a
    com.amazonaws.services.ec2.model.BundleTask getBundleTask() -> getBundleTask
    void setBundleTask(com.amazonaws.services.ec2.model.BundleTask) -> setBundleTask
    com.amazonaws.services.ec2.model.BundleInstanceResult withBundleTask(com.amazonaws.services.ec2.model.BundleTask) -> withBundleTask
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.BundleTask -> com.amazonaws.services.ec2.model.BundleTask:
    java.lang.String instanceId -> a
    java.lang.String bundleId -> b
    java.lang.String state -> c
    java.util.Date startTime -> d
    java.util.Date updateTime -> e
    com.amazonaws.services.ec2.model.Storage storage -> f
    java.lang.String progress -> g
    com.amazonaws.services.ec2.model.BundleTaskError bundleTaskError -> h
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.BundleTask withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getBundleId() -> getBundleId
    void setBundleId(java.lang.String) -> setBundleId
    com.amazonaws.services.ec2.model.BundleTask withBundleId(java.lang.String) -> withBundleId
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.BundleTask withState(java.lang.String) -> withState
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    com.amazonaws.services.ec2.model.BundleTask withStartTime(java.util.Date) -> withStartTime
    java.util.Date getUpdateTime() -> getUpdateTime
    void setUpdateTime(java.util.Date) -> setUpdateTime
    com.amazonaws.services.ec2.model.BundleTask withUpdateTime(java.util.Date) -> withUpdateTime
    com.amazonaws.services.ec2.model.Storage getStorage() -> getStorage
    void setStorage(com.amazonaws.services.ec2.model.Storage) -> setStorage
    com.amazonaws.services.ec2.model.BundleTask withStorage(com.amazonaws.services.ec2.model.Storage) -> withStorage
    java.lang.String getProgress() -> getProgress
    void setProgress(java.lang.String) -> setProgress
    com.amazonaws.services.ec2.model.BundleTask withProgress(java.lang.String) -> withProgress
    com.amazonaws.services.ec2.model.BundleTaskError getBundleTaskError() -> getBundleTaskError
    void setBundleTaskError(com.amazonaws.services.ec2.model.BundleTaskError) -> setBundleTaskError
    com.amazonaws.services.ec2.model.BundleTask withBundleTaskError(com.amazonaws.services.ec2.model.BundleTaskError) -> withBundleTaskError
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.BundleTaskError -> com.amazonaws.services.ec2.model.BundleTaskError:
    java.lang.String code -> a
    java.lang.String message -> b
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    com.amazonaws.services.ec2.model.BundleTaskError withCode(java.lang.String) -> withCode
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    com.amazonaws.services.ec2.model.BundleTaskError withMessage(java.lang.String) -> withMessage
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CancelBundleTaskRequest -> com.amazonaws.services.ec2.model.CancelBundleTaskRequest:
    java.lang.String bundleId -> a
    java.lang.String getBundleId() -> getBundleId
    void setBundleId(java.lang.String) -> setBundleId
    com.amazonaws.services.ec2.model.CancelBundleTaskRequest withBundleId(java.lang.String) -> withBundleId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CancelBundleTaskResult -> com.amazonaws.services.ec2.model.CancelBundleTaskResult:
    com.amazonaws.services.ec2.model.BundleTask bundleTask -> a
    com.amazonaws.services.ec2.model.BundleTask getBundleTask() -> getBundleTask
    void setBundleTask(com.amazonaws.services.ec2.model.BundleTask) -> setBundleTask
    com.amazonaws.services.ec2.model.CancelBundleTaskResult withBundleTask(com.amazonaws.services.ec2.model.BundleTask) -> withBundleTask
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest -> com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest:
    java.util.List spotInstanceRequestIds -> a
    java.util.List getSpotInstanceRequestIds() -> getSpotInstanceRequestIds
    void setSpotInstanceRequestIds(java.util.Collection) -> setSpotInstanceRequestIds
    com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest withSpotInstanceRequestIds(java.lang.String[]) -> withSpotInstanceRequestIds
    com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest withSpotInstanceRequestIds(java.util.Collection) -> withSpotInstanceRequestIds
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsResult -> com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsResult:
    java.util.List cancelledSpotInstanceRequests -> a
    java.util.List getCancelledSpotInstanceRequests() -> getCancelledSpotInstanceRequests
    void setCancelledSpotInstanceRequests(java.util.Collection) -> setCancelledSpotInstanceRequests
    com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsResult withCancelledSpotInstanceRequests(com.amazonaws.services.ec2.model.CancelledSpotInstanceRequest[]) -> withCancelledSpotInstanceRequests
    com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsResult withCancelledSpotInstanceRequests(java.util.Collection) -> withCancelledSpotInstanceRequests
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CancelledSpotInstanceRequest -> com.amazonaws.services.ec2.model.CancelledSpotInstanceRequest:
    java.lang.String spotInstanceRequestId -> a
    java.lang.String state -> b
    java.lang.String getSpotInstanceRequestId() -> getSpotInstanceRequestId
    void setSpotInstanceRequestId(java.lang.String) -> setSpotInstanceRequestId
    com.amazonaws.services.ec2.model.CancelledSpotInstanceRequest withSpotInstanceRequestId(java.lang.String) -> withSpotInstanceRequestId
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.CancelledSpotInstanceRequest withState(java.lang.String) -> withState
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest -> com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest:
    java.lang.String productCode -> a
    java.lang.String instanceId -> b
    java.lang.String getProductCode() -> getProductCode
    void setProductCode(java.lang.String) -> setProductCode
    com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest withProductCode(java.lang.String) -> withProductCode
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ConfirmProductInstanceResult -> com.amazonaws.services.ec2.model.ConfirmProductInstanceResult:
    java.lang.String ownerId -> a
    java.lang.String getOwnerId() -> getOwnerId
    void setOwnerId(java.lang.String) -> setOwnerId
    com.amazonaws.services.ec2.model.ConfirmProductInstanceResult withOwnerId(java.lang.String) -> withOwnerId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateImageRequest -> com.amazonaws.services.ec2.model.CreateImageRequest:
    java.lang.String instanceId -> a
    java.lang.String name -> b
    java.lang.String description -> c
    java.lang.Boolean noReboot -> d
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.CreateImageRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.ec2.model.CreateImageRequest withName(java.lang.String) -> withName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.CreateImageRequest withDescription(java.lang.String) -> withDescription
    java.lang.Boolean isNoReboot() -> isNoReboot
    void setNoReboot(java.lang.Boolean) -> setNoReboot
    com.amazonaws.services.ec2.model.CreateImageRequest withNoReboot(java.lang.Boolean) -> withNoReboot
    java.lang.Boolean getNoReboot() -> getNoReboot
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateImageResult -> com.amazonaws.services.ec2.model.CreateImageResult:
    java.lang.String imageId -> a
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.CreateImageResult withImageId(java.lang.String) -> withImageId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateKeyPairRequest -> com.amazonaws.services.ec2.model.CreateKeyPairRequest:
    java.lang.String keyName -> a
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.CreateKeyPairRequest withKeyName(java.lang.String) -> withKeyName
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateKeyPairResult -> com.amazonaws.services.ec2.model.CreateKeyPairResult:
    com.amazonaws.services.ec2.model.KeyPair keyPair -> a
    com.amazonaws.services.ec2.model.KeyPair getKeyPair() -> getKeyPair
    void setKeyPair(com.amazonaws.services.ec2.model.KeyPair) -> setKeyPair
    com.amazonaws.services.ec2.model.CreateKeyPairResult withKeyPair(com.amazonaws.services.ec2.model.KeyPair) -> withKeyPair
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreatePlacementGroupRequest -> com.amazonaws.services.ec2.model.CreatePlacementGroupRequest:
    java.lang.String groupName -> a
    java.lang.String strategy -> b
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.CreatePlacementGroupRequest withGroupName(java.lang.String) -> withGroupName
    java.lang.String getStrategy() -> getStrategy
    void setStrategy(java.lang.String) -> setStrategy
    com.amazonaws.services.ec2.model.CreatePlacementGroupRequest withStrategy(java.lang.String) -> withStrategy
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateSecurityGroupRequest -> com.amazonaws.services.ec2.model.CreateSecurityGroupRequest:
    java.lang.String groupName -> a
    java.lang.String description -> b
    java.lang.String vpcId -> c
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.CreateSecurityGroupRequest withGroupName(java.lang.String) -> withGroupName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.CreateSecurityGroupRequest withDescription(java.lang.String) -> withDescription
    java.lang.String getVpcId() -> getVpcId
    void setVpcId(java.lang.String) -> setVpcId
    com.amazonaws.services.ec2.model.CreateSecurityGroupRequest withVpcId(java.lang.String) -> withVpcId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateSecurityGroupResult -> com.amazonaws.services.ec2.model.CreateSecurityGroupResult:
    java.lang.String groupId -> a
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    com.amazonaws.services.ec2.model.CreateSecurityGroupResult withGroupId(java.lang.String) -> withGroupId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateSnapshotRequest -> com.amazonaws.services.ec2.model.CreateSnapshotRequest:
    java.lang.String volumeId -> a
    java.lang.String description -> b
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.CreateSnapshotRequest withVolumeId(java.lang.String) -> withVolumeId
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.CreateSnapshotRequest withDescription(java.lang.String) -> withDescription
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateSnapshotResult -> com.amazonaws.services.ec2.model.CreateSnapshotResult:
    com.amazonaws.services.ec2.model.Snapshot snapshot -> a
    com.amazonaws.services.ec2.model.Snapshot getSnapshot() -> getSnapshot
    void setSnapshot(com.amazonaws.services.ec2.model.Snapshot) -> setSnapshot
    com.amazonaws.services.ec2.model.CreateSnapshotResult withSnapshot(com.amazonaws.services.ec2.model.Snapshot) -> withSnapshot
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest -> com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest:
    java.lang.String bucket -> a
    java.lang.String prefix -> b
    java.lang.String getBucket() -> getBucket
    void setBucket(java.lang.String) -> setBucket
    com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest withBucket(java.lang.String) -> withBucket
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest withPrefix(java.lang.String) -> withPrefix
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionResult -> com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionResult:
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription spotDatafeedSubscription -> a
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription getSpotDatafeedSubscription() -> getSpotDatafeedSubscription
    void setSpotDatafeedSubscription(com.amazonaws.services.ec2.model.SpotDatafeedSubscription) -> setSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionResult withSpotDatafeedSubscription(com.amazonaws.services.ec2.model.SpotDatafeedSubscription) -> withSpotDatafeedSubscription
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateTagsRequest -> com.amazonaws.services.ec2.model.CreateTagsRequest:
    java.util.List resources -> a
    java.util.List tags -> b
    java.util.List getResources() -> getResources
    void setResources(java.util.Collection) -> setResources
    com.amazonaws.services.ec2.model.CreateTagsRequest withResources(java.lang.String[]) -> withResources
    com.amazonaws.services.ec2.model.CreateTagsRequest withResources(java.util.Collection) -> withResources
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.CreateTagsRequest withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.CreateTagsRequest withTags(java.util.Collection) -> withTags
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateVolumePermission -> com.amazonaws.services.ec2.model.CreateVolumePermission:
    java.lang.String userId -> a
    java.lang.String group -> b
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    com.amazonaws.services.ec2.model.CreateVolumePermission withUserId(java.lang.String) -> withUserId
    java.lang.String getGroup() -> getGroup
    void setGroup(java.lang.String) -> setGroup
    com.amazonaws.services.ec2.model.CreateVolumePermission withGroup(java.lang.String) -> withGroup
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateVolumePermissionModifications -> com.amazonaws.services.ec2.model.CreateVolumePermissionModifications:
    java.util.List add -> a
    java.util.List remove -> b
    java.util.List getAdd() -> getAdd
    void setAdd(java.util.Collection) -> setAdd
    com.amazonaws.services.ec2.model.CreateVolumePermissionModifications withAdd(com.amazonaws.services.ec2.model.CreateVolumePermission[]) -> withAdd
    com.amazonaws.services.ec2.model.CreateVolumePermissionModifications withAdd(java.util.Collection) -> withAdd
    java.util.List getRemove() -> getRemove
    void setRemove(java.util.Collection) -> setRemove
    com.amazonaws.services.ec2.model.CreateVolumePermissionModifications withRemove(com.amazonaws.services.ec2.model.CreateVolumePermission[]) -> withRemove
    com.amazonaws.services.ec2.model.CreateVolumePermissionModifications withRemove(java.util.Collection) -> withRemove
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateVolumeRequest -> com.amazonaws.services.ec2.model.CreateVolumeRequest:
    java.lang.Integer size -> a
    java.lang.String snapshotId -> b
    java.lang.String availabilityZone -> c
    java.lang.Integer getSize() -> getSize
    void setSize(java.lang.Integer) -> setSize
    com.amazonaws.services.ec2.model.CreateVolumeRequest withSize(java.lang.Integer) -> withSize
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.CreateVolumeRequest withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.CreateVolumeRequest withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.CreateVolumeResult -> com.amazonaws.services.ec2.model.CreateVolumeResult:
    com.amazonaws.services.ec2.model.Volume volume -> a
    com.amazonaws.services.ec2.model.Volume getVolume() -> getVolume
    void setVolume(com.amazonaws.services.ec2.model.Volume) -> setVolume
    com.amazonaws.services.ec2.model.CreateVolumeResult withVolume(com.amazonaws.services.ec2.model.Volume) -> withVolume
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeactivateLicenseRequest -> com.amazonaws.services.ec2.model.DeactivateLicenseRequest:
    java.lang.String licenseId -> a
    java.lang.Integer capacity -> b
    java.lang.String getLicenseId() -> getLicenseId
    void setLicenseId(java.lang.String) -> setLicenseId
    com.amazonaws.services.ec2.model.DeactivateLicenseRequest withLicenseId(java.lang.String) -> withLicenseId
    java.lang.Integer getCapacity() -> getCapacity
    void setCapacity(java.lang.Integer) -> setCapacity
    com.amazonaws.services.ec2.model.DeactivateLicenseRequest withCapacity(java.lang.Integer) -> withCapacity
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeleteKeyPairRequest -> com.amazonaws.services.ec2.model.DeleteKeyPairRequest:
    java.lang.String keyName -> a
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.DeleteKeyPairRequest withKeyName(java.lang.String) -> withKeyName
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeletePlacementGroupRequest -> com.amazonaws.services.ec2.model.DeletePlacementGroupRequest:
    java.lang.String groupName -> a
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.DeletePlacementGroupRequest withGroupName(java.lang.String) -> withGroupName
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest -> com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest:
    java.lang.String groupName -> a
    java.lang.String groupId -> b
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest withGroupName(java.lang.String) -> withGroupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest withGroupId(java.lang.String) -> withGroupId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeleteSnapshotRequest -> com.amazonaws.services.ec2.model.DeleteSnapshotRequest:
    java.lang.String snapshotId -> a
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.DeleteSnapshotRequest withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionRequest -> com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeleteTagsRequest -> com.amazonaws.services.ec2.model.DeleteTagsRequest:
    java.util.List resources -> a
    java.util.List tags -> b
    java.util.List getResources() -> getResources
    void setResources(java.util.Collection) -> setResources
    com.amazonaws.services.ec2.model.DeleteTagsRequest withResources(java.lang.String[]) -> withResources
    com.amazonaws.services.ec2.model.DeleteTagsRequest withResources(java.util.Collection) -> withResources
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.DeleteTagsRequest withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.DeleteTagsRequest withTags(java.util.Collection) -> withTags
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeleteVolumeRequest -> com.amazonaws.services.ec2.model.DeleteVolumeRequest:
    java.lang.String volumeId -> a
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.DeleteVolumeRequest withVolumeId(java.lang.String) -> withVolumeId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DeregisterImageRequest -> com.amazonaws.services.ec2.model.DeregisterImageRequest:
    java.lang.String imageId -> a
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.DeregisterImageRequest withImageId(java.lang.String) -> withImageId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeAddressesRequest -> com.amazonaws.services.ec2.model.DescribeAddressesRequest:
    java.util.List publicIps -> a
    java.util.List filters -> b
    java.util.List allocationIds -> c
    java.util.List getPublicIps() -> getPublicIps
    void setPublicIps(java.util.Collection) -> setPublicIps
    com.amazonaws.services.ec2.model.DescribeAddressesRequest withPublicIps(java.lang.String[]) -> withPublicIps
    com.amazonaws.services.ec2.model.DescribeAddressesRequest withPublicIps(java.util.Collection) -> withPublicIps
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeAddressesRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeAddressesRequest withFilters(java.util.Collection) -> withFilters
    java.util.List getAllocationIds() -> getAllocationIds
    void setAllocationIds(java.util.Collection) -> setAllocationIds
    com.amazonaws.services.ec2.model.DescribeAddressesRequest withAllocationIds(java.lang.String[]) -> withAllocationIds
    com.amazonaws.services.ec2.model.DescribeAddressesRequest withAllocationIds(java.util.Collection) -> withAllocationIds
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeAddressesResult -> com.amazonaws.services.ec2.model.DescribeAddressesResult:
    java.util.List addresses -> a
    java.util.List getAddresses() -> getAddresses
    void setAddresses(java.util.Collection) -> setAddresses
    com.amazonaws.services.ec2.model.DescribeAddressesResult withAddresses(com.amazonaws.services.ec2.model.Address[]) -> withAddresses
    com.amazonaws.services.ec2.model.DescribeAddressesResult withAddresses(java.util.Collection) -> withAddresses
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest -> com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest:
    java.util.List zoneNames -> a
    java.util.List filters -> b
    java.util.List getZoneNames() -> getZoneNames
    void setZoneNames(java.util.Collection) -> setZoneNames
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest withZoneNames(java.lang.String[]) -> withZoneNames
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest withZoneNames(java.util.Collection) -> withZoneNames
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult -> com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult:
    java.util.List availabilityZones -> a
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult withAvailabilityZones(com.amazonaws.services.ec2.model.AvailabilityZone[]) -> withAvailabilityZones
    com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeBundleTasksRequest -> com.amazonaws.services.ec2.model.DescribeBundleTasksRequest:
    java.util.List bundleIds -> a
    java.util.List filters -> b
    java.util.List getBundleIds() -> getBundleIds
    void setBundleIds(java.util.Collection) -> setBundleIds
    com.amazonaws.services.ec2.model.DescribeBundleTasksRequest withBundleIds(java.lang.String[]) -> withBundleIds
    com.amazonaws.services.ec2.model.DescribeBundleTasksRequest withBundleIds(java.util.Collection) -> withBundleIds
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeBundleTasksRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeBundleTasksRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeBundleTasksResult -> com.amazonaws.services.ec2.model.DescribeBundleTasksResult:
    java.util.List bundleTasks -> a
    java.util.List getBundleTasks() -> getBundleTasks
    void setBundleTasks(java.util.Collection) -> setBundleTasks
    com.amazonaws.services.ec2.model.DescribeBundleTasksResult withBundleTasks(com.amazonaws.services.ec2.model.BundleTask[]) -> withBundleTasks
    com.amazonaws.services.ec2.model.DescribeBundleTasksResult withBundleTasks(java.util.Collection) -> withBundleTasks
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeImageAttributeRequest -> com.amazonaws.services.ec2.model.DescribeImageAttributeRequest:
    java.lang.String imageId -> a
    java.lang.String attribute -> b
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.DescribeImageAttributeRequest withImageId(java.lang.String) -> withImageId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.DescribeImageAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeImageAttributeResult -> com.amazonaws.services.ec2.model.DescribeImageAttributeResult:
    com.amazonaws.services.ec2.model.ImageAttribute imageAttribute -> a
    com.amazonaws.services.ec2.model.ImageAttribute getImageAttribute() -> getImageAttribute
    void setImageAttribute(com.amazonaws.services.ec2.model.ImageAttribute) -> setImageAttribute
    com.amazonaws.services.ec2.model.DescribeImageAttributeResult withImageAttribute(com.amazonaws.services.ec2.model.ImageAttribute) -> withImageAttribute
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeImagesRequest -> com.amazonaws.services.ec2.model.DescribeImagesRequest:
    java.util.List imageIds -> a
    java.util.List owners -> b
    java.util.List executableUsers -> c
    java.util.List filters -> d
    java.util.List getImageIds() -> getImageIds
    void setImageIds(java.util.Collection) -> setImageIds
    com.amazonaws.services.ec2.model.DescribeImagesRequest withImageIds(java.lang.String[]) -> withImageIds
    com.amazonaws.services.ec2.model.DescribeImagesRequest withImageIds(java.util.Collection) -> withImageIds
    java.util.List getOwners() -> getOwners
    void setOwners(java.util.Collection) -> setOwners
    com.amazonaws.services.ec2.model.DescribeImagesRequest withOwners(java.lang.String[]) -> withOwners
    com.amazonaws.services.ec2.model.DescribeImagesRequest withOwners(java.util.Collection) -> withOwners
    java.util.List getExecutableUsers() -> getExecutableUsers
    void setExecutableUsers(java.util.Collection) -> setExecutableUsers
    com.amazonaws.services.ec2.model.DescribeImagesRequest withExecutableUsers(java.lang.String[]) -> withExecutableUsers
    com.amazonaws.services.ec2.model.DescribeImagesRequest withExecutableUsers(java.util.Collection) -> withExecutableUsers
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeImagesRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeImagesRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeImagesResult -> com.amazonaws.services.ec2.model.DescribeImagesResult:
    java.util.List images -> a
    java.util.List getImages() -> getImages
    void setImages(java.util.Collection) -> setImages
    com.amazonaws.services.ec2.model.DescribeImagesResult withImages(com.amazonaws.services.ec2.model.Image[]) -> withImages
    com.amazonaws.services.ec2.model.DescribeImagesResult withImages(java.util.Collection) -> withImages
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest -> com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest:
    java.lang.String instanceId -> a
    java.lang.String attribute -> b
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeInstanceAttributeResult -> com.amazonaws.services.ec2.model.DescribeInstanceAttributeResult:
    com.amazonaws.services.ec2.model.InstanceAttribute instanceAttribute -> a
    com.amazonaws.services.ec2.model.InstanceAttribute getInstanceAttribute() -> getInstanceAttribute
    void setInstanceAttribute(com.amazonaws.services.ec2.model.InstanceAttribute) -> setInstanceAttribute
    com.amazonaws.services.ec2.model.DescribeInstanceAttributeResult withInstanceAttribute(com.amazonaws.services.ec2.model.InstanceAttribute) -> withInstanceAttribute
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeInstancesRequest -> com.amazonaws.services.ec2.model.DescribeInstancesRequest:
    java.util.List instanceIds -> a
    java.util.List filters -> b
    java.util.List getInstanceIds() -> getInstanceIds
    void setInstanceIds(java.util.Collection) -> setInstanceIds
    com.amazonaws.services.ec2.model.DescribeInstancesRequest withInstanceIds(java.lang.String[]) -> withInstanceIds
    com.amazonaws.services.ec2.model.DescribeInstancesRequest withInstanceIds(java.util.Collection) -> withInstanceIds
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeInstancesRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeInstancesRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeInstancesResult -> com.amazonaws.services.ec2.model.DescribeInstancesResult:
    java.util.List reservations -> a
    java.util.List getReservations() -> getReservations
    void setReservations(java.util.Collection) -> setReservations
    com.amazonaws.services.ec2.model.DescribeInstancesResult withReservations(com.amazonaws.services.ec2.model.Reservation[]) -> withReservations
    com.amazonaws.services.ec2.model.DescribeInstancesResult withReservations(java.util.Collection) -> withReservations
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeKeyPairsRequest -> com.amazonaws.services.ec2.model.DescribeKeyPairsRequest:
    java.util.List keyNames -> a
    java.util.List filters -> b
    java.util.List getKeyNames() -> getKeyNames
    void setKeyNames(java.util.Collection) -> setKeyNames
    com.amazonaws.services.ec2.model.DescribeKeyPairsRequest withKeyNames(java.lang.String[]) -> withKeyNames
    com.amazonaws.services.ec2.model.DescribeKeyPairsRequest withKeyNames(java.util.Collection) -> withKeyNames
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeKeyPairsRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeKeyPairsRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeKeyPairsResult -> com.amazonaws.services.ec2.model.DescribeKeyPairsResult:
    java.util.List keyPairs -> a
    java.util.List getKeyPairs() -> getKeyPairs
    void setKeyPairs(java.util.Collection) -> setKeyPairs
    com.amazonaws.services.ec2.model.DescribeKeyPairsResult withKeyPairs(com.amazonaws.services.ec2.model.KeyPairInfo[]) -> withKeyPairs
    com.amazonaws.services.ec2.model.DescribeKeyPairsResult withKeyPairs(java.util.Collection) -> withKeyPairs
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeLicensesRequest -> com.amazonaws.services.ec2.model.DescribeLicensesRequest:
    java.util.List licenseIds -> a
    java.util.List filters -> b
    java.util.List getLicenseIds() -> getLicenseIds
    void setLicenseIds(java.util.Collection) -> setLicenseIds
    com.amazonaws.services.ec2.model.DescribeLicensesRequest withLicenseIds(java.lang.String[]) -> withLicenseIds
    com.amazonaws.services.ec2.model.DescribeLicensesRequest withLicenseIds(java.util.Collection) -> withLicenseIds
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeLicensesRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeLicensesRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeLicensesResult -> com.amazonaws.services.ec2.model.DescribeLicensesResult:
    java.util.List licenses -> a
    java.util.List getLicenses() -> getLicenses
    void setLicenses(java.util.Collection) -> setLicenses
    com.amazonaws.services.ec2.model.DescribeLicensesResult withLicenses(com.amazonaws.services.ec2.model.License[]) -> withLicenses
    com.amazonaws.services.ec2.model.DescribeLicensesResult withLicenses(java.util.Collection) -> withLicenses
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest -> com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest:
    java.util.List groupNames -> a
    java.util.List filters -> b
    java.util.List getGroupNames() -> getGroupNames
    void setGroupNames(java.util.Collection) -> setGroupNames
    com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest withGroupNames(java.lang.String[]) -> withGroupNames
    com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest withGroupNames(java.util.Collection) -> withGroupNames
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribePlacementGroupsResult -> com.amazonaws.services.ec2.model.DescribePlacementGroupsResult:
    java.util.List placementGroups -> a
    java.util.List getPlacementGroups() -> getPlacementGroups
    void setPlacementGroups(java.util.Collection) -> setPlacementGroups
    com.amazonaws.services.ec2.model.DescribePlacementGroupsResult withPlacementGroups(com.amazonaws.services.ec2.model.PlacementGroup[]) -> withPlacementGroups
    com.amazonaws.services.ec2.model.DescribePlacementGroupsResult withPlacementGroups(java.util.Collection) -> withPlacementGroups
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeRegionsRequest -> com.amazonaws.services.ec2.model.DescribeRegionsRequest:
    java.util.List regionNames -> a
    java.util.List filters -> b
    java.util.List getRegionNames() -> getRegionNames
    void setRegionNames(java.util.Collection) -> setRegionNames
    com.amazonaws.services.ec2.model.DescribeRegionsRequest withRegionNames(java.lang.String[]) -> withRegionNames
    com.amazonaws.services.ec2.model.DescribeRegionsRequest withRegionNames(java.util.Collection) -> withRegionNames
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeRegionsRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeRegionsRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeRegionsResult -> com.amazonaws.services.ec2.model.DescribeRegionsResult:
    java.util.List regions -> a
    java.util.List getRegions() -> getRegions
    void setRegions(java.util.Collection) -> setRegions
    com.amazonaws.services.ec2.model.DescribeRegionsResult withRegions(com.amazonaws.services.ec2.model.Region[]) -> withRegions
    com.amazonaws.services.ec2.model.DescribeRegionsResult withRegions(java.util.Collection) -> withRegions
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest -> com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest:
    java.util.List reservedInstancesOfferingIds -> a
    java.lang.String instanceType -> b
    java.lang.String availabilityZone -> c
    java.lang.String productDescription -> d
    java.util.List filters -> e
    java.lang.String instanceTenancy -> f
    java.util.List getReservedInstancesOfferingIds() -> getReservedInstancesOfferingIds
    void setReservedInstancesOfferingIds(java.util.Collection) -> setReservedInstancesOfferingIds
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest withReservedInstancesOfferingIds(java.lang.String[]) -> withReservedInstancesOfferingIds
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest withReservedInstancesOfferingIds(java.util.Collection) -> withReservedInstancesOfferingIds
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest withInstanceType(java.lang.String) -> withInstanceType
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.String getProductDescription() -> getProductDescription
    void setProductDescription(java.lang.String) -> setProductDescription
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest withProductDescription(java.lang.String) -> withProductDescription
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String getInstanceTenancy() -> getInstanceTenancy
    void setInstanceTenancy(java.lang.String) -> setInstanceTenancy
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest withInstanceTenancy(java.lang.String) -> withInstanceTenancy
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult -> com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult:
    java.util.List reservedInstancesOfferings -> a
    java.util.List getReservedInstancesOfferings() -> getReservedInstancesOfferings
    void setReservedInstancesOfferings(java.util.Collection) -> setReservedInstancesOfferings
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult withReservedInstancesOfferings(com.amazonaws.services.ec2.model.ReservedInstancesOffering[]) -> withReservedInstancesOfferings
    com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult withReservedInstancesOfferings(java.util.Collection) -> withReservedInstancesOfferings
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest -> com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest:
    java.util.List reservedInstancesIds -> a
    java.util.List filters -> b
    java.util.List getReservedInstancesIds() -> getReservedInstancesIds
    void setReservedInstancesIds(java.util.Collection) -> setReservedInstancesIds
    com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest withReservedInstancesIds(java.lang.String[]) -> withReservedInstancesIds
    com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest withReservedInstancesIds(java.util.Collection) -> withReservedInstancesIds
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeReservedInstancesResult -> com.amazonaws.services.ec2.model.DescribeReservedInstancesResult:
    java.util.List reservedInstances -> a
    java.util.List getReservedInstances() -> getReservedInstances
    void setReservedInstances(java.util.Collection) -> setReservedInstances
    com.amazonaws.services.ec2.model.DescribeReservedInstancesResult withReservedInstances(com.amazonaws.services.ec2.model.ReservedInstances[]) -> withReservedInstances
    com.amazonaws.services.ec2.model.DescribeReservedInstancesResult withReservedInstances(java.util.Collection) -> withReservedInstances
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest -> com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest:
    java.util.List groupNames -> a
    java.util.List groupIds -> b
    java.util.List filters -> c
    java.util.List getGroupNames() -> getGroupNames
    void setGroupNames(java.util.Collection) -> setGroupNames
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest withGroupNames(java.lang.String[]) -> withGroupNames
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest withGroupNames(java.util.Collection) -> withGroupNames
    java.util.List getGroupIds() -> getGroupIds
    void setGroupIds(java.util.Collection) -> setGroupIds
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest withGroupIds(java.lang.String[]) -> withGroupIds
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest withGroupIds(java.util.Collection) -> withGroupIds
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult -> com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult:
    java.util.List securityGroups -> a
    java.util.List getSecurityGroups() -> getSecurityGroups
    void setSecurityGroups(java.util.Collection) -> setSecurityGroups
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult withSecurityGroups(com.amazonaws.services.ec2.model.SecurityGroup[]) -> withSecurityGroups
    com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult withSecurityGroups(java.util.Collection) -> withSecurityGroups
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest -> com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest:
    java.lang.String snapshotId -> a
    java.lang.String attribute -> b
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult -> com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult:
    java.lang.String snapshotId -> a
    java.util.List createVolumePermissions -> b
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult withSnapshotId(java.lang.String) -> withSnapshotId
    java.util.List getCreateVolumePermissions() -> getCreateVolumePermissions
    void setCreateVolumePermissions(java.util.Collection) -> setCreateVolumePermissions
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult withCreateVolumePermissions(com.amazonaws.services.ec2.model.CreateVolumePermission[]) -> withCreateVolumePermissions
    com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult withCreateVolumePermissions(java.util.Collection) -> withCreateVolumePermissions
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSnapshotsRequest -> com.amazonaws.services.ec2.model.DescribeSnapshotsRequest:
    java.util.List snapshotIds -> a
    java.util.List ownerIds -> b
    java.util.List restorableByUserIds -> c
    java.util.List filters -> d
    java.util.List getSnapshotIds() -> getSnapshotIds
    void setSnapshotIds(java.util.Collection) -> setSnapshotIds
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest withSnapshotIds(java.lang.String[]) -> withSnapshotIds
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest withSnapshotIds(java.util.Collection) -> withSnapshotIds
    java.util.List getOwnerIds() -> getOwnerIds
    void setOwnerIds(java.util.Collection) -> setOwnerIds
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest withOwnerIds(java.lang.String[]) -> withOwnerIds
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest withOwnerIds(java.util.Collection) -> withOwnerIds
    java.util.List getRestorableByUserIds() -> getRestorableByUserIds
    void setRestorableByUserIds(java.util.Collection) -> setRestorableByUserIds
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest withRestorableByUserIds(java.lang.String[]) -> withRestorableByUserIds
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest withRestorableByUserIds(java.util.Collection) -> withRestorableByUserIds
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeSnapshotsRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSnapshotsResult -> com.amazonaws.services.ec2.model.DescribeSnapshotsResult:
    java.util.List snapshots -> a
    java.util.List getSnapshots() -> getSnapshots
    void setSnapshots(java.util.Collection) -> setSnapshots
    com.amazonaws.services.ec2.model.DescribeSnapshotsResult withSnapshots(com.amazonaws.services.ec2.model.Snapshot[]) -> withSnapshots
    com.amazonaws.services.ec2.model.DescribeSnapshotsResult withSnapshots(java.util.Collection) -> withSnapshots
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionRequest -> com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult -> com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult:
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription spotDatafeedSubscription -> a
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription getSpotDatafeedSubscription() -> getSpotDatafeedSubscription
    void setSpotDatafeedSubscription(com.amazonaws.services.ec2.model.SpotDatafeedSubscription) -> setSpotDatafeedSubscription
    com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult withSpotDatafeedSubscription(com.amazonaws.services.ec2.model.SpotDatafeedSubscription) -> withSpotDatafeedSubscription
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest -> com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest:
    java.util.List spotInstanceRequestIds -> a
    java.util.List filters -> b
    java.util.List getSpotInstanceRequestIds() -> getSpotInstanceRequestIds
    void setSpotInstanceRequestIds(java.util.Collection) -> setSpotInstanceRequestIds
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest withSpotInstanceRequestIds(java.lang.String[]) -> withSpotInstanceRequestIds
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest withSpotInstanceRequestIds(java.util.Collection) -> withSpotInstanceRequestIds
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult -> com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult:
    java.util.List spotInstanceRequests -> a
    java.util.List getSpotInstanceRequests() -> getSpotInstanceRequests
    void setSpotInstanceRequests(java.util.Collection) -> setSpotInstanceRequests
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult withSpotInstanceRequests(com.amazonaws.services.ec2.model.SpotInstanceRequest[]) -> withSpotInstanceRequests
    com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult withSpotInstanceRequests(java.util.Collection) -> withSpotInstanceRequests
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest -> com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest:
    java.util.Date startTime -> a
    java.util.Date endTime -> b
    java.util.List instanceTypes -> c
    java.util.List productDescriptions -> d
    java.util.List filters -> e
    java.lang.String availabilityZone -> f
    java.lang.Integer maxResults -> g
    java.lang.String nextToken -> h
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withStartTime(java.util.Date) -> withStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withEndTime(java.util.Date) -> withEndTime
    java.util.List getInstanceTypes() -> getInstanceTypes
    void setInstanceTypes(java.util.Collection) -> setInstanceTypes
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withInstanceTypes(java.lang.String[]) -> withInstanceTypes
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withInstanceTypes(java.util.Collection) -> withInstanceTypes
    java.util.List getProductDescriptions() -> getProductDescriptions
    void setProductDescriptions(java.util.Collection) -> setProductDescriptions
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withProductDescriptions(java.lang.String[]) -> withProductDescriptions
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withProductDescriptions(java.util.Collection) -> withProductDescriptions
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.Integer getMaxResults() -> getMaxResults
    void setMaxResults(java.lang.Integer) -> setMaxResults
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withMaxResults(java.lang.Integer) -> withMaxResults
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult -> com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult:
    java.util.List spotPriceHistory -> a
    java.lang.String nextToken -> b
    java.util.List getSpotPriceHistory() -> getSpotPriceHistory
    void setSpotPriceHistory(java.util.Collection) -> setSpotPriceHistory
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult withSpotPriceHistory(com.amazonaws.services.ec2.model.SpotPrice[]) -> withSpotPriceHistory
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult withSpotPriceHistory(java.util.Collection) -> withSpotPriceHistory
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeTagsRequest -> com.amazonaws.services.ec2.model.DescribeTagsRequest:
    java.util.List filters -> a
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeTagsRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeTagsRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeTagsResult -> com.amazonaws.services.ec2.model.DescribeTagsResult:
    java.util.List tags -> a
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.DescribeTagsResult withTags(com.amazonaws.services.ec2.model.TagDescription[]) -> withTags
    com.amazonaws.services.ec2.model.DescribeTagsResult withTags(java.util.Collection) -> withTags
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeVolumesRequest -> com.amazonaws.services.ec2.model.DescribeVolumesRequest:
    java.util.List volumeIds -> a
    java.util.List filters -> b
    java.util.List getVolumeIds() -> getVolumeIds
    void setVolumeIds(java.util.Collection) -> setVolumeIds
    com.amazonaws.services.ec2.model.DescribeVolumesRequest withVolumeIds(java.lang.String[]) -> withVolumeIds
    com.amazonaws.services.ec2.model.DescribeVolumesRequest withVolumeIds(java.util.Collection) -> withVolumeIds
    java.util.List getFilters() -> getFilters
    void setFilters(java.util.Collection) -> setFilters
    com.amazonaws.services.ec2.model.DescribeVolumesRequest withFilters(com.amazonaws.services.ec2.model.Filter[]) -> withFilters
    com.amazonaws.services.ec2.model.DescribeVolumesRequest withFilters(java.util.Collection) -> withFilters
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DescribeVolumesResult -> com.amazonaws.services.ec2.model.DescribeVolumesResult:
    java.util.List volumes -> a
    java.util.List getVolumes() -> getVolumes
    void setVolumes(java.util.Collection) -> setVolumes
    com.amazonaws.services.ec2.model.DescribeVolumesResult withVolumes(com.amazonaws.services.ec2.model.Volume[]) -> withVolumes
    com.amazonaws.services.ec2.model.DescribeVolumesResult withVolumes(java.util.Collection) -> withVolumes
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DetachVolumeRequest -> com.amazonaws.services.ec2.model.DetachVolumeRequest:
    java.lang.String volumeId -> a
    java.lang.String instanceId -> b
    java.lang.String device -> c
    java.lang.Boolean force -> d
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.DetachVolumeRequest withVolumeId(java.lang.String) -> withVolumeId
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.DetachVolumeRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getDevice() -> getDevice
    void setDevice(java.lang.String) -> setDevice
    com.amazonaws.services.ec2.model.DetachVolumeRequest withDevice(java.lang.String) -> withDevice
    java.lang.Boolean isForce() -> isForce
    void setForce(java.lang.Boolean) -> setForce
    com.amazonaws.services.ec2.model.DetachVolumeRequest withForce(java.lang.Boolean) -> withForce
    java.lang.Boolean getForce() -> getForce
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DetachVolumeResult -> com.amazonaws.services.ec2.model.DetachVolumeResult:
    com.amazonaws.services.ec2.model.VolumeAttachment attachment -> a
    com.amazonaws.services.ec2.model.VolumeAttachment getAttachment() -> getAttachment
    void setAttachment(com.amazonaws.services.ec2.model.VolumeAttachment) -> setAttachment
    com.amazonaws.services.ec2.model.DetachVolumeResult withAttachment(com.amazonaws.services.ec2.model.VolumeAttachment) -> withAttachment
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DisassociateAddressRequest -> com.amazonaws.services.ec2.model.DisassociateAddressRequest:
    java.lang.String publicIp -> a
    java.lang.String associationId -> b
    java.lang.String getPublicIp() -> getPublicIp
    void setPublicIp(java.lang.String) -> setPublicIp
    com.amazonaws.services.ec2.model.DisassociateAddressRequest withPublicIp(java.lang.String) -> withPublicIp
    java.lang.String getAssociationId() -> getAssociationId
    void setAssociationId(java.lang.String) -> setAssociationId
    com.amazonaws.services.ec2.model.DisassociateAddressRequest withAssociationId(java.lang.String) -> withAssociationId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.DomainType -> com.amazonaws.services.ec2.model.DomainType:
    com.amazonaws.services.ec2.model.DomainType Vpc -> Vpc
    com.amazonaws.services.ec2.model.DomainType Standard -> Standard
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.DomainType[] $VALUES -> b
    com.amazonaws.services.ec2.model.DomainType[] values() -> values
    com.amazonaws.services.ec2.model.DomainType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.DomainType fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.EbsBlockDevice -> com.amazonaws.services.ec2.model.EbsBlockDevice:
    java.lang.String snapshotId -> a
    java.lang.Integer volumeSize -> b
    java.lang.Boolean deleteOnTermination -> c
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.EbsBlockDevice withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.Integer getVolumeSize() -> getVolumeSize
    void setVolumeSize(java.lang.Integer) -> setVolumeSize
    com.amazonaws.services.ec2.model.EbsBlockDevice withVolumeSize(java.lang.Integer) -> withVolumeSize
    java.lang.Boolean isDeleteOnTermination() -> isDeleteOnTermination
    void setDeleteOnTermination(java.lang.Boolean) -> setDeleteOnTermination
    com.amazonaws.services.ec2.model.EbsBlockDevice withDeleteOnTermination(java.lang.Boolean) -> withDeleteOnTermination
    java.lang.Boolean getDeleteOnTermination() -> getDeleteOnTermination
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.EbsInstanceBlockDevice -> com.amazonaws.services.ec2.model.EbsInstanceBlockDevice:
    java.lang.String volumeId -> a
    java.lang.String status -> b
    java.util.Date attachTime -> c
    java.lang.Boolean deleteOnTermination -> d
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.EbsInstanceBlockDevice withVolumeId(java.lang.String) -> withVolumeId
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    com.amazonaws.services.ec2.model.EbsInstanceBlockDevice withStatus(java.lang.String) -> withStatus
    java.util.Date getAttachTime() -> getAttachTime
    void setAttachTime(java.util.Date) -> setAttachTime
    com.amazonaws.services.ec2.model.EbsInstanceBlockDevice withAttachTime(java.util.Date) -> withAttachTime
    java.lang.Boolean isDeleteOnTermination() -> isDeleteOnTermination
    void setDeleteOnTermination(java.lang.Boolean) -> setDeleteOnTermination
    com.amazonaws.services.ec2.model.EbsInstanceBlockDevice withDeleteOnTermination(java.lang.Boolean) -> withDeleteOnTermination
    java.lang.Boolean getDeleteOnTermination() -> getDeleteOnTermination
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification -> com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification:
    java.lang.String volumeId -> a
    java.lang.Boolean deleteOnTermination -> b
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification withVolumeId(java.lang.String) -> withVolumeId
    java.lang.Boolean isDeleteOnTermination() -> isDeleteOnTermination
    void setDeleteOnTermination(java.lang.Boolean) -> setDeleteOnTermination
    com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification withDeleteOnTermination(java.lang.Boolean) -> withDeleteOnTermination
    java.lang.Boolean getDeleteOnTermination() -> getDeleteOnTermination
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Filter -> com.amazonaws.services.ec2.model.Filter:
    java.lang.String name -> a
    java.util.List values -> b
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.ec2.model.Filter withName(java.lang.String) -> withName
    java.util.List getValues() -> getValues
    void setValues(java.util.Collection) -> setValues
    com.amazonaws.services.ec2.model.Filter withValues(java.lang.String[]) -> withValues
    com.amazonaws.services.ec2.model.Filter withValues(java.util.Collection) -> withValues
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.GetConsoleOutputRequest -> com.amazonaws.services.ec2.model.GetConsoleOutputRequest:
    java.lang.String instanceId -> a
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.GetConsoleOutputRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.GetConsoleOutputResult -> com.amazonaws.services.ec2.model.GetConsoleOutputResult:
    java.lang.String instanceId -> a
    java.util.Date timestamp -> b
    java.lang.String output -> c
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.GetConsoleOutputResult withInstanceId(java.lang.String) -> withInstanceId
    java.util.Date getTimestamp() -> getTimestamp
    void setTimestamp(java.util.Date) -> setTimestamp
    com.amazonaws.services.ec2.model.GetConsoleOutputResult withTimestamp(java.util.Date) -> withTimestamp
    java.lang.String getOutput() -> getOutput
    void setOutput(java.lang.String) -> setOutput
    com.amazonaws.services.ec2.model.GetConsoleOutputResult withOutput(java.lang.String) -> withOutput
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.GetPasswordDataRequest -> com.amazonaws.services.ec2.model.GetPasswordDataRequest:
    java.lang.String instanceId -> a
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.GetPasswordDataRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.GetPasswordDataResult -> com.amazonaws.services.ec2.model.GetPasswordDataResult:
    java.lang.String instanceId -> a
    java.util.Date timestamp -> b
    java.lang.String passwordData -> c
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.GetPasswordDataResult withInstanceId(java.lang.String) -> withInstanceId
    java.util.Date getTimestamp() -> getTimestamp
    void setTimestamp(java.util.Date) -> setTimestamp
    com.amazonaws.services.ec2.model.GetPasswordDataResult withTimestamp(java.util.Date) -> withTimestamp
    java.lang.String getPasswordData() -> getPasswordData
    void setPasswordData(java.lang.String) -> setPasswordData
    com.amazonaws.services.ec2.model.GetPasswordDataResult withPasswordData(java.lang.String) -> withPasswordData
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.GroupIdentifier -> com.amazonaws.services.ec2.model.GroupIdentifier:
    java.lang.String groupName -> a
    java.lang.String groupId -> b
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.GroupIdentifier withGroupName(java.lang.String) -> withGroupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    com.amazonaws.services.ec2.model.GroupIdentifier withGroupId(java.lang.String) -> withGroupId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.HypervisorType -> com.amazonaws.services.ec2.model.HypervisorType:
    com.amazonaws.services.ec2.model.HypervisorType Ovm -> Ovm
    com.amazonaws.services.ec2.model.HypervisorType Xen -> Xen
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.HypervisorType[] $VALUES -> b
    com.amazonaws.services.ec2.model.HypervisorType[] values() -> values
    com.amazonaws.services.ec2.model.HypervisorType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.HypervisorType fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.Image -> com.amazonaws.services.ec2.model.Image:
    java.lang.String imageId -> a
    java.lang.String imageLocation -> b
    java.lang.String state -> c
    java.lang.String ownerId -> d
    java.lang.Boolean publicValue -> e
    java.util.List productCodes -> f
    java.lang.String architecture -> g
    java.lang.String imageType -> h
    java.lang.String kernelId -> i
    java.lang.String ramdiskId -> j
    java.lang.String platform -> k
    com.amazonaws.services.ec2.model.StateReason stateReason -> l
    java.lang.String imageOwnerAlias -> m
    java.lang.String name -> n
    java.lang.String description -> o
    java.lang.String rootDeviceType -> p
    java.lang.String rootDeviceName -> q
    java.util.List blockDeviceMappings -> r
    java.lang.String virtualizationType -> s
    java.util.List tags -> t
    java.lang.String hypervisor -> u
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.Image withImageId(java.lang.String) -> withImageId
    java.lang.String getImageLocation() -> getImageLocation
    void setImageLocation(java.lang.String) -> setImageLocation
    com.amazonaws.services.ec2.model.Image withImageLocation(java.lang.String) -> withImageLocation
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.Image withState(java.lang.String) -> withState
    java.lang.String getOwnerId() -> getOwnerId
    void setOwnerId(java.lang.String) -> setOwnerId
    com.amazonaws.services.ec2.model.Image withOwnerId(java.lang.String) -> withOwnerId
    java.lang.Boolean isPublic() -> isPublic
    void setPublic(java.lang.Boolean) -> setPublic
    com.amazonaws.services.ec2.model.Image withPublic(java.lang.Boolean) -> withPublic
    java.lang.Boolean getPublic() -> getPublic
    java.util.List getProductCodes() -> getProductCodes
    void setProductCodes(java.util.Collection) -> setProductCodes
    com.amazonaws.services.ec2.model.Image withProductCodes(com.amazonaws.services.ec2.model.ProductCode[]) -> withProductCodes
    com.amazonaws.services.ec2.model.Image withProductCodes(java.util.Collection) -> withProductCodes
    java.lang.String getArchitecture() -> getArchitecture
    void setArchitecture(java.lang.String) -> setArchitecture
    com.amazonaws.services.ec2.model.Image withArchitecture(java.lang.String) -> withArchitecture
    java.lang.String getImageType() -> getImageType
    void setImageType(java.lang.String) -> setImageType
    com.amazonaws.services.ec2.model.Image withImageType(java.lang.String) -> withImageType
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.ec2.model.Image withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.ec2.model.Image withRamdiskId(java.lang.String) -> withRamdiskId
    java.lang.String getPlatform() -> getPlatform
    void setPlatform(java.lang.String) -> setPlatform
    com.amazonaws.services.ec2.model.Image withPlatform(java.lang.String) -> withPlatform
    com.amazonaws.services.ec2.model.StateReason getStateReason() -> getStateReason
    void setStateReason(com.amazonaws.services.ec2.model.StateReason) -> setStateReason
    com.amazonaws.services.ec2.model.Image withStateReason(com.amazonaws.services.ec2.model.StateReason) -> withStateReason
    java.lang.String getImageOwnerAlias() -> getImageOwnerAlias
    void setImageOwnerAlias(java.lang.String) -> setImageOwnerAlias
    com.amazonaws.services.ec2.model.Image withImageOwnerAlias(java.lang.String) -> withImageOwnerAlias
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.ec2.model.Image withName(java.lang.String) -> withName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.Image withDescription(java.lang.String) -> withDescription
    java.lang.String getRootDeviceType() -> getRootDeviceType
    void setRootDeviceType(java.lang.String) -> setRootDeviceType
    com.amazonaws.services.ec2.model.Image withRootDeviceType(java.lang.String) -> withRootDeviceType
    java.lang.String getRootDeviceName() -> getRootDeviceName
    void setRootDeviceName(java.lang.String) -> setRootDeviceName
    com.amazonaws.services.ec2.model.Image withRootDeviceName(java.lang.String) -> withRootDeviceName
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.ec2.model.Image withBlockDeviceMappings(com.amazonaws.services.ec2.model.BlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.ec2.model.Image withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    java.lang.String getVirtualizationType() -> getVirtualizationType
    void setVirtualizationType(java.lang.String) -> setVirtualizationType
    com.amazonaws.services.ec2.model.Image withVirtualizationType(java.lang.String) -> withVirtualizationType
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.Image withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.Image withTags(java.util.Collection) -> withTags
    java.lang.String getHypervisor() -> getHypervisor
    void setHypervisor(java.lang.String) -> setHypervisor
    com.amazonaws.services.ec2.model.Image withHypervisor(java.lang.String) -> withHypervisor
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ImageAttribute -> com.amazonaws.services.ec2.model.ImageAttribute:
    java.lang.String imageId -> a
    java.util.List launchPermissions -> b
    java.util.List productCodes -> c
    java.lang.String kernelId -> d
    java.lang.String ramdiskId -> e
    java.lang.String description -> f
    java.util.List blockDeviceMappings -> g
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.ImageAttribute withImageId(java.lang.String) -> withImageId
    java.util.List getLaunchPermissions() -> getLaunchPermissions
    void setLaunchPermissions(java.util.Collection) -> setLaunchPermissions
    com.amazonaws.services.ec2.model.ImageAttribute withLaunchPermissions(com.amazonaws.services.ec2.model.LaunchPermission[]) -> withLaunchPermissions
    com.amazonaws.services.ec2.model.ImageAttribute withLaunchPermissions(java.util.Collection) -> withLaunchPermissions
    java.util.List getProductCodes() -> getProductCodes
    void setProductCodes(java.util.Collection) -> setProductCodes
    com.amazonaws.services.ec2.model.ImageAttribute withProductCodes(com.amazonaws.services.ec2.model.ProductCode[]) -> withProductCodes
    com.amazonaws.services.ec2.model.ImageAttribute withProductCodes(java.util.Collection) -> withProductCodes
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.ec2.model.ImageAttribute withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.ec2.model.ImageAttribute withRamdiskId(java.lang.String) -> withRamdiskId
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.ImageAttribute withDescription(java.lang.String) -> withDescription
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.ec2.model.ImageAttribute withBlockDeviceMappings(com.amazonaws.services.ec2.model.BlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.ec2.model.ImageAttribute withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ImageState -> com.amazonaws.services.ec2.model.ImageState:
    com.amazonaws.services.ec2.model.ImageState Available -> Available
    com.amazonaws.services.ec2.model.ImageState Deregistered -> Deregistered
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.ImageState[] $VALUES -> b
    com.amazonaws.services.ec2.model.ImageState[] values() -> values
    com.amazonaws.services.ec2.model.ImageState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.ImageState fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.ImportKeyPairRequest -> com.amazonaws.services.ec2.model.ImportKeyPairRequest:
    java.lang.String keyName -> a
    java.lang.String publicKeyMaterial -> b
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.ImportKeyPairRequest withKeyName(java.lang.String) -> withKeyName
    java.lang.String getPublicKeyMaterial() -> getPublicKeyMaterial
    void setPublicKeyMaterial(java.lang.String) -> setPublicKeyMaterial
    com.amazonaws.services.ec2.model.ImportKeyPairRequest withPublicKeyMaterial(java.lang.String) -> withPublicKeyMaterial
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ImportKeyPairResult -> com.amazonaws.services.ec2.model.ImportKeyPairResult:
    java.lang.String keyName -> a
    java.lang.String keyFingerprint -> b
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.ImportKeyPairResult withKeyName(java.lang.String) -> withKeyName
    java.lang.String getKeyFingerprint() -> getKeyFingerprint
    void setKeyFingerprint(java.lang.String) -> setKeyFingerprint
    com.amazonaws.services.ec2.model.ImportKeyPairResult withKeyFingerprint(java.lang.String) -> withKeyFingerprint
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Instance -> com.amazonaws.services.ec2.model.Instance:
    java.lang.String instanceId -> a
    java.lang.String imageId -> b
    com.amazonaws.services.ec2.model.InstanceState state -> c
    java.lang.String privateDnsName -> d
    java.lang.String publicDnsName -> e
    java.lang.String stateTransitionReason -> f
    java.lang.String keyName -> g
    java.lang.Integer amiLaunchIndex -> h
    java.util.List productCodes -> i
    java.lang.String instanceType -> j
    java.util.Date launchTime -> k
    com.amazonaws.services.ec2.model.Placement placement -> l
    java.lang.String kernelId -> m
    java.lang.String ramdiskId -> n
    java.lang.String platform -> o
    com.amazonaws.services.ec2.model.Monitoring monitoring -> p
    java.lang.String subnetId -> q
    java.lang.String vpcId -> r
    java.lang.String privateIpAddress -> s
    java.lang.String publicIpAddress -> t
    com.amazonaws.services.ec2.model.StateReason stateReason -> u
    java.lang.String architecture -> v
    java.lang.String rootDeviceType -> w
    java.lang.String rootDeviceName -> x
    java.util.List blockDeviceMappings -> y
    java.lang.String virtualizationType -> z
    java.lang.String instanceLifecycle -> A
    java.lang.String spotInstanceRequestId -> B
    com.amazonaws.services.ec2.model.InstanceLicense license -> C
    java.lang.String clientToken -> D
    java.util.List tags -> E
    java.util.List securityGroups -> F
    java.lang.Boolean sourceDestCheck -> G
    java.lang.String hypervisor -> H
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.Instance withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.Instance withImageId(java.lang.String) -> withImageId
    com.amazonaws.services.ec2.model.InstanceState getState() -> getState
    void setState(com.amazonaws.services.ec2.model.InstanceState) -> setState
    com.amazonaws.services.ec2.model.Instance withState(com.amazonaws.services.ec2.model.InstanceState) -> withState
    java.lang.String getPrivateDnsName() -> getPrivateDnsName
    void setPrivateDnsName(java.lang.String) -> setPrivateDnsName
    com.amazonaws.services.ec2.model.Instance withPrivateDnsName(java.lang.String) -> withPrivateDnsName
    java.lang.String getPublicDnsName() -> getPublicDnsName
    void setPublicDnsName(java.lang.String) -> setPublicDnsName
    com.amazonaws.services.ec2.model.Instance withPublicDnsName(java.lang.String) -> withPublicDnsName
    java.lang.String getStateTransitionReason() -> getStateTransitionReason
    void setStateTransitionReason(java.lang.String) -> setStateTransitionReason
    com.amazonaws.services.ec2.model.Instance withStateTransitionReason(java.lang.String) -> withStateTransitionReason
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.Instance withKeyName(java.lang.String) -> withKeyName
    java.lang.Integer getAmiLaunchIndex() -> getAmiLaunchIndex
    void setAmiLaunchIndex(java.lang.Integer) -> setAmiLaunchIndex
    com.amazonaws.services.ec2.model.Instance withAmiLaunchIndex(java.lang.Integer) -> withAmiLaunchIndex
    java.util.List getProductCodes() -> getProductCodes
    void setProductCodes(java.util.Collection) -> setProductCodes
    com.amazonaws.services.ec2.model.Instance withProductCodes(com.amazonaws.services.ec2.model.ProductCode[]) -> withProductCodes
    com.amazonaws.services.ec2.model.Instance withProductCodes(java.util.Collection) -> withProductCodes
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.Instance withInstanceType(java.lang.String) -> withInstanceType
    java.util.Date getLaunchTime() -> getLaunchTime
    void setLaunchTime(java.util.Date) -> setLaunchTime
    com.amazonaws.services.ec2.model.Instance withLaunchTime(java.util.Date) -> withLaunchTime
    com.amazonaws.services.ec2.model.Placement getPlacement() -> getPlacement
    void setPlacement(com.amazonaws.services.ec2.model.Placement) -> setPlacement
    com.amazonaws.services.ec2.model.Instance withPlacement(com.amazonaws.services.ec2.model.Placement) -> withPlacement
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.ec2.model.Instance withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.ec2.model.Instance withRamdiskId(java.lang.String) -> withRamdiskId
    java.lang.String getPlatform() -> getPlatform
    void setPlatform(java.lang.String) -> setPlatform
    com.amazonaws.services.ec2.model.Instance withPlatform(java.lang.String) -> withPlatform
    com.amazonaws.services.ec2.model.Monitoring getMonitoring() -> getMonitoring
    void setMonitoring(com.amazonaws.services.ec2.model.Monitoring) -> setMonitoring
    com.amazonaws.services.ec2.model.Instance withMonitoring(com.amazonaws.services.ec2.model.Monitoring) -> withMonitoring
    java.lang.String getSubnetId() -> getSubnetId
    void setSubnetId(java.lang.String) -> setSubnetId
    com.amazonaws.services.ec2.model.Instance withSubnetId(java.lang.String) -> withSubnetId
    java.lang.String getVpcId() -> getVpcId
    void setVpcId(java.lang.String) -> setVpcId
    com.amazonaws.services.ec2.model.Instance withVpcId(java.lang.String) -> withVpcId
    java.lang.String getPrivateIpAddress() -> getPrivateIpAddress
    void setPrivateIpAddress(java.lang.String) -> setPrivateIpAddress
    com.amazonaws.services.ec2.model.Instance withPrivateIpAddress(java.lang.String) -> withPrivateIpAddress
    java.lang.String getPublicIpAddress() -> getPublicIpAddress
    void setPublicIpAddress(java.lang.String) -> setPublicIpAddress
    com.amazonaws.services.ec2.model.Instance withPublicIpAddress(java.lang.String) -> withPublicIpAddress
    com.amazonaws.services.ec2.model.StateReason getStateReason() -> getStateReason
    void setStateReason(com.amazonaws.services.ec2.model.StateReason) -> setStateReason
    com.amazonaws.services.ec2.model.Instance withStateReason(com.amazonaws.services.ec2.model.StateReason) -> withStateReason
    java.lang.String getArchitecture() -> getArchitecture
    void setArchitecture(java.lang.String) -> setArchitecture
    com.amazonaws.services.ec2.model.Instance withArchitecture(java.lang.String) -> withArchitecture
    java.lang.String getRootDeviceType() -> getRootDeviceType
    void setRootDeviceType(java.lang.String) -> setRootDeviceType
    com.amazonaws.services.ec2.model.Instance withRootDeviceType(java.lang.String) -> withRootDeviceType
    java.lang.String getRootDeviceName() -> getRootDeviceName
    void setRootDeviceName(java.lang.String) -> setRootDeviceName
    com.amazonaws.services.ec2.model.Instance withRootDeviceName(java.lang.String) -> withRootDeviceName
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.ec2.model.Instance withBlockDeviceMappings(com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.ec2.model.Instance withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    java.lang.String getVirtualizationType() -> getVirtualizationType
    void setVirtualizationType(java.lang.String) -> setVirtualizationType
    com.amazonaws.services.ec2.model.Instance withVirtualizationType(java.lang.String) -> withVirtualizationType
    java.lang.String getInstanceLifecycle() -> getInstanceLifecycle
    void setInstanceLifecycle(java.lang.String) -> setInstanceLifecycle
    com.amazonaws.services.ec2.model.Instance withInstanceLifecycle(java.lang.String) -> withInstanceLifecycle
    java.lang.String getSpotInstanceRequestId() -> getSpotInstanceRequestId
    void setSpotInstanceRequestId(java.lang.String) -> setSpotInstanceRequestId
    com.amazonaws.services.ec2.model.Instance withSpotInstanceRequestId(java.lang.String) -> withSpotInstanceRequestId
    com.amazonaws.services.ec2.model.InstanceLicense getLicense() -> getLicense
    void setLicense(com.amazonaws.services.ec2.model.InstanceLicense) -> setLicense
    com.amazonaws.services.ec2.model.Instance withLicense(com.amazonaws.services.ec2.model.InstanceLicense) -> withLicense
    java.lang.String getClientToken() -> getClientToken
    void setClientToken(java.lang.String) -> setClientToken
    com.amazonaws.services.ec2.model.Instance withClientToken(java.lang.String) -> withClientToken
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.Instance withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.Instance withTags(java.util.Collection) -> withTags
    java.util.List getSecurityGroups() -> getSecurityGroups
    void setSecurityGroups(java.util.Collection) -> setSecurityGroups
    com.amazonaws.services.ec2.model.Instance withSecurityGroups(com.amazonaws.services.ec2.model.GroupIdentifier[]) -> withSecurityGroups
    com.amazonaws.services.ec2.model.Instance withSecurityGroups(java.util.Collection) -> withSecurityGroups
    java.lang.Boolean isSourceDestCheck() -> isSourceDestCheck
    void setSourceDestCheck(java.lang.Boolean) -> setSourceDestCheck
    com.amazonaws.services.ec2.model.Instance withSourceDestCheck(java.lang.Boolean) -> withSourceDestCheck
    java.lang.Boolean getSourceDestCheck() -> getSourceDestCheck
    java.lang.String getHypervisor() -> getHypervisor
    void setHypervisor(java.lang.String) -> setHypervisor
    com.amazonaws.services.ec2.model.Instance withHypervisor(java.lang.String) -> withHypervisor
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceAttribute -> com.amazonaws.services.ec2.model.InstanceAttribute:
    java.lang.String instanceId -> a
    java.lang.String instanceType -> b
    java.lang.String kernelId -> c
    java.lang.String ramdiskId -> d
    java.lang.String userData -> e
    java.lang.Boolean disableApiTermination -> f
    java.lang.String instanceInitiatedShutdownBehavior -> g
    java.lang.String rootDeviceName -> h
    java.util.List blockDeviceMappings -> i
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.InstanceAttribute withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.InstanceAttribute withInstanceType(java.lang.String) -> withInstanceType
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.ec2.model.InstanceAttribute withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.ec2.model.InstanceAttribute withRamdiskId(java.lang.String) -> withRamdiskId
    java.lang.String getUserData() -> getUserData
    void setUserData(java.lang.String) -> setUserData
    com.amazonaws.services.ec2.model.InstanceAttribute withUserData(java.lang.String) -> withUserData
    java.lang.Boolean isDisableApiTermination() -> isDisableApiTermination
    void setDisableApiTermination(java.lang.Boolean) -> setDisableApiTermination
    com.amazonaws.services.ec2.model.InstanceAttribute withDisableApiTermination(java.lang.Boolean) -> withDisableApiTermination
    java.lang.Boolean getDisableApiTermination() -> getDisableApiTermination
    java.lang.String getInstanceInitiatedShutdownBehavior() -> getInstanceInitiatedShutdownBehavior
    void setInstanceInitiatedShutdownBehavior(java.lang.String) -> setInstanceInitiatedShutdownBehavior
    com.amazonaws.services.ec2.model.InstanceAttribute withInstanceInitiatedShutdownBehavior(java.lang.String) -> withInstanceInitiatedShutdownBehavior
    java.lang.String getRootDeviceName() -> getRootDeviceName
    void setRootDeviceName(java.lang.String) -> setRootDeviceName
    com.amazonaws.services.ec2.model.InstanceAttribute withRootDeviceName(java.lang.String) -> withRootDeviceName
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.ec2.model.InstanceAttribute withBlockDeviceMappings(com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.ec2.model.InstanceAttribute withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping -> com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping:
    java.lang.String deviceName -> a
    com.amazonaws.services.ec2.model.EbsInstanceBlockDevice ebs -> b
    java.lang.String getDeviceName() -> getDeviceName
    void setDeviceName(java.lang.String) -> setDeviceName
    com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping withDeviceName(java.lang.String) -> withDeviceName
    com.amazonaws.services.ec2.model.EbsInstanceBlockDevice getEbs() -> getEbs
    void setEbs(com.amazonaws.services.ec2.model.EbsInstanceBlockDevice) -> setEbs
    com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping withEbs(com.amazonaws.services.ec2.model.EbsInstanceBlockDevice) -> withEbs
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceBlockDeviceMappingSpecification -> com.amazonaws.services.ec2.model.InstanceBlockDeviceMappingSpecification:
    java.lang.String deviceName -> a
    com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification ebs -> b
    java.lang.String virtualName -> c
    java.lang.String noDevice -> d
    java.lang.String getDeviceName() -> getDeviceName
    void setDeviceName(java.lang.String) -> setDeviceName
    com.amazonaws.services.ec2.model.InstanceBlockDeviceMappingSpecification withDeviceName(java.lang.String) -> withDeviceName
    com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification getEbs() -> getEbs
    void setEbs(com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification) -> setEbs
    com.amazonaws.services.ec2.model.InstanceBlockDeviceMappingSpecification withEbs(com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification) -> withEbs
    java.lang.String getVirtualName() -> getVirtualName
    void setVirtualName(java.lang.String) -> setVirtualName
    com.amazonaws.services.ec2.model.InstanceBlockDeviceMappingSpecification withVirtualName(java.lang.String) -> withVirtualName
    java.lang.String getNoDevice() -> getNoDevice
    void setNoDevice(java.lang.String) -> setNoDevice
    com.amazonaws.services.ec2.model.InstanceBlockDeviceMappingSpecification withNoDevice(java.lang.String) -> withNoDevice
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceLicense -> com.amazonaws.services.ec2.model.InstanceLicense:
    java.lang.String pool -> a
    java.lang.String getPool() -> getPool
    void setPool(java.lang.String) -> setPool
    com.amazonaws.services.ec2.model.InstanceLicense withPool(java.lang.String) -> withPool
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceLicenseSpecification -> com.amazonaws.services.ec2.model.InstanceLicenseSpecification:
    java.lang.String pool -> a
    java.lang.String getPool() -> getPool
    void setPool(java.lang.String) -> setPool
    com.amazonaws.services.ec2.model.InstanceLicenseSpecification withPool(java.lang.String) -> withPool
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceMonitoring -> com.amazonaws.services.ec2.model.InstanceMonitoring:
    java.lang.String instanceId -> a
    com.amazonaws.services.ec2.model.Monitoring monitoring -> b
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.InstanceMonitoring withInstanceId(java.lang.String) -> withInstanceId
    com.amazonaws.services.ec2.model.Monitoring getMonitoring() -> getMonitoring
    void setMonitoring(com.amazonaws.services.ec2.model.Monitoring) -> setMonitoring
    com.amazonaws.services.ec2.model.InstanceMonitoring withMonitoring(com.amazonaws.services.ec2.model.Monitoring) -> withMonitoring
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceState -> com.amazonaws.services.ec2.model.InstanceState:
    java.lang.Integer code -> a
    java.lang.String name -> b
    java.lang.Integer getCode() -> getCode
    void setCode(java.lang.Integer) -> setCode
    com.amazonaws.services.ec2.model.InstanceState withCode(java.lang.Integer) -> withCode
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.ec2.model.InstanceState withName(java.lang.String) -> withName
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceStateChange -> com.amazonaws.services.ec2.model.InstanceStateChange:
    java.lang.String instanceId -> a
    com.amazonaws.services.ec2.model.InstanceState currentState -> b
    com.amazonaws.services.ec2.model.InstanceState previousState -> c
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.InstanceStateChange withInstanceId(java.lang.String) -> withInstanceId
    com.amazonaws.services.ec2.model.InstanceState getCurrentState() -> getCurrentState
    void setCurrentState(com.amazonaws.services.ec2.model.InstanceState) -> setCurrentState
    com.amazonaws.services.ec2.model.InstanceStateChange withCurrentState(com.amazonaws.services.ec2.model.InstanceState) -> withCurrentState
    com.amazonaws.services.ec2.model.InstanceState getPreviousState() -> getPreviousState
    void setPreviousState(com.amazonaws.services.ec2.model.InstanceState) -> setPreviousState
    com.amazonaws.services.ec2.model.InstanceStateChange withPreviousState(com.amazonaws.services.ec2.model.InstanceState) -> withPreviousState
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.InstanceStateName -> com.amazonaws.services.ec2.model.InstanceStateName:
    com.amazonaws.services.ec2.model.InstanceStateName Pending -> Pending
    com.amazonaws.services.ec2.model.InstanceStateName Running -> Running
    com.amazonaws.services.ec2.model.InstanceStateName ShuttingDown -> ShuttingDown
    com.amazonaws.services.ec2.model.InstanceStateName Terminated -> Terminated
    com.amazonaws.services.ec2.model.InstanceStateName Stopping -> Stopping
    com.amazonaws.services.ec2.model.InstanceStateName Stopped -> Stopped
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.InstanceStateName[] $VALUES -> b
    com.amazonaws.services.ec2.model.InstanceStateName[] values() -> values
    com.amazonaws.services.ec2.model.InstanceStateName valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.InstanceStateName fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.InstanceType -> com.amazonaws.services.ec2.model.InstanceType:
    com.amazonaws.services.ec2.model.InstanceType T1Micro -> T1Micro
    com.amazonaws.services.ec2.model.InstanceType M1Small -> M1Small
    com.amazonaws.services.ec2.model.InstanceType M1Large -> M1Large
    com.amazonaws.services.ec2.model.InstanceType M1Xlarge -> M1Xlarge
    com.amazonaws.services.ec2.model.InstanceType M2Xlarge -> M2Xlarge
    com.amazonaws.services.ec2.model.InstanceType M22xlarge -> M22xlarge
    com.amazonaws.services.ec2.model.InstanceType M24xlarge -> M24xlarge
    com.amazonaws.services.ec2.model.InstanceType C1Medium -> C1Medium
    com.amazonaws.services.ec2.model.InstanceType C1Xlarge -> C1Xlarge
    com.amazonaws.services.ec2.model.InstanceType Cc14xlarge -> Cc14xlarge
    com.amazonaws.services.ec2.model.InstanceType Cg14xlarge -> Cg14xlarge
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.InstanceType[] $VALUES -> b
    com.amazonaws.services.ec2.model.InstanceType[] values() -> values
    com.amazonaws.services.ec2.model.InstanceType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.InstanceType fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.IpPermission -> com.amazonaws.services.ec2.model.IpPermission:
    java.lang.String ipProtocol -> a
    java.lang.Integer fromPort -> b
    java.lang.Integer toPort -> c
    java.util.List userIdGroupPairs -> d
    java.util.List ipRanges -> e
    java.lang.String getIpProtocol() -> getIpProtocol
    void setIpProtocol(java.lang.String) -> setIpProtocol
    com.amazonaws.services.ec2.model.IpPermission withIpProtocol(java.lang.String) -> withIpProtocol
    java.lang.Integer getFromPort() -> getFromPort
    void setFromPort(java.lang.Integer) -> setFromPort
    com.amazonaws.services.ec2.model.IpPermission withFromPort(java.lang.Integer) -> withFromPort
    java.lang.Integer getToPort() -> getToPort
    void setToPort(java.lang.Integer) -> setToPort
    com.amazonaws.services.ec2.model.IpPermission withToPort(java.lang.Integer) -> withToPort
    java.util.List getUserIdGroupPairs() -> getUserIdGroupPairs
    void setUserIdGroupPairs(java.util.Collection) -> setUserIdGroupPairs
    com.amazonaws.services.ec2.model.IpPermission withUserIdGroupPairs(com.amazonaws.services.ec2.model.UserIdGroupPair[]) -> withUserIdGroupPairs
    com.amazonaws.services.ec2.model.IpPermission withUserIdGroupPairs(java.util.Collection) -> withUserIdGroupPairs
    java.util.List getIpRanges() -> getIpRanges
    void setIpRanges(java.util.Collection) -> setIpRanges
    com.amazonaws.services.ec2.model.IpPermission withIpRanges(java.lang.String[]) -> withIpRanges
    com.amazonaws.services.ec2.model.IpPermission withIpRanges(java.util.Collection) -> withIpRanges
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.KeyPair -> com.amazonaws.services.ec2.model.KeyPair:
    java.lang.String keyName -> a
    java.lang.String keyFingerprint -> b
    java.lang.String keyMaterial -> c
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.KeyPair withKeyName(java.lang.String) -> withKeyName
    java.lang.String getKeyFingerprint() -> getKeyFingerprint
    void setKeyFingerprint(java.lang.String) -> setKeyFingerprint
    com.amazonaws.services.ec2.model.KeyPair withKeyFingerprint(java.lang.String) -> withKeyFingerprint
    java.lang.String getKeyMaterial() -> getKeyMaterial
    void setKeyMaterial(java.lang.String) -> setKeyMaterial
    com.amazonaws.services.ec2.model.KeyPair withKeyMaterial(java.lang.String) -> withKeyMaterial
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.KeyPairInfo -> com.amazonaws.services.ec2.model.KeyPairInfo:
    java.lang.String keyName -> a
    java.lang.String keyFingerprint -> b
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.KeyPairInfo withKeyName(java.lang.String) -> withKeyName
    java.lang.String getKeyFingerprint() -> getKeyFingerprint
    void setKeyFingerprint(java.lang.String) -> setKeyFingerprint
    com.amazonaws.services.ec2.model.KeyPairInfo withKeyFingerprint(java.lang.String) -> withKeyFingerprint
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.LaunchPermission -> com.amazonaws.services.ec2.model.LaunchPermission:
    java.lang.String userId -> a
    java.lang.String group -> b
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    com.amazonaws.services.ec2.model.LaunchPermission withUserId(java.lang.String) -> withUserId
    java.lang.String getGroup() -> getGroup
    void setGroup(java.lang.String) -> setGroup
    com.amazonaws.services.ec2.model.LaunchPermission withGroup(java.lang.String) -> withGroup
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.LaunchPermissionModifications -> com.amazonaws.services.ec2.model.LaunchPermissionModifications:
    java.util.List add -> a
    java.util.List remove -> b
    java.util.List getAdd() -> getAdd
    void setAdd(java.util.Collection) -> setAdd
    com.amazonaws.services.ec2.model.LaunchPermissionModifications withAdd(com.amazonaws.services.ec2.model.LaunchPermission[]) -> withAdd
    com.amazonaws.services.ec2.model.LaunchPermissionModifications withAdd(java.util.Collection) -> withAdd
    java.util.List getRemove() -> getRemove
    void setRemove(java.util.Collection) -> setRemove
    com.amazonaws.services.ec2.model.LaunchPermissionModifications withRemove(com.amazonaws.services.ec2.model.LaunchPermission[]) -> withRemove
    com.amazonaws.services.ec2.model.LaunchPermissionModifications withRemove(java.util.Collection) -> withRemove
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.LaunchSpecification -> com.amazonaws.services.ec2.model.LaunchSpecification:
    java.lang.String imageId -> a
    java.lang.String keyName -> b
    java.util.List allSecurityGroups -> c
    java.util.List securityGroups -> d
    java.lang.String userData -> e
    java.lang.String addressingType -> f
    java.lang.String instanceType -> g
    com.amazonaws.services.ec2.model.SpotPlacement placement -> h
    java.lang.String kernelId -> i
    java.lang.String ramdiskId -> j
    java.util.List blockDeviceMappings -> k
    java.lang.Boolean monitoringEnabled -> l
    java.lang.String subnetId -> m
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.LaunchSpecification withImageId(java.lang.String) -> withImageId
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.LaunchSpecification withKeyName(java.lang.String) -> withKeyName
    java.util.List getAllSecurityGroups() -> getAllSecurityGroups
    void setAllSecurityGroups(java.util.Collection) -> setAllSecurityGroups
    com.amazonaws.services.ec2.model.LaunchSpecification withAllSecurityGroups(com.amazonaws.services.ec2.model.GroupIdentifier[]) -> withAllSecurityGroups
    com.amazonaws.services.ec2.model.LaunchSpecification withAllSecurityGroups(java.util.Collection) -> withAllSecurityGroups
    java.util.List getSecurityGroups() -> getSecurityGroups
    void setSecurityGroups(java.util.Collection) -> setSecurityGroups
    com.amazonaws.services.ec2.model.LaunchSpecification withSecurityGroups(java.lang.String[]) -> withSecurityGroups
    com.amazonaws.services.ec2.model.LaunchSpecification withSecurityGroups(java.util.Collection) -> withSecurityGroups
    java.lang.String getUserData() -> getUserData
    void setUserData(java.lang.String) -> setUserData
    com.amazonaws.services.ec2.model.LaunchSpecification withUserData(java.lang.String) -> withUserData
    java.lang.String getAddressingType() -> getAddressingType
    void setAddressingType(java.lang.String) -> setAddressingType
    com.amazonaws.services.ec2.model.LaunchSpecification withAddressingType(java.lang.String) -> withAddressingType
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.LaunchSpecification withInstanceType(java.lang.String) -> withInstanceType
    com.amazonaws.services.ec2.model.SpotPlacement getPlacement() -> getPlacement
    void setPlacement(com.amazonaws.services.ec2.model.SpotPlacement) -> setPlacement
    com.amazonaws.services.ec2.model.LaunchSpecification withPlacement(com.amazonaws.services.ec2.model.SpotPlacement) -> withPlacement
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.ec2.model.LaunchSpecification withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.ec2.model.LaunchSpecification withRamdiskId(java.lang.String) -> withRamdiskId
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.ec2.model.LaunchSpecification withBlockDeviceMappings(com.amazonaws.services.ec2.model.BlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.ec2.model.LaunchSpecification withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    java.lang.Boolean isMonitoringEnabled() -> isMonitoringEnabled
    void setMonitoringEnabled(java.lang.Boolean) -> setMonitoringEnabled
    com.amazonaws.services.ec2.model.LaunchSpecification withMonitoringEnabled(java.lang.Boolean) -> withMonitoringEnabled
    java.lang.Boolean getMonitoringEnabled() -> getMonitoringEnabled
    java.lang.String getSubnetId() -> getSubnetId
    void setSubnetId(java.lang.String) -> setSubnetId
    com.amazonaws.services.ec2.model.LaunchSpecification withSubnetId(java.lang.String) -> withSubnetId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.License -> com.amazonaws.services.ec2.model.License:
    java.lang.String licenseId -> a
    java.lang.String type -> b
    java.lang.String pool -> c
    java.util.List capacities -> d
    java.util.List tags -> e
    java.lang.String getLicenseId() -> getLicenseId
    void setLicenseId(java.lang.String) -> setLicenseId
    com.amazonaws.services.ec2.model.License withLicenseId(java.lang.String) -> withLicenseId
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    com.amazonaws.services.ec2.model.License withType(java.lang.String) -> withType
    java.lang.String getPool() -> getPool
    void setPool(java.lang.String) -> setPool
    com.amazonaws.services.ec2.model.License withPool(java.lang.String) -> withPool
    java.util.List getCapacities() -> getCapacities
    void setCapacities(java.util.Collection) -> setCapacities
    com.amazonaws.services.ec2.model.License withCapacities(com.amazonaws.services.ec2.model.LicenseCapacity[]) -> withCapacities
    com.amazonaws.services.ec2.model.License withCapacities(java.util.Collection) -> withCapacities
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.License withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.License withTags(java.util.Collection) -> withTags
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.LicenseCapacity -> com.amazonaws.services.ec2.model.LicenseCapacity:
    java.lang.Integer capacity -> a
    java.lang.Integer instanceCapacity -> b
    java.lang.String state -> c
    java.util.Date earliestAllowedDeactivationTime -> d
    java.lang.Integer getCapacity() -> getCapacity
    void setCapacity(java.lang.Integer) -> setCapacity
    com.amazonaws.services.ec2.model.LicenseCapacity withCapacity(java.lang.Integer) -> withCapacity
    java.lang.Integer getInstanceCapacity() -> getInstanceCapacity
    void setInstanceCapacity(java.lang.Integer) -> setInstanceCapacity
    com.amazonaws.services.ec2.model.LicenseCapacity withInstanceCapacity(java.lang.Integer) -> withInstanceCapacity
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.LicenseCapacity withState(java.lang.String) -> withState
    java.util.Date getEarliestAllowedDeactivationTime() -> getEarliestAllowedDeactivationTime
    void setEarliestAllowedDeactivationTime(java.util.Date) -> setEarliestAllowedDeactivationTime
    com.amazonaws.services.ec2.model.LicenseCapacity withEarliestAllowedDeactivationTime(java.util.Date) -> withEarliestAllowedDeactivationTime
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ModifyImageAttributeRequest -> com.amazonaws.services.ec2.model.ModifyImageAttributeRequest:
    java.lang.String imageId -> a
    java.lang.String attribute -> b
    java.lang.String operationType -> c
    java.util.List userIds -> d
    java.util.List userGroups -> e
    java.util.List productCodes -> f
    java.lang.String value -> g
    com.amazonaws.services.ec2.model.LaunchPermissionModifications launchPermission -> h
    java.lang.String description -> i
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withImageId(java.lang.String) -> withImageId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String getOperationType() -> getOperationType
    void setOperationType(java.lang.String) -> setOperationType
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withOperationType(java.lang.String) -> withOperationType
    java.util.List getUserIds() -> getUserIds
    void setUserIds(java.util.Collection) -> setUserIds
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withUserIds(java.lang.String[]) -> withUserIds
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withUserIds(java.util.Collection) -> withUserIds
    java.util.List getUserGroups() -> getUserGroups
    void setUserGroups(java.util.Collection) -> setUserGroups
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withUserGroups(java.lang.String[]) -> withUserGroups
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withUserGroups(java.util.Collection) -> withUserGroups
    java.util.List getProductCodes() -> getProductCodes
    void setProductCodes(java.util.Collection) -> setProductCodes
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withProductCodes(java.lang.String[]) -> withProductCodes
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withProductCodes(java.util.Collection) -> withProductCodes
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withValue(java.lang.String) -> withValue
    com.amazonaws.services.ec2.model.LaunchPermissionModifications getLaunchPermission() -> getLaunchPermission
    void setLaunchPermission(com.amazonaws.services.ec2.model.LaunchPermissionModifications) -> setLaunchPermission
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withLaunchPermission(com.amazonaws.services.ec2.model.LaunchPermissionModifications) -> withLaunchPermission
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.ModifyImageAttributeRequest withDescription(java.lang.String) -> withDescription
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest -> com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest:
    java.lang.String instanceId -> a
    java.lang.String attribute -> b
    java.lang.String value -> c
    java.util.List blockDeviceMappings -> d
    java.lang.Boolean sourceDestCheck -> e
    java.lang.Boolean disableApiTermination -> f
    java.lang.String instanceType -> g
    java.lang.String kernel -> h
    java.lang.String ramdisk -> i
    java.lang.String userData -> j
    java.lang.String instanceInitiatedShutdownBehavior -> k
    java.util.List groups -> l
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withValue(java.lang.String) -> withValue
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withBlockDeviceMappings(com.amazonaws.services.ec2.model.InstanceBlockDeviceMappingSpecification[]) -> withBlockDeviceMappings
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    java.lang.Boolean isSourceDestCheck() -> isSourceDestCheck
    void setSourceDestCheck(java.lang.Boolean) -> setSourceDestCheck
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withSourceDestCheck(java.lang.Boolean) -> withSourceDestCheck
    java.lang.Boolean getSourceDestCheck() -> getSourceDestCheck
    java.lang.Boolean isDisableApiTermination() -> isDisableApiTermination
    void setDisableApiTermination(java.lang.Boolean) -> setDisableApiTermination
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withDisableApiTermination(java.lang.Boolean) -> withDisableApiTermination
    java.lang.Boolean getDisableApiTermination() -> getDisableApiTermination
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withInstanceType(java.lang.String) -> withInstanceType
    java.lang.String getKernel() -> getKernel
    void setKernel(java.lang.String) -> setKernel
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withKernel(java.lang.String) -> withKernel
    java.lang.String getRamdisk() -> getRamdisk
    void setRamdisk(java.lang.String) -> setRamdisk
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withRamdisk(java.lang.String) -> withRamdisk
    java.lang.String getUserData() -> getUserData
    void setUserData(java.lang.String) -> setUserData
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withUserData(java.lang.String) -> withUserData
    java.lang.String getInstanceInitiatedShutdownBehavior() -> getInstanceInitiatedShutdownBehavior
    void setInstanceInitiatedShutdownBehavior(java.lang.String) -> setInstanceInitiatedShutdownBehavior
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withInstanceInitiatedShutdownBehavior(java.lang.String) -> withInstanceInitiatedShutdownBehavior
    java.util.List getGroups() -> getGroups
    void setGroups(java.util.Collection) -> setGroups
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withGroups(java.lang.String[]) -> withGroups
    com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest withGroups(java.util.Collection) -> withGroups
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest -> com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest:
    java.lang.String snapshotId -> a
    java.lang.String attribute -> b
    java.lang.String operationType -> c
    java.util.List userIds -> d
    java.util.List groupNames -> e
    com.amazonaws.services.ec2.model.CreateVolumePermissionModifications createVolumePermission -> f
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String getOperationType() -> getOperationType
    void setOperationType(java.lang.String) -> setOperationType
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest withOperationType(java.lang.String) -> withOperationType
    java.util.List getUserIds() -> getUserIds
    void setUserIds(java.util.Collection) -> setUserIds
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest withUserIds(java.lang.String[]) -> withUserIds
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest withUserIds(java.util.Collection) -> withUserIds
    java.util.List getGroupNames() -> getGroupNames
    void setGroupNames(java.util.Collection) -> setGroupNames
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest withGroupNames(java.lang.String[]) -> withGroupNames
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest withGroupNames(java.util.Collection) -> withGroupNames
    com.amazonaws.services.ec2.model.CreateVolumePermissionModifications getCreateVolumePermission() -> getCreateVolumePermission
    void setCreateVolumePermission(com.amazonaws.services.ec2.model.CreateVolumePermissionModifications) -> setCreateVolumePermission
    com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest withCreateVolumePermission(com.amazonaws.services.ec2.model.CreateVolumePermissionModifications) -> withCreateVolumePermission
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.MonitorInstancesRequest -> com.amazonaws.services.ec2.model.MonitorInstancesRequest:
    java.util.List instanceIds -> a
    java.util.List getInstanceIds() -> getInstanceIds
    void setInstanceIds(java.util.Collection) -> setInstanceIds
    com.amazonaws.services.ec2.model.MonitorInstancesRequest withInstanceIds(java.lang.String[]) -> withInstanceIds
    com.amazonaws.services.ec2.model.MonitorInstancesRequest withInstanceIds(java.util.Collection) -> withInstanceIds
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.MonitorInstancesResult -> com.amazonaws.services.ec2.model.MonitorInstancesResult:
    java.util.List instanceMonitorings -> a
    java.util.List getInstanceMonitorings() -> getInstanceMonitorings
    void setInstanceMonitorings(java.util.Collection) -> setInstanceMonitorings
    com.amazonaws.services.ec2.model.MonitorInstancesResult withInstanceMonitorings(com.amazonaws.services.ec2.model.InstanceMonitoring[]) -> withInstanceMonitorings
    com.amazonaws.services.ec2.model.MonitorInstancesResult withInstanceMonitorings(java.util.Collection) -> withInstanceMonitorings
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Monitoring -> com.amazonaws.services.ec2.model.Monitoring:
    java.lang.String state -> a
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.Monitoring withState(java.lang.String) -> withState
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Placement -> com.amazonaws.services.ec2.model.Placement:
    java.lang.String availabilityZone -> a
    java.lang.String groupName -> b
    java.lang.String tenancy -> c
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.Placement withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.Placement withGroupName(java.lang.String) -> withGroupName
    java.lang.String getTenancy() -> getTenancy
    void setTenancy(java.lang.String) -> setTenancy
    com.amazonaws.services.ec2.model.Placement withTenancy(java.lang.String) -> withTenancy
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.PlacementGroup -> com.amazonaws.services.ec2.model.PlacementGroup:
    java.lang.String groupName -> a
    java.lang.String strategy -> b
    java.lang.String state -> c
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.PlacementGroup withGroupName(java.lang.String) -> withGroupName
    java.lang.String getStrategy() -> getStrategy
    void setStrategy(java.lang.String) -> setStrategy
    com.amazonaws.services.ec2.model.PlacementGroup withStrategy(java.lang.String) -> withStrategy
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.PlacementGroup withState(java.lang.String) -> withState
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.PlacementGroupState -> com.amazonaws.services.ec2.model.PlacementGroupState:
    com.amazonaws.services.ec2.model.PlacementGroupState Pending -> Pending
    com.amazonaws.services.ec2.model.PlacementGroupState Available -> Available
    com.amazonaws.services.ec2.model.PlacementGroupState Deleting -> Deleting
    com.amazonaws.services.ec2.model.PlacementGroupState Deleted -> Deleted
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.PlacementGroupState[] $VALUES -> b
    com.amazonaws.services.ec2.model.PlacementGroupState[] values() -> values
    com.amazonaws.services.ec2.model.PlacementGroupState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.PlacementGroupState fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.PlacementStrategy -> com.amazonaws.services.ec2.model.PlacementStrategy:
    com.amazonaws.services.ec2.model.PlacementStrategy Cluster -> Cluster
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.PlacementStrategy[] $VALUES -> b
    com.amazonaws.services.ec2.model.PlacementStrategy[] values() -> values
    com.amazonaws.services.ec2.model.PlacementStrategy valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.PlacementStrategy fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.ProductCode -> com.amazonaws.services.ec2.model.ProductCode:
    java.lang.String productCodeId -> a
    java.lang.String getProductCodeId() -> getProductCodeId
    void setProductCodeId(java.lang.String) -> setProductCodeId
    com.amazonaws.services.ec2.model.ProductCode withProductCodeId(java.lang.String) -> withProductCodeId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest -> com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest:
    java.lang.String reservedInstancesOfferingId -> a
    java.lang.Integer instanceCount -> b
    java.lang.String getReservedInstancesOfferingId() -> getReservedInstancesOfferingId
    void setReservedInstancesOfferingId(java.lang.String) -> setReservedInstancesOfferingId
    com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest withReservedInstancesOfferingId(java.lang.String) -> withReservedInstancesOfferingId
    java.lang.Integer getInstanceCount() -> getInstanceCount
    void setInstanceCount(java.lang.Integer) -> setInstanceCount
    com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest withInstanceCount(java.lang.Integer) -> withInstanceCount
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingResult -> com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingResult:
    java.lang.String reservedInstancesId -> a
    java.lang.String getReservedInstancesId() -> getReservedInstancesId
    void setReservedInstancesId(java.lang.String) -> setReservedInstancesId
    com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingResult withReservedInstancesId(java.lang.String) -> withReservedInstancesId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.RebootInstancesRequest -> com.amazonaws.services.ec2.model.RebootInstancesRequest:
    java.util.List instanceIds -> a
    java.util.List getInstanceIds() -> getInstanceIds
    void setInstanceIds(java.util.Collection) -> setInstanceIds
    com.amazonaws.services.ec2.model.RebootInstancesRequest withInstanceIds(java.lang.String[]) -> withInstanceIds
    com.amazonaws.services.ec2.model.RebootInstancesRequest withInstanceIds(java.util.Collection) -> withInstanceIds
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Region -> com.amazonaws.services.ec2.model.Region:
    java.lang.String regionName -> a
    java.lang.String endpoint -> b
    java.lang.String getRegionName() -> getRegionName
    void setRegionName(java.lang.String) -> setRegionName
    com.amazonaws.services.ec2.model.Region withRegionName(java.lang.String) -> withRegionName
    java.lang.String getEndpoint() -> getEndpoint
    void setEndpoint(java.lang.String) -> setEndpoint
    com.amazonaws.services.ec2.model.Region withEndpoint(java.lang.String) -> withEndpoint
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.RegisterImageRequest -> com.amazonaws.services.ec2.model.RegisterImageRequest:
    java.lang.String imageLocation -> a
    java.lang.String name -> b
    java.lang.String description -> c
    java.lang.String architecture -> d
    java.lang.String kernelId -> e
    java.lang.String ramdiskId -> f
    java.lang.String rootDeviceName -> g
    java.util.List blockDeviceMappings -> h
    java.lang.String getImageLocation() -> getImageLocation
    void setImageLocation(java.lang.String) -> setImageLocation
    com.amazonaws.services.ec2.model.RegisterImageRequest withImageLocation(java.lang.String) -> withImageLocation
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.ec2.model.RegisterImageRequest withName(java.lang.String) -> withName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.RegisterImageRequest withDescription(java.lang.String) -> withDescription
    java.lang.String getArchitecture() -> getArchitecture
    void setArchitecture(java.lang.String) -> setArchitecture
    com.amazonaws.services.ec2.model.RegisterImageRequest withArchitecture(java.lang.String) -> withArchitecture
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.ec2.model.RegisterImageRequest withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.ec2.model.RegisterImageRequest withRamdiskId(java.lang.String) -> withRamdiskId
    java.lang.String getRootDeviceName() -> getRootDeviceName
    void setRootDeviceName(java.lang.String) -> setRootDeviceName
    com.amazonaws.services.ec2.model.RegisterImageRequest withRootDeviceName(java.lang.String) -> withRootDeviceName
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.ec2.model.RegisterImageRequest withBlockDeviceMappings(com.amazonaws.services.ec2.model.BlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.ec2.model.RegisterImageRequest withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.RegisterImageResult -> com.amazonaws.services.ec2.model.RegisterImageResult:
    java.lang.String imageId -> a
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.RegisterImageResult withImageId(java.lang.String) -> withImageId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ReleaseAddressRequest -> com.amazonaws.services.ec2.model.ReleaseAddressRequest:
    java.lang.String publicIp -> a
    java.lang.String allocationId -> b
    java.lang.String getPublicIp() -> getPublicIp
    void setPublicIp(java.lang.String) -> setPublicIp
    com.amazonaws.services.ec2.model.ReleaseAddressRequest withPublicIp(java.lang.String) -> withPublicIp
    java.lang.String getAllocationId() -> getAllocationId
    void setAllocationId(java.lang.String) -> setAllocationId
    com.amazonaws.services.ec2.model.ReleaseAddressRequest withAllocationId(java.lang.String) -> withAllocationId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.RequestSpotInstancesRequest -> com.amazonaws.services.ec2.model.RequestSpotInstancesRequest:
    java.lang.String spotPrice -> a
    java.lang.Integer instanceCount -> b
    java.lang.String type -> c
    java.util.Date validFrom -> d
    java.util.Date validUntil -> e
    java.lang.String launchGroup -> f
    java.lang.String availabilityZoneGroup -> g
    com.amazonaws.services.ec2.model.LaunchSpecification launchSpecification -> h
    java.lang.String getSpotPrice() -> getSpotPrice
    void setSpotPrice(java.lang.String) -> setSpotPrice
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest withSpotPrice(java.lang.String) -> withSpotPrice
    java.lang.Integer getInstanceCount() -> getInstanceCount
    void setInstanceCount(java.lang.Integer) -> setInstanceCount
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest withInstanceCount(java.lang.Integer) -> withInstanceCount
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest withType(java.lang.String) -> withType
    java.util.Date getValidFrom() -> getValidFrom
    void setValidFrom(java.util.Date) -> setValidFrom
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest withValidFrom(java.util.Date) -> withValidFrom
    java.util.Date getValidUntil() -> getValidUntil
    void setValidUntil(java.util.Date) -> setValidUntil
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest withValidUntil(java.util.Date) -> withValidUntil
    java.lang.String getLaunchGroup() -> getLaunchGroup
    void setLaunchGroup(java.lang.String) -> setLaunchGroup
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest withLaunchGroup(java.lang.String) -> withLaunchGroup
    java.lang.String getAvailabilityZoneGroup() -> getAvailabilityZoneGroup
    void setAvailabilityZoneGroup(java.lang.String) -> setAvailabilityZoneGroup
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest withAvailabilityZoneGroup(java.lang.String) -> withAvailabilityZoneGroup
    com.amazonaws.services.ec2.model.LaunchSpecification getLaunchSpecification() -> getLaunchSpecification
    void setLaunchSpecification(com.amazonaws.services.ec2.model.LaunchSpecification) -> setLaunchSpecification
    com.amazonaws.services.ec2.model.RequestSpotInstancesRequest withLaunchSpecification(com.amazonaws.services.ec2.model.LaunchSpecification) -> withLaunchSpecification
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.RequestSpotInstancesResult -> com.amazonaws.services.ec2.model.RequestSpotInstancesResult:
    java.util.List spotInstanceRequests -> a
    java.util.List getSpotInstanceRequests() -> getSpotInstanceRequests
    void setSpotInstanceRequests(java.util.Collection) -> setSpotInstanceRequests
    com.amazonaws.services.ec2.model.RequestSpotInstancesResult withSpotInstanceRequests(com.amazonaws.services.ec2.model.SpotInstanceRequest[]) -> withSpotInstanceRequests
    com.amazonaws.services.ec2.model.RequestSpotInstancesResult withSpotInstanceRequests(java.util.Collection) -> withSpotInstanceRequests
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Reservation -> com.amazonaws.services.ec2.model.Reservation:
    java.lang.String reservationId -> a
    java.lang.String ownerId -> b
    java.lang.String requesterId -> c
    java.util.List groups -> d
    java.util.List groupNames -> e
    java.util.List instances -> f
    java.lang.String getReservationId() -> getReservationId
    void setReservationId(java.lang.String) -> setReservationId
    com.amazonaws.services.ec2.model.Reservation withReservationId(java.lang.String) -> withReservationId
    java.lang.String getOwnerId() -> getOwnerId
    void setOwnerId(java.lang.String) -> setOwnerId
    com.amazonaws.services.ec2.model.Reservation withOwnerId(java.lang.String) -> withOwnerId
    java.lang.String getRequesterId() -> getRequesterId
    void setRequesterId(java.lang.String) -> setRequesterId
    com.amazonaws.services.ec2.model.Reservation withRequesterId(java.lang.String) -> withRequesterId
    java.util.List getGroups() -> getGroups
    void setGroups(java.util.Collection) -> setGroups
    com.amazonaws.services.ec2.model.Reservation withGroups(com.amazonaws.services.ec2.model.GroupIdentifier[]) -> withGroups
    com.amazonaws.services.ec2.model.Reservation withGroups(java.util.Collection) -> withGroups
    java.util.List getGroupNames() -> getGroupNames
    void setGroupNames(java.util.Collection) -> setGroupNames
    com.amazonaws.services.ec2.model.Reservation withGroupNames(java.lang.String[]) -> withGroupNames
    com.amazonaws.services.ec2.model.Reservation withGroupNames(java.util.Collection) -> withGroupNames
    java.util.List getInstances() -> getInstances
    void setInstances(java.util.Collection) -> setInstances
    com.amazonaws.services.ec2.model.Reservation withInstances(com.amazonaws.services.ec2.model.Instance[]) -> withInstances
    com.amazonaws.services.ec2.model.Reservation withInstances(java.util.Collection) -> withInstances
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ReservedInstances -> com.amazonaws.services.ec2.model.ReservedInstances:
    java.lang.String reservedInstancesId -> a
    java.lang.String instanceType -> b
    java.lang.String availabilityZone -> c
    java.util.Date start -> d
    java.lang.Long duration -> e
    java.lang.Float usagePrice -> f
    java.lang.Float fixedPrice -> g
    java.lang.Integer instanceCount -> h
    java.lang.String productDescription -> i
    java.lang.String state -> j
    java.util.List tags -> k
    java.lang.String instanceTenancy -> l
    java.lang.String currencyCode -> m
    java.lang.String getReservedInstancesId() -> getReservedInstancesId
    void setReservedInstancesId(java.lang.String) -> setReservedInstancesId
    com.amazonaws.services.ec2.model.ReservedInstances withReservedInstancesId(java.lang.String) -> withReservedInstancesId
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.ReservedInstances withInstanceType(java.lang.String) -> withInstanceType
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.ReservedInstances withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.util.Date getStart() -> getStart
    void setStart(java.util.Date) -> setStart
    com.amazonaws.services.ec2.model.ReservedInstances withStart(java.util.Date) -> withStart
    java.lang.Long getDuration() -> getDuration
    void setDuration(java.lang.Long) -> setDuration
    com.amazonaws.services.ec2.model.ReservedInstances withDuration(java.lang.Long) -> withDuration
    java.lang.Float getUsagePrice() -> getUsagePrice
    void setUsagePrice(java.lang.Float) -> setUsagePrice
    com.amazonaws.services.ec2.model.ReservedInstances withUsagePrice(java.lang.Float) -> withUsagePrice
    java.lang.Float getFixedPrice() -> getFixedPrice
    void setFixedPrice(java.lang.Float) -> setFixedPrice
    com.amazonaws.services.ec2.model.ReservedInstances withFixedPrice(java.lang.Float) -> withFixedPrice
    java.lang.Integer getInstanceCount() -> getInstanceCount
    void setInstanceCount(java.lang.Integer) -> setInstanceCount
    com.amazonaws.services.ec2.model.ReservedInstances withInstanceCount(java.lang.Integer) -> withInstanceCount
    java.lang.String getProductDescription() -> getProductDescription
    void setProductDescription(java.lang.String) -> setProductDescription
    com.amazonaws.services.ec2.model.ReservedInstances withProductDescription(java.lang.String) -> withProductDescription
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.ReservedInstances withState(java.lang.String) -> withState
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.ReservedInstances withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.ReservedInstances withTags(java.util.Collection) -> withTags
    java.lang.String getInstanceTenancy() -> getInstanceTenancy
    void setInstanceTenancy(java.lang.String) -> setInstanceTenancy
    com.amazonaws.services.ec2.model.ReservedInstances withInstanceTenancy(java.lang.String) -> withInstanceTenancy
    java.lang.String getCurrencyCode() -> getCurrencyCode
    void setCurrencyCode(java.lang.String) -> setCurrencyCode
    com.amazonaws.services.ec2.model.ReservedInstances withCurrencyCode(java.lang.String) -> withCurrencyCode
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ReservedInstancesOffering -> com.amazonaws.services.ec2.model.ReservedInstancesOffering:
    java.lang.String reservedInstancesOfferingId -> a
    java.lang.String instanceType -> b
    java.lang.String availabilityZone -> c
    java.lang.Long duration -> d
    java.lang.Float usagePrice -> e
    java.lang.Float fixedPrice -> f
    java.lang.String productDescription -> g
    java.lang.String instanceTenancy -> h
    java.lang.String currencyCode -> i
    java.lang.String getReservedInstancesOfferingId() -> getReservedInstancesOfferingId
    void setReservedInstancesOfferingId(java.lang.String) -> setReservedInstancesOfferingId
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withReservedInstancesOfferingId(java.lang.String) -> withReservedInstancesOfferingId
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withInstanceType(java.lang.String) -> withInstanceType
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.Long getDuration() -> getDuration
    void setDuration(java.lang.Long) -> setDuration
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withDuration(java.lang.Long) -> withDuration
    java.lang.Float getUsagePrice() -> getUsagePrice
    void setUsagePrice(java.lang.Float) -> setUsagePrice
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withUsagePrice(java.lang.Float) -> withUsagePrice
    java.lang.Float getFixedPrice() -> getFixedPrice
    void setFixedPrice(java.lang.Float) -> setFixedPrice
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withFixedPrice(java.lang.Float) -> withFixedPrice
    java.lang.String getProductDescription() -> getProductDescription
    void setProductDescription(java.lang.String) -> setProductDescription
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withProductDescription(java.lang.String) -> withProductDescription
    java.lang.String getInstanceTenancy() -> getInstanceTenancy
    void setInstanceTenancy(java.lang.String) -> setInstanceTenancy
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withInstanceTenancy(java.lang.String) -> withInstanceTenancy
    java.lang.String getCurrencyCode() -> getCurrencyCode
    void setCurrencyCode(java.lang.String) -> setCurrencyCode
    com.amazonaws.services.ec2.model.ReservedInstancesOffering withCurrencyCode(java.lang.String) -> withCurrencyCode
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ResetImageAttributeRequest -> com.amazonaws.services.ec2.model.ResetImageAttributeRequest:
    java.lang.String imageId -> a
    java.lang.String attribute -> b
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.ResetImageAttributeRequest withImageId(java.lang.String) -> withImageId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.ResetImageAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest -> com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest:
    java.lang.String instanceId -> a
    java.lang.String attribute -> b
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest -> com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest:
    java.lang.String snapshotId -> a
    java.lang.String attribute -> b
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.String getAttribute() -> getAttribute
    void setAttribute(java.lang.String) -> setAttribute
    com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest withAttribute(java.lang.String) -> withAttribute
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.ResourceType -> com.amazonaws.services.ec2.model.ResourceType:
    com.amazonaws.services.ec2.model.ResourceType CustomerGateway -> CustomerGateway
    com.amazonaws.services.ec2.model.ResourceType DhcpOptions -> DhcpOptions
    com.amazonaws.services.ec2.model.ResourceType Image -> Image
    com.amazonaws.services.ec2.model.ResourceType Instance -> Instance
    com.amazonaws.services.ec2.model.ResourceType Snapshot -> Snapshot
    com.amazonaws.services.ec2.model.ResourceType SpotInstancesRequest -> SpotInstancesRequest
    com.amazonaws.services.ec2.model.ResourceType Subnet -> Subnet
    com.amazonaws.services.ec2.model.ResourceType Volume -> Volume
    com.amazonaws.services.ec2.model.ResourceType Vpc -> Vpc
    com.amazonaws.services.ec2.model.ResourceType VpnConnection -> VpnConnection
    com.amazonaws.services.ec2.model.ResourceType VpnGateway -> VpnGateway
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.ResourceType[] $VALUES -> b
    com.amazonaws.services.ec2.model.ResourceType[] values() -> values
    com.amazonaws.services.ec2.model.ResourceType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.ResourceType fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest -> com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest:
    java.lang.String groupName -> a
    java.lang.String groupId -> b
    java.lang.String sourceSecurityGroupName -> c
    java.lang.String sourceSecurityGroupOwnerId -> d
    java.lang.String ipProtocol -> e
    java.lang.Integer fromPort -> f
    java.lang.Integer toPort -> g
    java.lang.String cidrIp -> h
    java.util.List ipPermissions -> i
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withGroupName(java.lang.String) -> withGroupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withGroupId(java.lang.String) -> withGroupId
    java.lang.String getSourceSecurityGroupName() -> getSourceSecurityGroupName
    void setSourceSecurityGroupName(java.lang.String) -> setSourceSecurityGroupName
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withSourceSecurityGroupName(java.lang.String) -> withSourceSecurityGroupName
    java.lang.String getSourceSecurityGroupOwnerId() -> getSourceSecurityGroupOwnerId
    void setSourceSecurityGroupOwnerId(java.lang.String) -> setSourceSecurityGroupOwnerId
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withSourceSecurityGroupOwnerId(java.lang.String) -> withSourceSecurityGroupOwnerId
    java.lang.String getIpProtocol() -> getIpProtocol
    void setIpProtocol(java.lang.String) -> setIpProtocol
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withIpProtocol(java.lang.String) -> withIpProtocol
    java.lang.Integer getFromPort() -> getFromPort
    void setFromPort(java.lang.Integer) -> setFromPort
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withFromPort(java.lang.Integer) -> withFromPort
    java.lang.Integer getToPort() -> getToPort
    void setToPort(java.lang.Integer) -> setToPort
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withToPort(java.lang.Integer) -> withToPort
    java.lang.String getCidrIp() -> getCidrIp
    void setCidrIp(java.lang.String) -> setCidrIp
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withCidrIp(java.lang.String) -> withCidrIp
    java.util.List getIpPermissions() -> getIpPermissions
    void setIpPermissions(java.util.Collection) -> setIpPermissions
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withIpPermissions(com.amazonaws.services.ec2.model.IpPermission[]) -> withIpPermissions
    com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest withIpPermissions(java.util.Collection) -> withIpPermissions
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.RuleAction -> com.amazonaws.services.ec2.model.RuleAction:
    com.amazonaws.services.ec2.model.RuleAction Allow -> Allow
    com.amazonaws.services.ec2.model.RuleAction Deny -> Deny
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.RuleAction[] $VALUES -> b
    com.amazonaws.services.ec2.model.RuleAction[] values() -> values
    com.amazonaws.services.ec2.model.RuleAction valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.RuleAction fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.RunInstancesRequest -> com.amazonaws.services.ec2.model.RunInstancesRequest:
    java.lang.String imageId -> a
    java.lang.Integer minCount -> b
    java.lang.Integer maxCount -> c
    java.lang.String keyName -> d
    java.util.List securityGroups -> e
    java.util.List securityGroupIds -> f
    java.lang.String userData -> g
    java.lang.String instanceType -> h
    com.amazonaws.services.ec2.model.Placement placement -> i
    java.lang.String kernelId -> j
    java.lang.String ramdiskId -> k
    java.util.List blockDeviceMappings -> l
    java.lang.Boolean monitoring -> m
    java.lang.String subnetId -> n
    java.lang.Boolean disableApiTermination -> o
    java.lang.String instanceInitiatedShutdownBehavior -> p
    com.amazonaws.services.ec2.model.InstanceLicenseSpecification license -> q
    java.lang.String privateIpAddress -> r
    java.lang.String clientToken -> s
    java.lang.String additionalInfo -> t
    java.lang.String getImageId() -> getImageId
    void setImageId(java.lang.String) -> setImageId
    com.amazonaws.services.ec2.model.RunInstancesRequest withImageId(java.lang.String) -> withImageId
    java.lang.Integer getMinCount() -> getMinCount
    void setMinCount(java.lang.Integer) -> setMinCount
    com.amazonaws.services.ec2.model.RunInstancesRequest withMinCount(java.lang.Integer) -> withMinCount
    java.lang.Integer getMaxCount() -> getMaxCount
    void setMaxCount(java.lang.Integer) -> setMaxCount
    com.amazonaws.services.ec2.model.RunInstancesRequest withMaxCount(java.lang.Integer) -> withMaxCount
    java.lang.String getKeyName() -> getKeyName
    void setKeyName(java.lang.String) -> setKeyName
    com.amazonaws.services.ec2.model.RunInstancesRequest withKeyName(java.lang.String) -> withKeyName
    java.util.List getSecurityGroups() -> getSecurityGroups
    void setSecurityGroups(java.util.Collection) -> setSecurityGroups
    com.amazonaws.services.ec2.model.RunInstancesRequest withSecurityGroups(java.lang.String[]) -> withSecurityGroups
    com.amazonaws.services.ec2.model.RunInstancesRequest withSecurityGroups(java.util.Collection) -> withSecurityGroups
    java.util.List getSecurityGroupIds() -> getSecurityGroupIds
    void setSecurityGroupIds(java.util.Collection) -> setSecurityGroupIds
    com.amazonaws.services.ec2.model.RunInstancesRequest withSecurityGroupIds(java.lang.String[]) -> withSecurityGroupIds
    com.amazonaws.services.ec2.model.RunInstancesRequest withSecurityGroupIds(java.util.Collection) -> withSecurityGroupIds
    java.lang.String getUserData() -> getUserData
    void setUserData(java.lang.String) -> setUserData
    com.amazonaws.services.ec2.model.RunInstancesRequest withUserData(java.lang.String) -> withUserData
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.RunInstancesRequest withInstanceType(java.lang.String) -> withInstanceType
    com.amazonaws.services.ec2.model.Placement getPlacement() -> getPlacement
    void setPlacement(com.amazonaws.services.ec2.model.Placement) -> setPlacement
    com.amazonaws.services.ec2.model.RunInstancesRequest withPlacement(com.amazonaws.services.ec2.model.Placement) -> withPlacement
    java.lang.String getKernelId() -> getKernelId
    void setKernelId(java.lang.String) -> setKernelId
    com.amazonaws.services.ec2.model.RunInstancesRequest withKernelId(java.lang.String) -> withKernelId
    java.lang.String getRamdiskId() -> getRamdiskId
    void setRamdiskId(java.lang.String) -> setRamdiskId
    com.amazonaws.services.ec2.model.RunInstancesRequest withRamdiskId(java.lang.String) -> withRamdiskId
    java.util.List getBlockDeviceMappings() -> getBlockDeviceMappings
    void setBlockDeviceMappings(java.util.Collection) -> setBlockDeviceMappings
    com.amazonaws.services.ec2.model.RunInstancesRequest withBlockDeviceMappings(com.amazonaws.services.ec2.model.BlockDeviceMapping[]) -> withBlockDeviceMappings
    com.amazonaws.services.ec2.model.RunInstancesRequest withBlockDeviceMappings(java.util.Collection) -> withBlockDeviceMappings
    java.lang.Boolean isMonitoring() -> isMonitoring
    void setMonitoring(java.lang.Boolean) -> setMonitoring
    com.amazonaws.services.ec2.model.RunInstancesRequest withMonitoring(java.lang.Boolean) -> withMonitoring
    java.lang.Boolean getMonitoring() -> getMonitoring
    java.lang.String getSubnetId() -> getSubnetId
    void setSubnetId(java.lang.String) -> setSubnetId
    com.amazonaws.services.ec2.model.RunInstancesRequest withSubnetId(java.lang.String) -> withSubnetId
    java.lang.Boolean isDisableApiTermination() -> isDisableApiTermination
    void setDisableApiTermination(java.lang.Boolean) -> setDisableApiTermination
    com.amazonaws.services.ec2.model.RunInstancesRequest withDisableApiTermination(java.lang.Boolean) -> withDisableApiTermination
    java.lang.Boolean getDisableApiTermination() -> getDisableApiTermination
    java.lang.String getInstanceInitiatedShutdownBehavior() -> getInstanceInitiatedShutdownBehavior
    void setInstanceInitiatedShutdownBehavior(java.lang.String) -> setInstanceInitiatedShutdownBehavior
    com.amazonaws.services.ec2.model.RunInstancesRequest withInstanceInitiatedShutdownBehavior(java.lang.String) -> withInstanceInitiatedShutdownBehavior
    com.amazonaws.services.ec2.model.InstanceLicenseSpecification getLicense() -> getLicense
    void setLicense(com.amazonaws.services.ec2.model.InstanceLicenseSpecification) -> setLicense
    com.amazonaws.services.ec2.model.RunInstancesRequest withLicense(com.amazonaws.services.ec2.model.InstanceLicenseSpecification) -> withLicense
    java.lang.String getPrivateIpAddress() -> getPrivateIpAddress
    void setPrivateIpAddress(java.lang.String) -> setPrivateIpAddress
    com.amazonaws.services.ec2.model.RunInstancesRequest withPrivateIpAddress(java.lang.String) -> withPrivateIpAddress
    java.lang.String getClientToken() -> getClientToken
    void setClientToken(java.lang.String) -> setClientToken
    com.amazonaws.services.ec2.model.RunInstancesRequest withClientToken(java.lang.String) -> withClientToken
    java.lang.String getAdditionalInfo() -> getAdditionalInfo
    void setAdditionalInfo(java.lang.String) -> setAdditionalInfo
    com.amazonaws.services.ec2.model.RunInstancesRequest withAdditionalInfo(java.lang.String) -> withAdditionalInfo
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.RunInstancesResult -> com.amazonaws.services.ec2.model.RunInstancesResult:
    com.amazonaws.services.ec2.model.Reservation reservation -> a
    com.amazonaws.services.ec2.model.Reservation getReservation() -> getReservation
    void setReservation(com.amazonaws.services.ec2.model.Reservation) -> setReservation
    com.amazonaws.services.ec2.model.RunInstancesResult withReservation(com.amazonaws.services.ec2.model.Reservation) -> withReservation
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.S3Storage -> com.amazonaws.services.ec2.model.S3Storage:
    java.lang.String bucket -> a
    java.lang.String prefix -> b
    java.lang.String aWSAccessKeyId -> c
    java.lang.String uploadPolicy -> d
    java.lang.String uploadPolicySignature -> e
    java.lang.String getBucket() -> getBucket
    void setBucket(java.lang.String) -> setBucket
    com.amazonaws.services.ec2.model.S3Storage withBucket(java.lang.String) -> withBucket
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    com.amazonaws.services.ec2.model.S3Storage withPrefix(java.lang.String) -> withPrefix
    java.lang.String getAWSAccessKeyId() -> getAWSAccessKeyId
    void setAWSAccessKeyId(java.lang.String) -> setAWSAccessKeyId
    com.amazonaws.services.ec2.model.S3Storage withAWSAccessKeyId(java.lang.String) -> withAWSAccessKeyId
    java.lang.String getUploadPolicy() -> getUploadPolicy
    void setUploadPolicy(java.lang.String) -> setUploadPolicy
    com.amazonaws.services.ec2.model.S3Storage withUploadPolicy(java.lang.String) -> withUploadPolicy
    java.lang.String getUploadPolicySignature() -> getUploadPolicySignature
    void setUploadPolicySignature(java.lang.String) -> setUploadPolicySignature
    com.amazonaws.services.ec2.model.S3Storage withUploadPolicySignature(java.lang.String) -> withUploadPolicySignature
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.SecurityGroup -> com.amazonaws.services.ec2.model.SecurityGroup:
    java.lang.String ownerId -> a
    java.lang.String groupName -> b
    java.lang.String groupId -> c
    java.lang.String description -> d
    java.util.List ipPermissions -> e
    java.util.List ipPermissionsEgress -> f
    java.lang.String vpcId -> g
    java.util.List tags -> h
    java.lang.String getOwnerId() -> getOwnerId
    void setOwnerId(java.lang.String) -> setOwnerId
    com.amazonaws.services.ec2.model.SecurityGroup withOwnerId(java.lang.String) -> withOwnerId
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.SecurityGroup withGroupName(java.lang.String) -> withGroupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    com.amazonaws.services.ec2.model.SecurityGroup withGroupId(java.lang.String) -> withGroupId
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.SecurityGroup withDescription(java.lang.String) -> withDescription
    java.util.List getIpPermissions() -> getIpPermissions
    void setIpPermissions(java.util.Collection) -> setIpPermissions
    com.amazonaws.services.ec2.model.SecurityGroup withIpPermissions(com.amazonaws.services.ec2.model.IpPermission[]) -> withIpPermissions
    com.amazonaws.services.ec2.model.SecurityGroup withIpPermissions(java.util.Collection) -> withIpPermissions
    java.util.List getIpPermissionsEgress() -> getIpPermissionsEgress
    void setIpPermissionsEgress(java.util.Collection) -> setIpPermissionsEgress
    com.amazonaws.services.ec2.model.SecurityGroup withIpPermissionsEgress(com.amazonaws.services.ec2.model.IpPermission[]) -> withIpPermissionsEgress
    com.amazonaws.services.ec2.model.SecurityGroup withIpPermissionsEgress(java.util.Collection) -> withIpPermissionsEgress
    java.lang.String getVpcId() -> getVpcId
    void setVpcId(java.lang.String) -> setVpcId
    com.amazonaws.services.ec2.model.SecurityGroup withVpcId(java.lang.String) -> withVpcId
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.SecurityGroup withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.SecurityGroup withTags(java.util.Collection) -> withTags
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Snapshot -> com.amazonaws.services.ec2.model.Snapshot:
    java.lang.String snapshotId -> a
    java.lang.String volumeId -> b
    java.lang.String state -> c
    java.util.Date startTime -> d
    java.lang.String progress -> e
    java.lang.String ownerId -> f
    java.lang.String description -> g
    java.lang.Integer volumeSize -> h
    java.lang.String ownerAlias -> i
    java.util.List tags -> j
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.Snapshot withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.Snapshot withVolumeId(java.lang.String) -> withVolumeId
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.Snapshot withState(java.lang.String) -> withState
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    com.amazonaws.services.ec2.model.Snapshot withStartTime(java.util.Date) -> withStartTime
    java.lang.String getProgress() -> getProgress
    void setProgress(java.lang.String) -> setProgress
    com.amazonaws.services.ec2.model.Snapshot withProgress(java.lang.String) -> withProgress
    java.lang.String getOwnerId() -> getOwnerId
    void setOwnerId(java.lang.String) -> setOwnerId
    com.amazonaws.services.ec2.model.Snapshot withOwnerId(java.lang.String) -> withOwnerId
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.ec2.model.Snapshot withDescription(java.lang.String) -> withDescription
    java.lang.Integer getVolumeSize() -> getVolumeSize
    void setVolumeSize(java.lang.Integer) -> setVolumeSize
    com.amazonaws.services.ec2.model.Snapshot withVolumeSize(java.lang.Integer) -> withVolumeSize
    java.lang.String getOwnerAlias() -> getOwnerAlias
    void setOwnerAlias(java.lang.String) -> setOwnerAlias
    com.amazonaws.services.ec2.model.Snapshot withOwnerAlias(java.lang.String) -> withOwnerAlias
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.Snapshot withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.Snapshot withTags(java.util.Collection) -> withTags
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.SnapshotState -> com.amazonaws.services.ec2.model.SnapshotState:
    com.amazonaws.services.ec2.model.SnapshotState Pending -> Pending
    com.amazonaws.services.ec2.model.SnapshotState Completed -> Completed
    com.amazonaws.services.ec2.model.SnapshotState Error -> Error
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.SnapshotState[] $VALUES -> b
    com.amazonaws.services.ec2.model.SnapshotState[] values() -> values
    com.amazonaws.services.ec2.model.SnapshotState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.SnapshotState fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.SpotDatafeedSubscription -> com.amazonaws.services.ec2.model.SpotDatafeedSubscription:
    java.lang.String ownerId -> a
    java.lang.String bucket -> b
    java.lang.String prefix -> c
    java.lang.String state -> d
    com.amazonaws.services.ec2.model.SpotInstanceStateFault fault -> e
    java.lang.String getOwnerId() -> getOwnerId
    void setOwnerId(java.lang.String) -> setOwnerId
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription withOwnerId(java.lang.String) -> withOwnerId
    java.lang.String getBucket() -> getBucket
    void setBucket(java.lang.String) -> setBucket
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription withBucket(java.lang.String) -> withBucket
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription withPrefix(java.lang.String) -> withPrefix
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription withState(java.lang.String) -> withState
    com.amazonaws.services.ec2.model.SpotInstanceStateFault getFault() -> getFault
    void setFault(com.amazonaws.services.ec2.model.SpotInstanceStateFault) -> setFault
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription withFault(com.amazonaws.services.ec2.model.SpotInstanceStateFault) -> withFault
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.SpotInstanceRequest -> com.amazonaws.services.ec2.model.SpotInstanceRequest:
    java.lang.String spotInstanceRequestId -> a
    java.lang.String spotPrice -> b
    java.lang.String type -> c
    java.lang.String state -> d
    com.amazonaws.services.ec2.model.SpotInstanceStateFault fault -> e
    java.util.Date validFrom -> f
    java.util.Date validUntil -> g
    java.lang.String launchGroup -> h
    java.lang.String availabilityZoneGroup -> i
    com.amazonaws.services.ec2.model.LaunchSpecification launchSpecification -> j
    java.lang.String instanceId -> k
    java.util.Date createTime -> l
    java.lang.String productDescription -> m
    java.util.List tags -> n
    java.lang.String launchedAvailabilityZone -> o
    java.lang.String getSpotInstanceRequestId() -> getSpotInstanceRequestId
    void setSpotInstanceRequestId(java.lang.String) -> setSpotInstanceRequestId
    com.amazonaws.services.ec2.model.SpotInstanceRequest withSpotInstanceRequestId(java.lang.String) -> withSpotInstanceRequestId
    java.lang.String getSpotPrice() -> getSpotPrice
    void setSpotPrice(java.lang.String) -> setSpotPrice
    com.amazonaws.services.ec2.model.SpotInstanceRequest withSpotPrice(java.lang.String) -> withSpotPrice
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    com.amazonaws.services.ec2.model.SpotInstanceRequest withType(java.lang.String) -> withType
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.SpotInstanceRequest withState(java.lang.String) -> withState
    com.amazonaws.services.ec2.model.SpotInstanceStateFault getFault() -> getFault
    void setFault(com.amazonaws.services.ec2.model.SpotInstanceStateFault) -> setFault
    com.amazonaws.services.ec2.model.SpotInstanceRequest withFault(com.amazonaws.services.ec2.model.SpotInstanceStateFault) -> withFault
    java.util.Date getValidFrom() -> getValidFrom
    void setValidFrom(java.util.Date) -> setValidFrom
    com.amazonaws.services.ec2.model.SpotInstanceRequest withValidFrom(java.util.Date) -> withValidFrom
    java.util.Date getValidUntil() -> getValidUntil
    void setValidUntil(java.util.Date) -> setValidUntil
    com.amazonaws.services.ec2.model.SpotInstanceRequest withValidUntil(java.util.Date) -> withValidUntil
    java.lang.String getLaunchGroup() -> getLaunchGroup
    void setLaunchGroup(java.lang.String) -> setLaunchGroup
    com.amazonaws.services.ec2.model.SpotInstanceRequest withLaunchGroup(java.lang.String) -> withLaunchGroup
    java.lang.String getAvailabilityZoneGroup() -> getAvailabilityZoneGroup
    void setAvailabilityZoneGroup(java.lang.String) -> setAvailabilityZoneGroup
    com.amazonaws.services.ec2.model.SpotInstanceRequest withAvailabilityZoneGroup(java.lang.String) -> withAvailabilityZoneGroup
    com.amazonaws.services.ec2.model.LaunchSpecification getLaunchSpecification() -> getLaunchSpecification
    void setLaunchSpecification(com.amazonaws.services.ec2.model.LaunchSpecification) -> setLaunchSpecification
    com.amazonaws.services.ec2.model.SpotInstanceRequest withLaunchSpecification(com.amazonaws.services.ec2.model.LaunchSpecification) -> withLaunchSpecification
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.SpotInstanceRequest withInstanceId(java.lang.String) -> withInstanceId
    java.util.Date getCreateTime() -> getCreateTime
    void setCreateTime(java.util.Date) -> setCreateTime
    com.amazonaws.services.ec2.model.SpotInstanceRequest withCreateTime(java.util.Date) -> withCreateTime
    java.lang.String getProductDescription() -> getProductDescription
    void setProductDescription(java.lang.String) -> setProductDescription
    com.amazonaws.services.ec2.model.SpotInstanceRequest withProductDescription(java.lang.String) -> withProductDescription
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.SpotInstanceRequest withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.SpotInstanceRequest withTags(java.util.Collection) -> withTags
    java.lang.String getLaunchedAvailabilityZone() -> getLaunchedAvailabilityZone
    void setLaunchedAvailabilityZone(java.lang.String) -> setLaunchedAvailabilityZone
    com.amazonaws.services.ec2.model.SpotInstanceRequest withLaunchedAvailabilityZone(java.lang.String) -> withLaunchedAvailabilityZone
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.SpotInstanceStateFault -> com.amazonaws.services.ec2.model.SpotInstanceStateFault:
    java.lang.String code -> a
    java.lang.String message -> b
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    com.amazonaws.services.ec2.model.SpotInstanceStateFault withCode(java.lang.String) -> withCode
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    com.amazonaws.services.ec2.model.SpotInstanceStateFault withMessage(java.lang.String) -> withMessage
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.SpotInstanceType -> com.amazonaws.services.ec2.model.SpotInstanceType:
    com.amazonaws.services.ec2.model.SpotInstanceType OneTime -> OneTime
    com.amazonaws.services.ec2.model.SpotInstanceType Persistent -> Persistent
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.SpotInstanceType[] $VALUES -> b
    com.amazonaws.services.ec2.model.SpotInstanceType[] values() -> values
    com.amazonaws.services.ec2.model.SpotInstanceType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.SpotInstanceType fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.SpotPlacement -> com.amazonaws.services.ec2.model.SpotPlacement:
    java.lang.String availabilityZone -> a
    java.lang.String groupName -> b
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.SpotPlacement withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.SpotPlacement withGroupName(java.lang.String) -> withGroupName
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.SpotPrice -> com.amazonaws.services.ec2.model.SpotPrice:
    java.lang.String instanceType -> a
    java.lang.String productDescription -> b
    java.lang.String spotPrice -> c
    java.util.Date timestamp -> d
    java.lang.String availabilityZone -> e
    java.lang.String getInstanceType() -> getInstanceType
    void setInstanceType(java.lang.String) -> setInstanceType
    com.amazonaws.services.ec2.model.SpotPrice withInstanceType(java.lang.String) -> withInstanceType
    java.lang.String getProductDescription() -> getProductDescription
    void setProductDescription(java.lang.String) -> setProductDescription
    com.amazonaws.services.ec2.model.SpotPrice withProductDescription(java.lang.String) -> withProductDescription
    java.lang.String getSpotPrice() -> getSpotPrice
    void setSpotPrice(java.lang.String) -> setSpotPrice
    com.amazonaws.services.ec2.model.SpotPrice withSpotPrice(java.lang.String) -> withSpotPrice
    java.util.Date getTimestamp() -> getTimestamp
    void setTimestamp(java.util.Date) -> setTimestamp
    com.amazonaws.services.ec2.model.SpotPrice withTimestamp(java.util.Date) -> withTimestamp
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.SpotPrice withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.StartInstancesRequest -> com.amazonaws.services.ec2.model.StartInstancesRequest:
    java.util.List instanceIds -> a
    java.util.List getInstanceIds() -> getInstanceIds
    void setInstanceIds(java.util.Collection) -> setInstanceIds
    com.amazonaws.services.ec2.model.StartInstancesRequest withInstanceIds(java.lang.String[]) -> withInstanceIds
    com.amazonaws.services.ec2.model.StartInstancesRequest withInstanceIds(java.util.Collection) -> withInstanceIds
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.StartInstancesResult -> com.amazonaws.services.ec2.model.StartInstancesResult:
    java.util.List startingInstances -> a
    java.util.List getStartingInstances() -> getStartingInstances
    void setStartingInstances(java.util.Collection) -> setStartingInstances
    com.amazonaws.services.ec2.model.StartInstancesResult withStartingInstances(com.amazonaws.services.ec2.model.InstanceStateChange[]) -> withStartingInstances
    com.amazonaws.services.ec2.model.StartInstancesResult withStartingInstances(java.util.Collection) -> withStartingInstances
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.StateReason -> com.amazonaws.services.ec2.model.StateReason:
    java.lang.String code -> a
    java.lang.String message -> b
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    com.amazonaws.services.ec2.model.StateReason withCode(java.lang.String) -> withCode
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    com.amazonaws.services.ec2.model.StateReason withMessage(java.lang.String) -> withMessage
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.StopInstancesRequest -> com.amazonaws.services.ec2.model.StopInstancesRequest:
    java.util.List instanceIds -> a
    java.lang.Boolean force -> b
    java.util.List getInstanceIds() -> getInstanceIds
    void setInstanceIds(java.util.Collection) -> setInstanceIds
    com.amazonaws.services.ec2.model.StopInstancesRequest withInstanceIds(java.lang.String[]) -> withInstanceIds
    com.amazonaws.services.ec2.model.StopInstancesRequest withInstanceIds(java.util.Collection) -> withInstanceIds
    java.lang.Boolean isForce() -> isForce
    void setForce(java.lang.Boolean) -> setForce
    com.amazonaws.services.ec2.model.StopInstancesRequest withForce(java.lang.Boolean) -> withForce
    java.lang.Boolean getForce() -> getForce
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.StopInstancesResult -> com.amazonaws.services.ec2.model.StopInstancesResult:
    java.util.List stoppingInstances -> a
    java.util.List getStoppingInstances() -> getStoppingInstances
    void setStoppingInstances(java.util.Collection) -> setStoppingInstances
    com.amazonaws.services.ec2.model.StopInstancesResult withStoppingInstances(com.amazonaws.services.ec2.model.InstanceStateChange[]) -> withStoppingInstances
    com.amazonaws.services.ec2.model.StopInstancesResult withStoppingInstances(java.util.Collection) -> withStoppingInstances
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Storage -> com.amazonaws.services.ec2.model.Storage:
    com.amazonaws.services.ec2.model.S3Storage s3 -> a
    com.amazonaws.services.ec2.model.S3Storage getS3() -> getS3
    void setS3(com.amazonaws.services.ec2.model.S3Storage) -> setS3
    com.amazonaws.services.ec2.model.Storage withS3(com.amazonaws.services.ec2.model.S3Storage) -> withS3
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.Tag -> com.amazonaws.services.ec2.model.Tag:
    java.lang.String key -> a
    java.lang.String value -> b
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.ec2.model.Tag withKey(java.lang.String) -> withKey
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.ec2.model.Tag withValue(java.lang.String) -> withValue
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.TagDescription -> com.amazonaws.services.ec2.model.TagDescription:
    java.lang.String resourceId -> a
    java.lang.String resourceType -> b
    java.lang.String key -> c
    java.lang.String value -> d
    java.lang.String getResourceId() -> getResourceId
    void setResourceId(java.lang.String) -> setResourceId
    com.amazonaws.services.ec2.model.TagDescription withResourceId(java.lang.String) -> withResourceId
    java.lang.String getResourceType() -> getResourceType
    void setResourceType(java.lang.String) -> setResourceType
    com.amazonaws.services.ec2.model.TagDescription withResourceType(java.lang.String) -> withResourceType
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.ec2.model.TagDescription withKey(java.lang.String) -> withKey
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.ec2.model.TagDescription withValue(java.lang.String) -> withValue
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.TerminateInstancesRequest -> com.amazonaws.services.ec2.model.TerminateInstancesRequest:
    java.util.List instanceIds -> a
    java.util.List getInstanceIds() -> getInstanceIds
    void setInstanceIds(java.util.Collection) -> setInstanceIds
    com.amazonaws.services.ec2.model.TerminateInstancesRequest withInstanceIds(java.lang.String[]) -> withInstanceIds
    com.amazonaws.services.ec2.model.TerminateInstancesRequest withInstanceIds(java.util.Collection) -> withInstanceIds
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.TerminateInstancesResult -> com.amazonaws.services.ec2.model.TerminateInstancesResult:
    java.util.List terminatingInstances -> a
    java.util.List getTerminatingInstances() -> getTerminatingInstances
    void setTerminatingInstances(java.util.Collection) -> setTerminatingInstances
    com.amazonaws.services.ec2.model.TerminateInstancesResult withTerminatingInstances(com.amazonaws.services.ec2.model.InstanceStateChange[]) -> withTerminatingInstances
    com.amazonaws.services.ec2.model.TerminateInstancesResult withTerminatingInstances(java.util.Collection) -> withTerminatingInstances
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.UnmonitorInstancesRequest -> com.amazonaws.services.ec2.model.UnmonitorInstancesRequest:
    java.util.List instanceIds -> a
    java.util.List getInstanceIds() -> getInstanceIds
    void setInstanceIds(java.util.Collection) -> setInstanceIds
    com.amazonaws.services.ec2.model.UnmonitorInstancesRequest withInstanceIds(java.lang.String[]) -> withInstanceIds
    com.amazonaws.services.ec2.model.UnmonitorInstancesRequest withInstanceIds(java.util.Collection) -> withInstanceIds
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.UnmonitorInstancesResult -> com.amazonaws.services.ec2.model.UnmonitorInstancesResult:
    java.util.List instanceMonitorings -> a
    java.util.List getInstanceMonitorings() -> getInstanceMonitorings
    void setInstanceMonitorings(java.util.Collection) -> setInstanceMonitorings
    com.amazonaws.services.ec2.model.UnmonitorInstancesResult withInstanceMonitorings(com.amazonaws.services.ec2.model.InstanceMonitoring[]) -> withInstanceMonitorings
    com.amazonaws.services.ec2.model.UnmonitorInstancesResult withInstanceMonitorings(java.util.Collection) -> withInstanceMonitorings
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.UserIdGroupPair -> com.amazonaws.services.ec2.model.UserIdGroupPair:
    java.lang.String userId -> a
    java.lang.String groupName -> b
    java.lang.String groupId -> c
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    com.amazonaws.services.ec2.model.UserIdGroupPair withUserId(java.lang.String) -> withUserId
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.ec2.model.UserIdGroupPair withGroupName(java.lang.String) -> withGroupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    com.amazonaws.services.ec2.model.UserIdGroupPair withGroupId(java.lang.String) -> withGroupId
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.VirtualizationType -> com.amazonaws.services.ec2.model.VirtualizationType:
    com.amazonaws.services.ec2.model.VirtualizationType Hvm -> Hvm
    com.amazonaws.services.ec2.model.VirtualizationType Paravirtual -> Paravirtual
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.VirtualizationType[] $VALUES -> b
    com.amazonaws.services.ec2.model.VirtualizationType[] values() -> values
    com.amazonaws.services.ec2.model.VirtualizationType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.VirtualizationType fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.Volume -> com.amazonaws.services.ec2.model.Volume:
    java.lang.String volumeId -> a
    java.lang.Integer size -> b
    java.lang.String snapshotId -> c
    java.lang.String availabilityZone -> d
    java.lang.String state -> e
    java.util.Date createTime -> f
    java.util.List attachments -> g
    java.util.List tags -> h
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.Volume withVolumeId(java.lang.String) -> withVolumeId
    java.lang.Integer getSize() -> getSize
    void setSize(java.lang.Integer) -> setSize
    com.amazonaws.services.ec2.model.Volume withSize(java.lang.Integer) -> withSize
    java.lang.String getSnapshotId() -> getSnapshotId
    void setSnapshotId(java.lang.String) -> setSnapshotId
    com.amazonaws.services.ec2.model.Volume withSnapshotId(java.lang.String) -> withSnapshotId
    java.lang.String getAvailabilityZone() -> getAvailabilityZone
    void setAvailabilityZone(java.lang.String) -> setAvailabilityZone
    com.amazonaws.services.ec2.model.Volume withAvailabilityZone(java.lang.String) -> withAvailabilityZone
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.Volume withState(java.lang.String) -> withState
    java.util.Date getCreateTime() -> getCreateTime
    void setCreateTime(java.util.Date) -> setCreateTime
    com.amazonaws.services.ec2.model.Volume withCreateTime(java.util.Date) -> withCreateTime
    java.util.List getAttachments() -> getAttachments
    void setAttachments(java.util.Collection) -> setAttachments
    com.amazonaws.services.ec2.model.Volume withAttachments(com.amazonaws.services.ec2.model.VolumeAttachment[]) -> withAttachments
    com.amazonaws.services.ec2.model.Volume withAttachments(java.util.Collection) -> withAttachments
    java.util.List getTags() -> getTags
    void setTags(java.util.Collection) -> setTags
    com.amazonaws.services.ec2.model.Volume withTags(com.amazonaws.services.ec2.model.Tag[]) -> withTags
    com.amazonaws.services.ec2.model.Volume withTags(java.util.Collection) -> withTags
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.VolumeAttachment -> com.amazonaws.services.ec2.model.VolumeAttachment:
    java.lang.String volumeId -> a
    java.lang.String instanceId -> b
    java.lang.String device -> c
    java.lang.String state -> d
    java.util.Date attachTime -> e
    java.lang.Boolean deleteOnTermination -> f
    java.lang.String getVolumeId() -> getVolumeId
    void setVolumeId(java.lang.String) -> setVolumeId
    com.amazonaws.services.ec2.model.VolumeAttachment withVolumeId(java.lang.String) -> withVolumeId
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.ec2.model.VolumeAttachment withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getDevice() -> getDevice
    void setDevice(java.lang.String) -> setDevice
    com.amazonaws.services.ec2.model.VolumeAttachment withDevice(java.lang.String) -> withDevice
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.ec2.model.VolumeAttachment withState(java.lang.String) -> withState
    java.util.Date getAttachTime() -> getAttachTime
    void setAttachTime(java.util.Date) -> setAttachTime
    com.amazonaws.services.ec2.model.VolumeAttachment withAttachTime(java.util.Date) -> withAttachTime
    java.lang.Boolean isDeleteOnTermination() -> isDeleteOnTermination
    void setDeleteOnTermination(java.lang.Boolean) -> setDeleteOnTermination
    com.amazonaws.services.ec2.model.VolumeAttachment withDeleteOnTermination(java.lang.Boolean) -> withDeleteOnTermination
    java.lang.Boolean getDeleteOnTermination() -> getDeleteOnTermination
    java.lang.String toString() -> toString
com.amazonaws.services.ec2.model.VolumeAttachmentState -> com.amazonaws.services.ec2.model.VolumeAttachmentState:
    com.amazonaws.services.ec2.model.VolumeAttachmentState Attaching -> Attaching
    com.amazonaws.services.ec2.model.VolumeAttachmentState Attached -> Attached
    com.amazonaws.services.ec2.model.VolumeAttachmentState Detaching -> Detaching
    com.amazonaws.services.ec2.model.VolumeAttachmentState Detached -> Detached
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.VolumeAttachmentState[] $VALUES -> b
    com.amazonaws.services.ec2.model.VolumeAttachmentState[] values() -> values
    com.amazonaws.services.ec2.model.VolumeAttachmentState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.VolumeAttachmentState fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.VolumeState -> com.amazonaws.services.ec2.model.VolumeState:
    com.amazonaws.services.ec2.model.VolumeState Creating -> Creating
    com.amazonaws.services.ec2.model.VolumeState Available -> Available
    com.amazonaws.services.ec2.model.VolumeState InUse -> InUse
    com.amazonaws.services.ec2.model.VolumeState Deleting -> Deleting
    com.amazonaws.services.ec2.model.VolumeState Error -> Error
    java.lang.String value -> a
    com.amazonaws.services.ec2.model.VolumeState[] $VALUES -> b
    com.amazonaws.services.ec2.model.VolumeState[] values() -> values
    com.amazonaws.services.ec2.model.VolumeState valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.ec2.model.VolumeState fromValue(java.lang.String) -> fromValue
com.amazonaws.services.ec2.model.package-info -> com.amazonaws.services.ec2.model.package-info:
com.amazonaws.services.ec2.model.transform.ActivateLicenseRequestMarshaller -> com.amazonaws.services.ec2.model.transform.a:
com.amazonaws.services.ec2.model.transform.AddressStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.al:
    com.amazonaws.services.ec2.model.transform.AddressStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Address unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.AddressStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.AllocateAddressRequestMarshaller -> com.amazonaws.services.ec2.model.transform.cf:
com.amazonaws.services.ec2.model.transform.AllocateAddressResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.cd:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.AssociateAddressRequestMarshaller -> com.amazonaws.services.ec2.model.transform.c:
com.amazonaws.services.ec2.model.transform.AssociateAddressResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ce:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.AttachVolumeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bK:
com.amazonaws.services.ec2.model.transform.AttachVolumeResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bG:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.AuthorizeSecurityGroupIngressRequestMarshaller -> com.amazonaws.services.ec2.model.transform.x:
com.amazonaws.services.ec2.model.transform.AvailabilityZoneStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.I:
    com.amazonaws.services.ec2.model.transform.AvailabilityZoneStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.AvailabilityZone unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.AvailabilityZoneStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.BlockDeviceMappingStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ag:
    com.amazonaws.services.ec2.model.transform.BlockDeviceMappingStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.BlockDeviceMapping unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.BlockDeviceMappingStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.BundleInstanceRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ax:
com.amazonaws.services.ec2.model.transform.BundleInstanceResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aT:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.BundleTaskErrorStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bg:
    com.amazonaws.services.ec2.model.transform.BundleTaskErrorStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.BundleTaskError unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.BundleTaskErrorStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.BundleTaskStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.t:
    com.amazonaws.services.ec2.model.transform.BundleTaskStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.BundleTask unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.BundleTaskStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CancelBundleTaskRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aD:
com.amazonaws.services.ec2.model.transform.CancelBundleTaskResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ao:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CancelSpotInstanceRequestsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bu:
com.amazonaws.services.ec2.model.transform.CancelSpotInstanceRequestsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.h:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CancelledSpotInstanceRequestStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.H:
    com.amazonaws.services.ec2.model.transform.CancelledSpotInstanceRequestStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.CancelledSpotInstanceRequest unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.CancelledSpotInstanceRequestStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ConfirmProductInstanceRequestMarshaller -> com.amazonaws.services.ec2.model.transform.as:
com.amazonaws.services.ec2.model.transform.ConfirmProductInstanceResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bI:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CreateImageRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aG:
com.amazonaws.services.ec2.model.transform.CreateImageResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.F:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CreateKeyPairRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ah:
com.amazonaws.services.ec2.model.transform.CreateKeyPairResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aV:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CreatePlacementGroupRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bS:
com.amazonaws.services.ec2.model.transform.CreateSecurityGroupRequestMarshaller -> com.amazonaws.services.ec2.model.transform.J:
com.amazonaws.services.ec2.model.transform.CreateSecurityGroupResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bJ:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CreateSnapshotRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aQ:
com.amazonaws.services.ec2.model.transform.CreateSnapshotResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.av:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CreateSpotDatafeedSubscriptionRequestMarshaller -> com.amazonaws.services.ec2.model.transform.d:
com.amazonaws.services.ec2.model.transform.CreateSpotDatafeedSubscriptionResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aZ:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CreateTagsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aY:
com.amazonaws.services.ec2.model.transform.CreateVolumePermissionStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aS:
    com.amazonaws.services.ec2.model.transform.CreateVolumePermissionStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.CreateVolumePermission unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.CreateVolumePermissionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.CreateVolumeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ch:
com.amazonaws.services.ec2.model.transform.CreateVolumeResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.at:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DeactivateLicenseRequestMarshaller -> com.amazonaws.services.ec2.model.transform.cj:
com.amazonaws.services.ec2.model.transform.DeleteKeyPairRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bN:
com.amazonaws.services.ec2.model.transform.DeletePlacementGroupRequestMarshaller -> com.amazonaws.services.ec2.model.transform.j:
com.amazonaws.services.ec2.model.transform.DeleteSecurityGroupRequestMarshaller -> com.amazonaws.services.ec2.model.transform.Z:
com.amazonaws.services.ec2.model.transform.DeleteSnapshotRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bs:
com.amazonaws.services.ec2.model.transform.DeleteSpotDatafeedSubscriptionRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bL:
com.amazonaws.services.ec2.model.transform.DeleteTagsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bk:
com.amazonaws.services.ec2.model.transform.DeleteVolumeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aX:
com.amazonaws.services.ec2.model.transform.DeregisterImageRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ae:
com.amazonaws.services.ec2.model.transform.DescribeAddressesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bw:
com.amazonaws.services.ec2.model.transform.DescribeAddressesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bR:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeAvailabilityZonesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aq:
com.amazonaws.services.ec2.model.transform.DescribeAvailabilityZonesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.o:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeBundleTasksRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ca:
com.amazonaws.services.ec2.model.transform.DescribeBundleTasksResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aR:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeImageAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.by:
com.amazonaws.services.ec2.model.transform.DescribeImageAttributeResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bd:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeImagesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.am:
com.amazonaws.services.ec2.model.transform.DescribeImagesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.az:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeInstanceAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aW:
com.amazonaws.services.ec2.model.transform.DescribeInstanceAttributeResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bv:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.Q:
com.amazonaws.services.ec2.model.transform.DescribeInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ac:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeKeyPairsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bl:
com.amazonaws.services.ec2.model.transform.DescribeKeyPairsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bo:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeLicensesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ay:
com.amazonaws.services.ec2.model.transform.DescribeLicensesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.V:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribePlacementGroupsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.s:
com.amazonaws.services.ec2.model.transform.DescribePlacementGroupsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bp:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeRegionsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bB:
com.amazonaws.services.ec2.model.transform.DescribeRegionsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.w:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeReservedInstancesOfferingsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bz:
com.amazonaws.services.ec2.model.transform.DescribeReservedInstancesOfferingsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ab:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeReservedInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aN:
com.amazonaws.services.ec2.model.transform.DescribeReservedInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bm:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeSecurityGroupsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.N:
com.amazonaws.services.ec2.model.transform.DescribeSecurityGroupsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bq:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeSnapshotAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.T:
com.amazonaws.services.ec2.model.transform.DescribeSnapshotAttributeResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.E:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeSnapshotsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bQ:
com.amazonaws.services.ec2.model.transform.DescribeSnapshotsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.be:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeSpotDatafeedSubscriptionRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bW:
com.amazonaws.services.ec2.model.transform.DescribeSpotDatafeedSubscriptionResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bE:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeSpotInstanceRequestsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bj:
com.amazonaws.services.ec2.model.transform.DescribeSpotInstanceRequestsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aH:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeSpotPriceHistoryRequestMarshaller -> com.amazonaws.services.ec2.model.transform.D:
com.amazonaws.services.ec2.model.transform.DescribeSpotPriceHistoryResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ap:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeTagsRequestMarshaller -> com.amazonaws.services.ec2.model.transform.W:
com.amazonaws.services.ec2.model.transform.DescribeTagsResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bZ:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DescribeVolumesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bH:
com.amazonaws.services.ec2.model.transform.DescribeVolumesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ad:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DetachVolumeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ci:
com.amazonaws.services.ec2.model.transform.DetachVolumeResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.cb:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.DisassociateAddressRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aM:
com.amazonaws.services.ec2.model.transform.EC2RequestHandler -> com.amazonaws.services.ec2.model.transform.EC2RequestHandler:
    void beforeRequest(com.amazonaws.Request) -> beforeRequest
    void afterResponse(com.amazonaws.Request,java.lang.Object,com.amazonaws.util.TimingInfo) -> afterResponse
    void populateReservationSecurityGroupNames(com.amazonaws.services.ec2.model.Reservation) -> a
    void populateLaunchSpecificationSecurityGroupNames(com.amazonaws.services.ec2.model.LaunchSpecification) -> a
com.amazonaws.services.ec2.model.transform.EbsBlockDeviceStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aJ:
    com.amazonaws.services.ec2.model.transform.EbsBlockDeviceStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.EbsBlockDevice unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.EbsBlockDeviceStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.EbsInstanceBlockDeviceStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bx:
    com.amazonaws.services.ec2.model.transform.EbsInstanceBlockDeviceStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.EbsInstanceBlockDevice unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.EbsInstanceBlockDeviceStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.GetConsoleOutputRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bF:
com.amazonaws.services.ec2.model.transform.GetConsoleOutputResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bh:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.GetPasswordDataRequestMarshaller -> com.amazonaws.services.ec2.model.transform.b:
com.amazonaws.services.ec2.model.transform.GetPasswordDataResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bi:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.GroupIdentifierStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aC:
    com.amazonaws.services.ec2.model.transform.GroupIdentifierStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.GroupIdentifier unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.GroupIdentifierStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ImageAttributeStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bX:
    com.amazonaws.services.ec2.model.transform.ImageAttributeStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.ImageAttribute unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.ImageAttributeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ImageStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.k:
    com.amazonaws.services.ec2.model.transform.ImageStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Image unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.ImageStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ImportKeyPairRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ar:
com.amazonaws.services.ec2.model.transform.ImportKeyPairResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.C:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.InstanceAttributeStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.cc:
    com.amazonaws.services.ec2.model.transform.InstanceAttributeStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.InstanceAttribute unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.InstanceAttributeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.InstanceBlockDeviceMappingStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aK:
    com.amazonaws.services.ec2.model.transform.InstanceBlockDeviceMappingStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.InstanceBlockDeviceMappingStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.InstanceLicenseStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.f:
    com.amazonaws.services.ec2.model.transform.InstanceLicenseStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.InstanceLicense unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.InstanceLicenseStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.InstanceMonitoringStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.e:
    com.amazonaws.services.ec2.model.transform.InstanceMonitoringStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.InstanceMonitoring unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.InstanceMonitoringStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.InstanceStateChangeStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bA:
    com.amazonaws.services.ec2.model.transform.InstanceStateChangeStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.InstanceStateChange unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.InstanceStateChangeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.InstanceStateStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aj:
    com.amazonaws.services.ec2.model.transform.InstanceStateStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.InstanceState unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.InstanceStateStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.InstanceStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.m:
    com.amazonaws.services.ec2.model.transform.InstanceStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Instance unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.InstanceStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.IpPermissionStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.Y:
    com.amazonaws.services.ec2.model.transform.IpPermissionStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.IpPermission unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.IpPermissionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.KeyPairInfoStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.L:
    com.amazonaws.services.ec2.model.transform.KeyPairInfoStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.KeyPairInfo unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.KeyPairInfoStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.KeyPairStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.af:
    com.amazonaws.services.ec2.model.transform.KeyPairStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.KeyPair unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.KeyPairStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.LaunchPermissionStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bY:
    com.amazonaws.services.ec2.model.transform.LaunchPermissionStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.LaunchPermission unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.LaunchPermissionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.LaunchSpecificationStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.U:
    com.amazonaws.services.ec2.model.transform.LaunchSpecificationStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.LaunchSpecification unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.LaunchSpecificationStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.LicenseCapacityStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.au:
    com.amazonaws.services.ec2.model.transform.LicenseCapacityStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.LicenseCapacity unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.LicenseCapacityStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.LicenseStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.A:
    com.amazonaws.services.ec2.model.transform.LicenseStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.License unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.LicenseStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ModifyImageAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aB:
com.amazonaws.services.ec2.model.transform.ModifyInstanceAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.K:
com.amazonaws.services.ec2.model.transform.ModifySnapshotAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aF:
com.amazonaws.services.ec2.model.transform.MonitorInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bn:
com.amazonaws.services.ec2.model.transform.MonitorInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.i:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.MonitoringStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.z:
    com.amazonaws.services.ec2.model.transform.MonitoringStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Monitoring unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.MonitoringStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.PlacementGroupStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bC:
    com.amazonaws.services.ec2.model.transform.PlacementGroupStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.PlacementGroup unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.PlacementGroupStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.PlacementStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bD:
    com.amazonaws.services.ec2.model.transform.PlacementStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Placement unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.PlacementStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ProductCodeStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bb:
    com.amazonaws.services.ec2.model.transform.ProductCodeStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.ProductCode unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.ProductCodeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.PurchaseReservedInstancesOfferingRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bV:
com.amazonaws.services.ec2.model.transform.PurchaseReservedInstancesOfferingResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.p:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.RebootInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.ba:
com.amazonaws.services.ec2.model.transform.RegionStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ai:
    com.amazonaws.services.ec2.model.transform.RegionStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Region unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.RegionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.RegisterImageRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aI:
com.amazonaws.services.ec2.model.transform.RegisterImageResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aa:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ReleaseAddressRequestMarshaller -> com.amazonaws.services.ec2.model.transform.P:
com.amazonaws.services.ec2.model.transform.RequestSpotInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.S:
com.amazonaws.services.ec2.model.transform.RequestSpotInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.v:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ReservationStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aA:
    com.amazonaws.services.ec2.model.transform.ReservationStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Reservation unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.ReservationStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ReservedInstancesOfferingStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aE:
    com.amazonaws.services.ec2.model.transform.ReservedInstancesOfferingStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.ReservedInstancesOffering unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.ReservedInstancesOfferingStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ReservedInstancesStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bt:
    com.amazonaws.services.ec2.model.transform.ReservedInstancesStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.ReservedInstances unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.ReservedInstancesStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.ResetImageAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.an:
com.amazonaws.services.ec2.model.transform.ResetInstanceAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.g:
com.amazonaws.services.ec2.model.transform.ResetSnapshotAttributeRequestMarshaller -> com.amazonaws.services.ec2.model.transform.O:
com.amazonaws.services.ec2.model.transform.RevokeSecurityGroupIngressRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aP:
com.amazonaws.services.ec2.model.transform.RunInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aO:
com.amazonaws.services.ec2.model.transform.RunInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.G:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.S3StorageStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.n:
    com.amazonaws.services.ec2.model.transform.S3StorageStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.S3Storage unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.S3StorageStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.SecurityGroupStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aw:
    com.amazonaws.services.ec2.model.transform.SecurityGroupStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.SecurityGroup unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.SecurityGroupStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.SnapshotStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.u:
    com.amazonaws.services.ec2.model.transform.SnapshotStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Snapshot unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.SnapshotStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.SpotDatafeedSubscriptionStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.X:
    com.amazonaws.services.ec2.model.transform.SpotDatafeedSubscriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.SpotDatafeedSubscription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.SpotDatafeedSubscriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.SpotInstanceRequestStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.r:
    com.amazonaws.services.ec2.model.transform.SpotInstanceRequestStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.SpotInstanceRequest unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.SpotInstanceRequestStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.SpotInstanceStateFaultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.cg:
    com.amazonaws.services.ec2.model.transform.SpotInstanceStateFaultStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.SpotInstanceStateFault unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.SpotInstanceStateFaultStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.SpotPlacementStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bf:
    com.amazonaws.services.ec2.model.transform.SpotPlacementStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.SpotPlacement unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.SpotPlacementStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.SpotPriceStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.q:
    com.amazonaws.services.ec2.model.transform.SpotPriceStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.SpotPrice unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.SpotPriceStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.StartInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bO:
com.amazonaws.services.ec2.model.transform.StartInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.ak:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.StateReasonStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bT:
    com.amazonaws.services.ec2.model.transform.StateReasonStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.StateReason unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.StateReasonStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.StopInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.aU:
com.amazonaws.services.ec2.model.transform.StopInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.aL:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.StorageStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.R:
    com.amazonaws.services.ec2.model.transform.StorageStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Storage unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.StorageStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.TagDescriptionStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bM:
    com.amazonaws.services.ec2.model.transform.TagDescriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.TagDescription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.TagDescriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.TagStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bc:
    com.amazonaws.services.ec2.model.transform.TagStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Tag unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.TagStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.TerminateInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.br:
com.amazonaws.services.ec2.model.transform.TerminateInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.B:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.UnmonitorInstancesRequestMarshaller -> com.amazonaws.services.ec2.model.transform.bU:
com.amazonaws.services.ec2.model.transform.UnmonitorInstancesResultStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.M:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.UserIdGroupPairStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.y:
    com.amazonaws.services.ec2.model.transform.UserIdGroupPairStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.UserIdGroupPair unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.UserIdGroupPairStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.VolumeAttachmentStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.l:
    com.amazonaws.services.ec2.model.transform.VolumeAttachmentStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.VolumeAttachment unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.VolumeAttachmentStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.model.transform.VolumeStaxUnmarshaller -> com.amazonaws.services.ec2.model.transform.bP:
    com.amazonaws.services.ec2.model.transform.VolumeStaxUnmarshaller instance -> a
    com.amazonaws.services.ec2.model.Volume unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.ec2.model.transform.VolumeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.ec2.package-info -> com.amazonaws.services.ec2.package-info:
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancing -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancing:
    void setEndpoint(java.lang.String) -> setEndpoint
    com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckResult configureHealthCheck(com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest) -> configureHealthCheck
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerResult setLoadBalancerPoliciesForBackendServer(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest) -> setLoadBalancerPoliciesForBackendServer
    void setLoadBalancerListenerSSLCertificate(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest) -> setLoadBalancerListenerSSLCertificate
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerResult registerInstancesWithLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest) -> registerInstancesWithLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerResult setLoadBalancerPoliciesOfListener(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest) -> setLoadBalancerPoliciesOfListener
    void deleteLoadBalancerListeners(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest) -> deleteLoadBalancerListeners
    com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyResult createLBCookieStickinessPolicy(com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest) -> createLBCookieStickinessPolicy
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult describeLoadBalancerPolicies(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest) -> describeLoadBalancerPolicies
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest) -> describeLoadBalancerPolicyTypes
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerResult disableAvailabilityZonesForLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest) -> disableAvailabilityZonesForLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerResult createLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest) -> createLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerResult enableAvailabilityZonesForLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest) -> enableAvailabilityZonesForLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyResult createLoadBalancerPolicy(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest) -> createLoadBalancerPolicy
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerResult deregisterInstancesFromLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest) -> deregisterInstancesFromLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyResult createAppCookieStickinessPolicy(com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest) -> createAppCookieStickinessPolicy
    void deleteLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest) -> deleteLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyResult deleteLoadBalancerPolicy(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest) -> deleteLoadBalancerPolicy
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthResult describeInstanceHealth(com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest) -> describeInstanceHealth
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult describeLoadBalancers(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest) -> describeLoadBalancers
    void createLoadBalancerListeners(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest) -> createLoadBalancerListeners
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult describeLoadBalancerPolicies() -> describeLoadBalancerPolicies
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes() -> describeLoadBalancerPolicyTypes
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult describeLoadBalancers() -> describeLoadBalancers
    void shutdown() -> shutdown
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsync -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsync:
    java.util.concurrent.Future configureHealthCheckAsync(com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest) -> configureHealthCheckAsync
    java.util.concurrent.Future setLoadBalancerPoliciesForBackendServerAsync(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest) -> setLoadBalancerPoliciesForBackendServerAsync
    java.util.concurrent.Future setLoadBalancerListenerSSLCertificateAsync(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest) -> setLoadBalancerListenerSSLCertificateAsync
    java.util.concurrent.Future registerInstancesWithLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest) -> registerInstancesWithLoadBalancerAsync
    java.util.concurrent.Future setLoadBalancerPoliciesOfListenerAsync(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest) -> setLoadBalancerPoliciesOfListenerAsync
    java.util.concurrent.Future deleteLoadBalancerListenersAsync(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest) -> deleteLoadBalancerListenersAsync
    java.util.concurrent.Future createLBCookieStickinessPolicyAsync(com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest) -> createLBCookieStickinessPolicyAsync
    java.util.concurrent.Future describeLoadBalancerPoliciesAsync(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest) -> describeLoadBalancerPoliciesAsync
    java.util.concurrent.Future describeLoadBalancerPolicyTypesAsync(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest) -> describeLoadBalancerPolicyTypesAsync
    java.util.concurrent.Future disableAvailabilityZonesForLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest) -> disableAvailabilityZonesForLoadBalancerAsync
    java.util.concurrent.Future createLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest) -> createLoadBalancerAsync
    java.util.concurrent.Future enableAvailabilityZonesForLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest) -> enableAvailabilityZonesForLoadBalancerAsync
    java.util.concurrent.Future createLoadBalancerPolicyAsync(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest) -> createLoadBalancerPolicyAsync
    java.util.concurrent.Future deregisterInstancesFromLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest) -> deregisterInstancesFromLoadBalancerAsync
    java.util.concurrent.Future createAppCookieStickinessPolicyAsync(com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest) -> createAppCookieStickinessPolicyAsync
    java.util.concurrent.Future deleteLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest) -> deleteLoadBalancerAsync
    java.util.concurrent.Future deleteLoadBalancerPolicyAsync(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest) -> deleteLoadBalancerPolicyAsync
    java.util.concurrent.Future describeInstanceHealthAsync(com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest) -> describeInstanceHealthAsync
    java.util.concurrent.Future describeLoadBalancersAsync(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest) -> describeLoadBalancersAsync
    java.util.concurrent.Future createLoadBalancerListenersAsync(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest) -> createLoadBalancerListenersAsync
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient:
    java.util.concurrent.ExecutorService executorService -> d
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.Future configureHealthCheckAsync(com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest) -> configureHealthCheckAsync
    java.util.concurrent.Future setLoadBalancerPoliciesForBackendServerAsync(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest) -> setLoadBalancerPoliciesForBackendServerAsync
    java.util.concurrent.Future setLoadBalancerListenerSSLCertificateAsync(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest) -> setLoadBalancerListenerSSLCertificateAsync
    java.util.concurrent.Future registerInstancesWithLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest) -> registerInstancesWithLoadBalancerAsync
    java.util.concurrent.Future setLoadBalancerPoliciesOfListenerAsync(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest) -> setLoadBalancerPoliciesOfListenerAsync
    java.util.concurrent.Future deleteLoadBalancerListenersAsync(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest) -> deleteLoadBalancerListenersAsync
    java.util.concurrent.Future createLBCookieStickinessPolicyAsync(com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest) -> createLBCookieStickinessPolicyAsync
    java.util.concurrent.Future describeLoadBalancerPoliciesAsync(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest) -> describeLoadBalancerPoliciesAsync
    java.util.concurrent.Future describeLoadBalancerPolicyTypesAsync(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest) -> describeLoadBalancerPolicyTypesAsync
    java.util.concurrent.Future disableAvailabilityZonesForLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest) -> disableAvailabilityZonesForLoadBalancerAsync
    java.util.concurrent.Future createLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest) -> createLoadBalancerAsync
    java.util.concurrent.Future enableAvailabilityZonesForLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest) -> enableAvailabilityZonesForLoadBalancerAsync
    java.util.concurrent.Future createLoadBalancerPolicyAsync(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest) -> createLoadBalancerPolicyAsync
    java.util.concurrent.Future deregisterInstancesFromLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest) -> deregisterInstancesFromLoadBalancerAsync
    java.util.concurrent.Future createAppCookieStickinessPolicyAsync(com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest) -> createAppCookieStickinessPolicyAsync
    java.util.concurrent.Future deleteLoadBalancerAsync(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest) -> deleteLoadBalancerAsync
    java.util.concurrent.Future deleteLoadBalancerPolicyAsync(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest) -> deleteLoadBalancerPolicyAsync
    java.util.concurrent.Future describeInstanceHealthAsync(com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest) -> describeInstanceHealthAsync
    java.util.concurrent.Future describeLoadBalancersAsync(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest) -> describeLoadBalancersAsync
    java.util.concurrent.Future createLoadBalancerListenersAsync(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest) -> createLoadBalancerListenersAsync
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$1 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$1:
    com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest val$configureHealthCheckRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$10 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$10:
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest val$disableAvailabilityZonesForLoadBalancerRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$11 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$11:
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest val$createLoadBalancerRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$12 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$12:
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest val$enableAvailabilityZonesForLoadBalancerRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$13 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$13:
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest val$createLoadBalancerPolicyRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$14 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$14:
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest val$deregisterInstancesFromLoadBalancerRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$15 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$15:
    com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest val$createAppCookieStickinessPolicyRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$16 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$16:
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest val$deleteLoadBalancerRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$17 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$17:
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest val$deleteLoadBalancerPolicyRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$18 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$18:
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest val$describeInstanceHealthRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$19 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$19:
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest val$describeLoadBalancersRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$2 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$2:
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest val$setLoadBalancerPoliciesForBackendServerRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$20 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$20:
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest val$createLoadBalancerListenersRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$3 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$3:
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest val$setLoadBalancerListenerSSLCertificateRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$4 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$4:
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest val$registerInstancesWithLoadBalancerRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$5 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$5:
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest val$setLoadBalancerPoliciesOfListenerRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$6 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$6:
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest val$deleteLoadBalancerListenersRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$7 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$7:
    com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest val$createLBCookieStickinessPolicyRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$8 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$8:
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest val$describeLoadBalancerPoliciesRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$9 -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient$9:
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest val$describeLoadBalancerPolicyTypesRequest -> a
    com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient this$0 -> b
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient -> com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient:
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> d
    java.util.List exceptionUnmarshallers -> e
    com.amazonaws.auth.QueryStringSigner signer -> f
    void init() -> b
    com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckResult configureHealthCheck(com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest) -> configureHealthCheck
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerResult setLoadBalancerPoliciesForBackendServer(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest) -> setLoadBalancerPoliciesForBackendServer
    void setLoadBalancerListenerSSLCertificate(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest) -> setLoadBalancerListenerSSLCertificate
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerResult registerInstancesWithLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest) -> registerInstancesWithLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerResult setLoadBalancerPoliciesOfListener(com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest) -> setLoadBalancerPoliciesOfListener
    void deleteLoadBalancerListeners(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest) -> deleteLoadBalancerListeners
    com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyResult createLBCookieStickinessPolicy(com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest) -> createLBCookieStickinessPolicy
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult describeLoadBalancerPolicies(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest) -> describeLoadBalancerPolicies
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest) -> describeLoadBalancerPolicyTypes
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerResult disableAvailabilityZonesForLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest) -> disableAvailabilityZonesForLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerResult createLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest) -> createLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerResult enableAvailabilityZonesForLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest) -> enableAvailabilityZonesForLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyResult createLoadBalancerPolicy(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest) -> createLoadBalancerPolicy
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerResult deregisterInstancesFromLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest) -> deregisterInstancesFromLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyResult createAppCookieStickinessPolicy(com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest) -> createAppCookieStickinessPolicy
    void deleteLoadBalancer(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest) -> deleteLoadBalancer
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyResult deleteLoadBalancerPolicy(com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest) -> deleteLoadBalancerPolicy
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthResult describeInstanceHealth(com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest) -> describeInstanceHealth
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult describeLoadBalancers(com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest) -> describeLoadBalancers
    void createLoadBalancerListeners(com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest) -> createLoadBalancerListeners
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult describeLoadBalancerPolicies() -> describeLoadBalancerPolicies
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes() -> describeLoadBalancerPolicyTypes
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult describeLoadBalancers() -> describeLoadBalancers
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller) -> a
com.amazonaws.services.elasticloadbalancing.model.AppCookieStickinessPolicy -> com.amazonaws.services.elasticloadbalancing.model.AppCookieStickinessPolicy:
    java.lang.String policyName -> a
    java.lang.String cookieName -> b
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.elasticloadbalancing.model.AppCookieStickinessPolicy withPolicyName(java.lang.String) -> withPolicyName
    java.lang.String getCookieName() -> getCookieName
    void setCookieName(java.lang.String) -> setCookieName
    com.amazonaws.services.elasticloadbalancing.model.AppCookieStickinessPolicy withCookieName(java.lang.String) -> withCookieName
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.BackendServerDescription -> com.amazonaws.services.elasticloadbalancing.model.BackendServerDescription:
    java.lang.Integer instancePort -> a
    java.util.List policyNames -> b
    java.lang.Integer getInstancePort() -> getInstancePort
    void setInstancePort(java.lang.Integer) -> setInstancePort
    com.amazonaws.services.elasticloadbalancing.model.BackendServerDescription withInstancePort(java.lang.Integer) -> withInstancePort
    java.util.List getPolicyNames() -> getPolicyNames
    void setPolicyNames(java.util.Collection) -> setPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.BackendServerDescription withPolicyNames(java.lang.String[]) -> withPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.BackendServerDescription withPolicyNames(java.util.Collection) -> withPolicyNames
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.Cardinality -> com.amazonaws.services.elasticloadbalancing.model.Cardinality:
    com.amazonaws.services.elasticloadbalancing.model.Cardinality ONE -> ONE
    com.amazonaws.services.elasticloadbalancing.model.Cardinality ZERO_OR_ONE -> ZERO_OR_ONE
    com.amazonaws.services.elasticloadbalancing.model.Cardinality ZERO_OR_MORE -> ZERO_OR_MORE
    com.amazonaws.services.elasticloadbalancing.model.Cardinality ONE_OR_MORE -> ONE_OR_MORE
    java.lang.String value -> a
    com.amazonaws.services.elasticloadbalancing.model.Cardinality[] $VALUES -> b
    com.amazonaws.services.elasticloadbalancing.model.Cardinality[] values() -> values
    com.amazonaws.services.elasticloadbalancing.model.Cardinality valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.elasticloadbalancing.model.Cardinality fromValue(java.lang.String) -> fromValue
com.amazonaws.services.elasticloadbalancing.model.CertificateNotFoundException -> com.amazonaws.services.elasticloadbalancing.model.CertificateNotFoundException:
com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest -> com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest:
    java.lang.String loadBalancerName -> a
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck healthCheck -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck getHealthCheck() -> getHealthCheck
    void setHealthCheck(com.amazonaws.services.elasticloadbalancing.model.HealthCheck) -> setHealthCheck
    com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest withHealthCheck(com.amazonaws.services.elasticloadbalancing.model.HealthCheck) -> withHealthCheck
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckResult -> com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckResult:
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck healthCheck -> a
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck getHealthCheck() -> getHealthCheck
    void setHealthCheck(com.amazonaws.services.elasticloadbalancing.model.HealthCheck) -> setHealthCheck
    com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckResult withHealthCheck(com.amazonaws.services.elasticloadbalancing.model.HealthCheck) -> withHealthCheck
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest -> com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest:
    java.lang.String loadBalancerName -> a
    java.lang.String policyName -> b
    java.lang.String cookieName -> c
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest withPolicyName(java.lang.String) -> withPolicyName
    java.lang.String getCookieName() -> getCookieName
    void setCookieName(java.lang.String) -> setCookieName
    com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest withCookieName(java.lang.String) -> withCookieName
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyResult -> com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyResult:
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest -> com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest:
    java.lang.String loadBalancerName -> a
    java.lang.String policyName -> b
    java.lang.Long cookieExpirationPeriod -> c
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest withPolicyName(java.lang.String) -> withPolicyName
    java.lang.Long getCookieExpirationPeriod() -> getCookieExpirationPeriod
    void setCookieExpirationPeriod(java.lang.Long) -> setCookieExpirationPeriod
    com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest withCookieExpirationPeriod(java.lang.Long) -> withCookieExpirationPeriod
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyResult -> com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyResult:
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest -> com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest:
    java.lang.String loadBalancerName -> a
    java.util.List listeners -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getListeners() -> getListeners
    void setListeners(java.util.Collection) -> setListeners
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest withListeners(com.amazonaws.services.elasticloadbalancing.model.Listener[]) -> withListeners
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest withListeners(java.util.Collection) -> withListeners
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest -> com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest:
    java.lang.String loadBalancerName -> a
    java.lang.String policyName -> b
    java.lang.String policyTypeName -> c
    java.util.List policyAttributes -> d
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest withPolicyName(java.lang.String) -> withPolicyName
    java.lang.String getPolicyTypeName() -> getPolicyTypeName
    void setPolicyTypeName(java.lang.String) -> setPolicyTypeName
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest withPolicyTypeName(java.lang.String) -> withPolicyTypeName
    java.util.List getPolicyAttributes() -> getPolicyAttributes
    void setPolicyAttributes(java.util.Collection) -> setPolicyAttributes
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest withPolicyAttributes(com.amazonaws.services.elasticloadbalancing.model.PolicyAttribute[]) -> withPolicyAttributes
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest withPolicyAttributes(java.util.Collection) -> withPolicyAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyResult -> com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyResult:
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest -> com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest:
    java.lang.String loadBalancerName -> a
    java.util.List listeners -> b
    java.util.List availabilityZones -> c
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getListeners() -> getListeners
    void setListeners(java.util.Collection) -> setListeners
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest withListeners(com.amazonaws.services.elasticloadbalancing.model.Listener[]) -> withListeners
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest withListeners(java.util.Collection) -> withListeners
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerResult -> com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerResult:
    java.lang.String dNSName -> a
    java.lang.String getDNSName() -> getDNSName
    void setDNSName(java.lang.String) -> setDNSName
    com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerResult withDNSName(java.lang.String) -> withDNSName
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest -> com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest:
    java.lang.String loadBalancerName -> a
    java.util.List loadBalancerPorts -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getLoadBalancerPorts() -> getLoadBalancerPorts
    void setLoadBalancerPorts(java.util.Collection) -> setLoadBalancerPorts
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest withLoadBalancerPorts(java.lang.Integer[]) -> withLoadBalancerPorts
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest withLoadBalancerPorts(java.util.Collection) -> withLoadBalancerPorts
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest -> com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest:
    java.lang.String loadBalancerName -> a
    java.lang.String policyName -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest withPolicyName(java.lang.String) -> withPolicyName
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyResult -> com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyResult:
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest -> com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest:
    java.lang.String loadBalancerName -> a
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest -> com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest:
    java.lang.String loadBalancerName -> a
    java.util.List instances -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getInstances() -> getInstances
    void setInstances(java.util.Collection) -> setInstances
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest withInstances(com.amazonaws.services.elasticloadbalancing.model.Instance[]) -> withInstances
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest withInstances(java.util.Collection) -> withInstances
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerResult -> com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerResult:
    java.util.List instances -> a
    java.util.List getInstances() -> getInstances
    void setInstances(java.util.Collection) -> setInstances
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerResult withInstances(com.amazonaws.services.elasticloadbalancing.model.Instance[]) -> withInstances
    com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerResult withInstances(java.util.Collection) -> withInstances
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest -> com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest:
    java.lang.String loadBalancerName -> a
    java.util.List instances -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getInstances() -> getInstances
    void setInstances(java.util.Collection) -> setInstances
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest withInstances(com.amazonaws.services.elasticloadbalancing.model.Instance[]) -> withInstances
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest withInstances(java.util.Collection) -> withInstances
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthResult -> com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthResult:
    java.util.List instanceStates -> a
    java.util.List getInstanceStates() -> getInstanceStates
    void setInstanceStates(java.util.Collection) -> setInstanceStates
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthResult withInstanceStates(com.amazonaws.services.elasticloadbalancing.model.InstanceState[]) -> withInstanceStates
    com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthResult withInstanceStates(java.util.Collection) -> withInstanceStates
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest -> com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest:
    java.lang.String loadBalancerName -> a
    java.util.List policyNames -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getPolicyNames() -> getPolicyNames
    void setPolicyNames(java.util.Collection) -> setPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest withPolicyNames(java.lang.String[]) -> withPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest withPolicyNames(java.util.Collection) -> withPolicyNames
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult -> com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult:
    java.util.List policyDescriptions -> a
    java.util.List getPolicyDescriptions() -> getPolicyDescriptions
    void setPolicyDescriptions(java.util.Collection) -> setPolicyDescriptions
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult withPolicyDescriptions(com.amazonaws.services.elasticloadbalancing.model.PolicyDescription[]) -> withPolicyDescriptions
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult withPolicyDescriptions(java.util.Collection) -> withPolicyDescriptions
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest -> com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest:
    java.util.List policyTypeNames -> a
    java.util.List getPolicyTypeNames() -> getPolicyTypeNames
    void setPolicyTypeNames(java.util.Collection) -> setPolicyTypeNames
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest withPolicyTypeNames(java.lang.String[]) -> withPolicyTypeNames
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest withPolicyTypeNames(java.util.Collection) -> withPolicyTypeNames
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult -> com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult:
    java.util.List policyTypeDescriptions -> a
    java.util.List getPolicyTypeDescriptions() -> getPolicyTypeDescriptions
    void setPolicyTypeDescriptions(java.util.Collection) -> setPolicyTypeDescriptions
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult withPolicyTypeDescriptions(com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription[]) -> withPolicyTypeDescriptions
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult withPolicyTypeDescriptions(java.util.Collection) -> withPolicyTypeDescriptions
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest -> com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest:
    java.util.List loadBalancerNames -> a
    java.util.List getLoadBalancerNames() -> getLoadBalancerNames
    void setLoadBalancerNames(java.util.Collection) -> setLoadBalancerNames
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest withLoadBalancerNames(java.lang.String[]) -> withLoadBalancerNames
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest withLoadBalancerNames(java.util.Collection) -> withLoadBalancerNames
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult -> com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult:
    java.util.List loadBalancerDescriptions -> a
    java.util.List getLoadBalancerDescriptions() -> getLoadBalancerDescriptions
    void setLoadBalancerDescriptions(java.util.Collection) -> setLoadBalancerDescriptions
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult withLoadBalancerDescriptions(com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription[]) -> withLoadBalancerDescriptions
    com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult withLoadBalancerDescriptions(java.util.Collection) -> withLoadBalancerDescriptions
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest -> com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest:
    java.lang.String loadBalancerName -> a
    java.util.List availabilityZones -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerResult -> com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerResult:
    java.util.List availabilityZones -> a
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerResult withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerResult withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.DuplicateListenerException -> com.amazonaws.services.elasticloadbalancing.model.DuplicateListenerException:
com.amazonaws.services.elasticloadbalancing.model.DuplicateLoadBalancerNameException -> com.amazonaws.services.elasticloadbalancing.model.DuplicateLoadBalancerNameException:
com.amazonaws.services.elasticloadbalancing.model.DuplicatePolicyNameException -> com.amazonaws.services.elasticloadbalancing.model.DuplicatePolicyNameException:
com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest -> com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest:
    java.lang.String loadBalancerName -> a
    java.util.List availabilityZones -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerResult -> com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerResult:
    java.util.List availabilityZones -> a
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerResult withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerResult withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.HealthCheck -> com.amazonaws.services.elasticloadbalancing.model.HealthCheck:
    java.lang.String target -> a
    java.lang.Integer interval -> b
    java.lang.Integer timeout -> c
    java.lang.Integer unhealthyThreshold -> d
    java.lang.Integer healthyThreshold -> e
    java.lang.String getTarget() -> getTarget
    void setTarget(java.lang.String) -> setTarget
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck withTarget(java.lang.String) -> withTarget
    java.lang.Integer getInterval() -> getInterval
    void setInterval(java.lang.Integer) -> setInterval
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck withInterval(java.lang.Integer) -> withInterval
    java.lang.Integer getTimeout() -> getTimeout
    void setTimeout(java.lang.Integer) -> setTimeout
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck withTimeout(java.lang.Integer) -> withTimeout
    java.lang.Integer getUnhealthyThreshold() -> getUnhealthyThreshold
    void setUnhealthyThreshold(java.lang.Integer) -> setUnhealthyThreshold
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck withUnhealthyThreshold(java.lang.Integer) -> withUnhealthyThreshold
    java.lang.Integer getHealthyThreshold() -> getHealthyThreshold
    void setHealthyThreshold(java.lang.Integer) -> setHealthyThreshold
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck withHealthyThreshold(java.lang.Integer) -> withHealthyThreshold
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.Instance -> com.amazonaws.services.elasticloadbalancing.model.Instance:
    java.lang.String instanceId -> a
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.elasticloadbalancing.model.Instance withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.InstanceState -> com.amazonaws.services.elasticloadbalancing.model.InstanceState:
    java.lang.String instanceId -> a
    java.lang.String state -> b
    java.lang.String reasonCode -> c
    java.lang.String description -> d
    java.lang.String getInstanceId() -> getInstanceId
    void setInstanceId(java.lang.String) -> setInstanceId
    com.amazonaws.services.elasticloadbalancing.model.InstanceState withInstanceId(java.lang.String) -> withInstanceId
    java.lang.String getState() -> getState
    void setState(java.lang.String) -> setState
    com.amazonaws.services.elasticloadbalancing.model.InstanceState withState(java.lang.String) -> withState
    java.lang.String getReasonCode() -> getReasonCode
    void setReasonCode(java.lang.String) -> setReasonCode
    com.amazonaws.services.elasticloadbalancing.model.InstanceState withReasonCode(java.lang.String) -> withReasonCode
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.elasticloadbalancing.model.InstanceState withDescription(java.lang.String) -> withDescription
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.InvalidConfigurationRequestException -> com.amazonaws.services.elasticloadbalancing.model.InvalidConfigurationRequestException:
com.amazonaws.services.elasticloadbalancing.model.InvalidInstanceException -> com.amazonaws.services.elasticloadbalancing.model.InvalidInstanceException:
com.amazonaws.services.elasticloadbalancing.model.LBCookieStickinessPolicy -> com.amazonaws.services.elasticloadbalancing.model.LBCookieStickinessPolicy:
    java.lang.String policyName -> a
    java.lang.Long cookieExpirationPeriod -> b
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.elasticloadbalancing.model.LBCookieStickinessPolicy withPolicyName(java.lang.String) -> withPolicyName
    java.lang.Long getCookieExpirationPeriod() -> getCookieExpirationPeriod
    void setCookieExpirationPeriod(java.lang.Long) -> setCookieExpirationPeriod
    com.amazonaws.services.elasticloadbalancing.model.LBCookieStickinessPolicy withCookieExpirationPeriod(java.lang.Long) -> withCookieExpirationPeriod
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.Listener -> com.amazonaws.services.elasticloadbalancing.model.Listener:
    java.lang.String protocol -> a
    java.lang.Integer loadBalancerPort -> b
    java.lang.String instanceProtocol -> c
    java.lang.Integer instancePort -> d
    java.lang.String sSLCertificateId -> e
    java.lang.String getProtocol() -> getProtocol
    void setProtocol(java.lang.String) -> setProtocol
    com.amazonaws.services.elasticloadbalancing.model.Listener withProtocol(java.lang.String) -> withProtocol
    java.lang.Integer getLoadBalancerPort() -> getLoadBalancerPort
    void setLoadBalancerPort(java.lang.Integer) -> setLoadBalancerPort
    com.amazonaws.services.elasticloadbalancing.model.Listener withLoadBalancerPort(java.lang.Integer) -> withLoadBalancerPort
    java.lang.String getInstanceProtocol() -> getInstanceProtocol
    void setInstanceProtocol(java.lang.String) -> setInstanceProtocol
    com.amazonaws.services.elasticloadbalancing.model.Listener withInstanceProtocol(java.lang.String) -> withInstanceProtocol
    java.lang.Integer getInstancePort() -> getInstancePort
    void setInstancePort(java.lang.Integer) -> setInstancePort
    com.amazonaws.services.elasticloadbalancing.model.Listener withInstancePort(java.lang.Integer) -> withInstancePort
    java.lang.String getSSLCertificateId() -> getSSLCertificateId
    void setSSLCertificateId(java.lang.String) -> setSSLCertificateId
    com.amazonaws.services.elasticloadbalancing.model.Listener withSSLCertificateId(java.lang.String) -> withSSLCertificateId
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.ListenerDescription -> com.amazonaws.services.elasticloadbalancing.model.ListenerDescription:
    com.amazonaws.services.elasticloadbalancing.model.Listener listener -> a
    java.util.List policyNames -> b
    com.amazonaws.services.elasticloadbalancing.model.Listener getListener() -> getListener
    void setListener(com.amazonaws.services.elasticloadbalancing.model.Listener) -> setListener
    com.amazonaws.services.elasticloadbalancing.model.ListenerDescription withListener(com.amazonaws.services.elasticloadbalancing.model.Listener) -> withListener
    java.util.List getPolicyNames() -> getPolicyNames
    void setPolicyNames(java.util.Collection) -> setPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.ListenerDescription withPolicyNames(java.lang.String[]) -> withPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.ListenerDescription withPolicyNames(java.util.Collection) -> withPolicyNames
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.ListenerNotFoundException -> com.amazonaws.services.elasticloadbalancing.model.ListenerNotFoundException:
com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription -> com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription:
    java.lang.String loadBalancerName -> a
    java.lang.String dNSName -> b
    java.lang.String canonicalHostedZoneName -> c
    java.lang.String canonicalHostedZoneNameID -> d
    java.util.List listenerDescriptions -> e
    com.amazonaws.services.elasticloadbalancing.model.Policies policies -> f
    java.util.List backendServerDescriptions -> g
    java.util.List availabilityZones -> h
    java.util.List instances -> i
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck healthCheck -> j
    com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup sourceSecurityGroup -> k
    java.util.Date createdTime -> l
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.String getDNSName() -> getDNSName
    void setDNSName(java.lang.String) -> setDNSName
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withDNSName(java.lang.String) -> withDNSName
    java.lang.String getCanonicalHostedZoneName() -> getCanonicalHostedZoneName
    void setCanonicalHostedZoneName(java.lang.String) -> setCanonicalHostedZoneName
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withCanonicalHostedZoneName(java.lang.String) -> withCanonicalHostedZoneName
    java.lang.String getCanonicalHostedZoneNameID() -> getCanonicalHostedZoneNameID
    void setCanonicalHostedZoneNameID(java.lang.String) -> setCanonicalHostedZoneNameID
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withCanonicalHostedZoneNameID(java.lang.String) -> withCanonicalHostedZoneNameID
    java.util.List getListenerDescriptions() -> getListenerDescriptions
    void setListenerDescriptions(java.util.Collection) -> setListenerDescriptions
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withListenerDescriptions(com.amazonaws.services.elasticloadbalancing.model.ListenerDescription[]) -> withListenerDescriptions
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withListenerDescriptions(java.util.Collection) -> withListenerDescriptions
    com.amazonaws.services.elasticloadbalancing.model.Policies getPolicies() -> getPolicies
    void setPolicies(com.amazonaws.services.elasticloadbalancing.model.Policies) -> setPolicies
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withPolicies(com.amazonaws.services.elasticloadbalancing.model.Policies) -> withPolicies
    java.util.List getBackendServerDescriptions() -> getBackendServerDescriptions
    void setBackendServerDescriptions(java.util.Collection) -> setBackendServerDescriptions
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withBackendServerDescriptions(com.amazonaws.services.elasticloadbalancing.model.BackendServerDescription[]) -> withBackendServerDescriptions
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withBackendServerDescriptions(java.util.Collection) -> withBackendServerDescriptions
    java.util.List getAvailabilityZones() -> getAvailabilityZones
    void setAvailabilityZones(java.util.Collection) -> setAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withAvailabilityZones(java.lang.String[]) -> withAvailabilityZones
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withAvailabilityZones(java.util.Collection) -> withAvailabilityZones
    java.util.List getInstances() -> getInstances
    void setInstances(java.util.Collection) -> setInstances
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withInstances(com.amazonaws.services.elasticloadbalancing.model.Instance[]) -> withInstances
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withInstances(java.util.Collection) -> withInstances
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck getHealthCheck() -> getHealthCheck
    void setHealthCheck(com.amazonaws.services.elasticloadbalancing.model.HealthCheck) -> setHealthCheck
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withHealthCheck(com.amazonaws.services.elasticloadbalancing.model.HealthCheck) -> withHealthCheck
    com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup getSourceSecurityGroup() -> getSourceSecurityGroup
    void setSourceSecurityGroup(com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup) -> setSourceSecurityGroup
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withSourceSecurityGroup(com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup) -> withSourceSecurityGroup
    java.util.Date getCreatedTime() -> getCreatedTime
    void setCreatedTime(java.util.Date) -> setCreatedTime
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription withCreatedTime(java.util.Date) -> withCreatedTime
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.LoadBalancerNotFoundException -> com.amazonaws.services.elasticloadbalancing.model.LoadBalancerNotFoundException:
com.amazonaws.services.elasticloadbalancing.model.Policies -> com.amazonaws.services.elasticloadbalancing.model.Policies:
    java.util.List appCookieStickinessPolicies -> a
    java.util.List lBCookieStickinessPolicies -> b
    java.util.List otherPolicies -> c
    java.util.List getAppCookieStickinessPolicies() -> getAppCookieStickinessPolicies
    void setAppCookieStickinessPolicies(java.util.Collection) -> setAppCookieStickinessPolicies
    com.amazonaws.services.elasticloadbalancing.model.Policies withAppCookieStickinessPolicies(com.amazonaws.services.elasticloadbalancing.model.AppCookieStickinessPolicy[]) -> withAppCookieStickinessPolicies
    com.amazonaws.services.elasticloadbalancing.model.Policies withAppCookieStickinessPolicies(java.util.Collection) -> withAppCookieStickinessPolicies
    java.util.List getLBCookieStickinessPolicies() -> getLBCookieStickinessPolicies
    void setLBCookieStickinessPolicies(java.util.Collection) -> setLBCookieStickinessPolicies
    com.amazonaws.services.elasticloadbalancing.model.Policies withLBCookieStickinessPolicies(com.amazonaws.services.elasticloadbalancing.model.LBCookieStickinessPolicy[]) -> withLBCookieStickinessPolicies
    com.amazonaws.services.elasticloadbalancing.model.Policies withLBCookieStickinessPolicies(java.util.Collection) -> withLBCookieStickinessPolicies
    java.util.List getOtherPolicies() -> getOtherPolicies
    void setOtherPolicies(java.util.Collection) -> setOtherPolicies
    com.amazonaws.services.elasticloadbalancing.model.Policies withOtherPolicies(java.lang.String[]) -> withOtherPolicies
    com.amazonaws.services.elasticloadbalancing.model.Policies withOtherPolicies(java.util.Collection) -> withOtherPolicies
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.PolicyAttribute -> com.amazonaws.services.elasticloadbalancing.model.PolicyAttribute:
    java.lang.String attributeName -> a
    java.lang.String attributeValue -> b
    java.lang.String getAttributeName() -> getAttributeName
    void setAttributeName(java.lang.String) -> setAttributeName
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttribute withAttributeName(java.lang.String) -> withAttributeName
    java.lang.String getAttributeValue() -> getAttributeValue
    void setAttributeValue(java.lang.String) -> setAttributeValue
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttribute withAttributeValue(java.lang.String) -> withAttributeValue
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeDescription -> com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeDescription:
    java.lang.String attributeName -> a
    java.lang.String attributeValue -> b
    java.lang.String getAttributeName() -> getAttributeName
    void setAttributeName(java.lang.String) -> setAttributeName
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeDescription withAttributeName(java.lang.String) -> withAttributeName
    java.lang.String getAttributeValue() -> getAttributeValue
    void setAttributeValue(java.lang.String) -> setAttributeValue
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeDescription withAttributeValue(java.lang.String) -> withAttributeValue
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription -> com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription:
    java.lang.String attributeName -> a
    java.lang.String attributeType -> b
    java.lang.String description -> c
    java.lang.String defaultValue -> d
    java.lang.String cardinality -> e
    java.lang.String getAttributeName() -> getAttributeName
    void setAttributeName(java.lang.String) -> setAttributeName
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription withAttributeName(java.lang.String) -> withAttributeName
    java.lang.String getAttributeType() -> getAttributeType
    void setAttributeType(java.lang.String) -> setAttributeType
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription withAttributeType(java.lang.String) -> withAttributeType
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription withDescription(java.lang.String) -> withDescription
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription withDefaultValue(java.lang.String) -> withDefaultValue
    java.lang.String getCardinality() -> getCardinality
    void setCardinality(java.lang.String) -> setCardinality
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription withCardinality(java.lang.String) -> withCardinality
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.PolicyDescription -> com.amazonaws.services.elasticloadbalancing.model.PolicyDescription:
    java.lang.String policyName -> a
    java.lang.String policyTypeName -> b
    java.util.List policyAttributeDescriptions -> c
    java.lang.String getPolicyName() -> getPolicyName
    void setPolicyName(java.lang.String) -> setPolicyName
    com.amazonaws.services.elasticloadbalancing.model.PolicyDescription withPolicyName(java.lang.String) -> withPolicyName
    java.lang.String getPolicyTypeName() -> getPolicyTypeName
    void setPolicyTypeName(java.lang.String) -> setPolicyTypeName
    com.amazonaws.services.elasticloadbalancing.model.PolicyDescription withPolicyTypeName(java.lang.String) -> withPolicyTypeName
    java.util.List getPolicyAttributeDescriptions() -> getPolicyAttributeDescriptions
    void setPolicyAttributeDescriptions(java.util.Collection) -> setPolicyAttributeDescriptions
    com.amazonaws.services.elasticloadbalancing.model.PolicyDescription withPolicyAttributeDescriptions(com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeDescription[]) -> withPolicyAttributeDescriptions
    com.amazonaws.services.elasticloadbalancing.model.PolicyDescription withPolicyAttributeDescriptions(java.util.Collection) -> withPolicyAttributeDescriptions
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.PolicyNotFoundException -> com.amazonaws.services.elasticloadbalancing.model.PolicyNotFoundException:
com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription -> com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription:
    java.lang.String policyTypeName -> a
    java.lang.String description -> b
    java.util.List policyAttributeTypeDescriptions -> c
    java.lang.String getPolicyTypeName() -> getPolicyTypeName
    void setPolicyTypeName(java.lang.String) -> setPolicyTypeName
    com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription withPolicyTypeName(java.lang.String) -> withPolicyTypeName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription withDescription(java.lang.String) -> withDescription
    java.util.List getPolicyAttributeTypeDescriptions() -> getPolicyAttributeTypeDescriptions
    void setPolicyAttributeTypeDescriptions(java.util.Collection) -> setPolicyAttributeTypeDescriptions
    com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription withPolicyAttributeTypeDescriptions(com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription[]) -> withPolicyAttributeTypeDescriptions
    com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription withPolicyAttributeTypeDescriptions(java.util.Collection) -> withPolicyAttributeTypeDescriptions
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.PolicyTypeNotFoundException -> com.amazonaws.services.elasticloadbalancing.model.PolicyTypeNotFoundException:
com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest -> com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest:
    java.lang.String loadBalancerName -> a
    java.util.List instances -> b
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.util.List getInstances() -> getInstances
    void setInstances(java.util.Collection) -> setInstances
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest withInstances(com.amazonaws.services.elasticloadbalancing.model.Instance[]) -> withInstances
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest withInstances(java.util.Collection) -> withInstances
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerResult -> com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerResult:
    java.util.List instances -> a
    java.util.List getInstances() -> getInstances
    void setInstances(java.util.Collection) -> setInstances
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerResult withInstances(com.amazonaws.services.elasticloadbalancing.model.Instance[]) -> withInstances
    com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerResult withInstances(java.util.Collection) -> withInstances
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest -> com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest:
    java.lang.String loadBalancerName -> a
    java.lang.Integer loadBalancerPort -> b
    java.lang.String sSLCertificateId -> c
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.Integer getLoadBalancerPort() -> getLoadBalancerPort
    void setLoadBalancerPort(java.lang.Integer) -> setLoadBalancerPort
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest withLoadBalancerPort(java.lang.Integer) -> withLoadBalancerPort
    java.lang.String getSSLCertificateId() -> getSSLCertificateId
    void setSSLCertificateId(java.lang.String) -> setSSLCertificateId
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest withSSLCertificateId(java.lang.String) -> withSSLCertificateId
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest -> com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest:
    java.lang.String loadBalancerName -> a
    java.lang.Integer instancePort -> b
    java.util.List policyNames -> c
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.Integer getInstancePort() -> getInstancePort
    void setInstancePort(java.lang.Integer) -> setInstancePort
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest withInstancePort(java.lang.Integer) -> withInstancePort
    java.util.List getPolicyNames() -> getPolicyNames
    void setPolicyNames(java.util.Collection) -> setPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest withPolicyNames(java.lang.String[]) -> withPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest withPolicyNames(java.util.Collection) -> withPolicyNames
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerResult -> com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerResult:
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest -> com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest:
    java.lang.String loadBalancerName -> a
    java.lang.Integer loadBalancerPort -> b
    java.util.List policyNames -> c
    java.lang.String getLoadBalancerName() -> getLoadBalancerName
    void setLoadBalancerName(java.lang.String) -> setLoadBalancerName
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest withLoadBalancerName(java.lang.String) -> withLoadBalancerName
    java.lang.Integer getLoadBalancerPort() -> getLoadBalancerPort
    void setLoadBalancerPort(java.lang.Integer) -> setLoadBalancerPort
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest withLoadBalancerPort(java.lang.Integer) -> withLoadBalancerPort
    java.util.List getPolicyNames() -> getPolicyNames
    void setPolicyNames(java.util.Collection) -> setPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest withPolicyNames(java.lang.String[]) -> withPolicyNames
    com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest withPolicyNames(java.util.Collection) -> withPolicyNames
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerResult -> com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerResult:
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup -> com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup:
    java.lang.String ownerAlias -> a
    java.lang.String groupName -> b
    java.lang.String getOwnerAlias() -> getOwnerAlias
    void setOwnerAlias(java.lang.String) -> setOwnerAlias
    com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup withOwnerAlias(java.lang.String) -> withOwnerAlias
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
    com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup withGroupName(java.lang.String) -> withGroupName
    java.lang.String toString() -> toString
com.amazonaws.services.elasticloadbalancing.model.TooManyLoadBalancersException -> com.amazonaws.services.elasticloadbalancing.model.TooManyLoadBalancersException:
com.amazonaws.services.elasticloadbalancing.model.TooManyPoliciesException -> com.amazonaws.services.elasticloadbalancing.model.TooManyPoliciesException:
com.amazonaws.services.elasticloadbalancing.model.package-info -> com.amazonaws.services.elasticloadbalancing.model.package-info:
com.amazonaws.services.elasticloadbalancing.model.transform.AppCookieStickinessPolicyStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.v:
    com.amazonaws.services.elasticloadbalancing.model.transform.AppCookieStickinessPolicyStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.AppCookieStickinessPolicy unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.AppCookieStickinessPolicyStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.BackendServerDescriptionStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.ae:
    com.amazonaws.services.elasticloadbalancing.model.transform.BackendServerDescriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.BackendServerDescription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.BackendServerDescriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.CertificateNotFoundExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.ab:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.ConfigureHealthCheckRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.w:
com.amazonaws.services.elasticloadbalancing.model.transform.ConfigureHealthCheckResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.F:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.CreateAppCookieStickinessPolicyRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.ai:
com.amazonaws.services.elasticloadbalancing.model.transform.CreateAppCookieStickinessPolicyResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.u:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.CreateLBCookieStickinessPolicyRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.T:
com.amazonaws.services.elasticloadbalancing.model.transform.CreateLBCookieStickinessPolicyResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.W:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.CreateLoadBalancerListenersRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.L:
com.amazonaws.services.elasticloadbalancing.model.transform.CreateLoadBalancerPolicyRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.ag:
com.amazonaws.services.elasticloadbalancing.model.transform.CreateLoadBalancerPolicyResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.I:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.CreateLoadBalancerRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.n:
com.amazonaws.services.elasticloadbalancing.model.transform.CreateLoadBalancerResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.ah:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DeleteLoadBalancerListenersRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.b:
com.amazonaws.services.elasticloadbalancing.model.transform.DeleteLoadBalancerPolicyRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.r:
com.amazonaws.services.elasticloadbalancing.model.transform.DeleteLoadBalancerPolicyResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.M:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DeleteLoadBalancerRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.x:
com.amazonaws.services.elasticloadbalancing.model.transform.DeregisterInstancesFromLoadBalancerRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.p:
com.amazonaws.services.elasticloadbalancing.model.transform.DeregisterInstancesFromLoadBalancerResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.k:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DescribeInstanceHealthRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.e:
com.amazonaws.services.elasticloadbalancing.model.transform.DescribeInstanceHealthResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.d:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DescribeLoadBalancerPoliciesRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.i:
com.amazonaws.services.elasticloadbalancing.model.transform.DescribeLoadBalancerPoliciesResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.Y:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DescribeLoadBalancerPolicyTypesRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.o:
com.amazonaws.services.elasticloadbalancing.model.transform.DescribeLoadBalancerPolicyTypesResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.O:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DescribeLoadBalancersRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.aa:
com.amazonaws.services.elasticloadbalancing.model.transform.DescribeLoadBalancersResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.j:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DisableAvailabilityZonesForLoadBalancerRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.y:
com.amazonaws.services.elasticloadbalancing.model.transform.DisableAvailabilityZonesForLoadBalancerResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.N:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DuplicateListenerExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.V:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DuplicateLoadBalancerNameExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.ad:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.DuplicatePolicyNameExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.Z:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.EnableAvailabilityZonesForLoadBalancerRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.P:
com.amazonaws.services.elasticloadbalancing.model.transform.EnableAvailabilityZonesForLoadBalancerResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.m:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.HealthCheckStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.af:
    com.amazonaws.services.elasticloadbalancing.model.transform.HealthCheckStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.HealthCheck unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.HealthCheckStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.InstanceStateStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.K:
    com.amazonaws.services.elasticloadbalancing.model.transform.InstanceStateStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.InstanceState unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.InstanceStateStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.InstanceStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.X:
    com.amazonaws.services.elasticloadbalancing.model.transform.InstanceStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.Instance unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.InstanceStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.InvalidConfigurationRequestExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.g:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.InvalidInstanceExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.G:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.LBCookieStickinessPolicyStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.Q:
    com.amazonaws.services.elasticloadbalancing.model.transform.LBCookieStickinessPolicyStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.LBCookieStickinessPolicy unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.LBCookieStickinessPolicyStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.ListenerDescriptionStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.c:
    com.amazonaws.services.elasticloadbalancing.model.transform.ListenerDescriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.ListenerDescription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.ListenerDescriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.ListenerNotFoundExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.q:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.ListenerStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.a:
    com.amazonaws.services.elasticloadbalancing.model.transform.ListenerStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.Listener unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.ListenerStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.LoadBalancerDescriptionStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.z:
    com.amazonaws.services.elasticloadbalancing.model.transform.LoadBalancerDescriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.LoadBalancerDescriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.LoadBalancerNotFoundExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.aj:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.PoliciesStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.s:
    com.amazonaws.services.elasticloadbalancing.model.transform.PoliciesStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.Policies unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.PoliciesStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.PolicyAttributeDescriptionStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.f:
    com.amazonaws.services.elasticloadbalancing.model.transform.PolicyAttributeDescriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeDescription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.PolicyAttributeDescriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.PolicyAttributeTypeDescriptionStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.H:
    com.amazonaws.services.elasticloadbalancing.model.transform.PolicyAttributeTypeDescriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.PolicyAttributeTypeDescriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.PolicyDescriptionStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.C:
    com.amazonaws.services.elasticloadbalancing.model.transform.PolicyDescriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.PolicyDescription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.PolicyDescriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.PolicyNotFoundExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.l:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.PolicyTypeDescriptionStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.h:
    com.amazonaws.services.elasticloadbalancing.model.transform.PolicyTypeDescriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.PolicyTypeDescriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.PolicyTypeNotFoundExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.E:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.RegisterInstancesWithLoadBalancerRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.B:
com.amazonaws.services.elasticloadbalancing.model.transform.RegisterInstancesWithLoadBalancerResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.D:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.SetLoadBalancerListenerSSLCertificateRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.A:
com.amazonaws.services.elasticloadbalancing.model.transform.SetLoadBalancerPoliciesForBackendServerRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.J:
com.amazonaws.services.elasticloadbalancing.model.transform.SetLoadBalancerPoliciesForBackendServerResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.S:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.SetLoadBalancerPoliciesOfListenerRequestMarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.t:
com.amazonaws.services.elasticloadbalancing.model.transform.SetLoadBalancerPoliciesOfListenerResultStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.ac:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.SourceSecurityGroupStaxUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.ak:
    com.amazonaws.services.elasticloadbalancing.model.transform.SourceSecurityGroupStaxUnmarshaller instance -> a
    com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.elasticloadbalancing.model.transform.SourceSecurityGroupStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.TooManyLoadBalancersExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.R:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.model.transform.TooManyPoliciesExceptionUnmarshaller -> com.amazonaws.services.elasticloadbalancing.model.transform.U:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.elasticloadbalancing.package-info -> com.amazonaws.services.elasticloadbalancing.package-info:
com.amazonaws.services.s3.AmazonS3 -> com.amazonaws.services.s3.AmazonS3:
    void setEndpoint(java.lang.String) -> setEndpoint
    void changeObjectStorageClass(java.lang.String,java.lang.String,com.amazonaws.services.s3.model.StorageClass) -> changeObjectStorageClass
    com.amazonaws.services.s3.model.ObjectListing listObjects(java.lang.String) -> listObjects
    com.amazonaws.services.s3.model.ObjectListing listObjects(java.lang.String,java.lang.String) -> listObjects
    com.amazonaws.services.s3.model.ObjectListing listObjects(com.amazonaws.services.s3.model.ListObjectsRequest) -> listObjects
    com.amazonaws.services.s3.model.ObjectListing listNextBatchOfObjects(com.amazonaws.services.s3.model.ObjectListing) -> listNextBatchOfObjects
    com.amazonaws.services.s3.model.VersionListing listVersions(java.lang.String,java.lang.String) -> listVersions
    com.amazonaws.services.s3.model.VersionListing listNextBatchOfVersions(com.amazonaws.services.s3.model.VersionListing) -> listNextBatchOfVersions
    com.amazonaws.services.s3.model.VersionListing listVersions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer) -> listVersions
    com.amazonaws.services.s3.model.VersionListing listVersions(com.amazonaws.services.s3.model.ListVersionsRequest) -> listVersions
    com.amazonaws.services.s3.model.Owner getS3AccountOwner() -> getS3AccountOwner
    boolean doesBucketExist(java.lang.String) -> doesBucketExist
    java.util.List listBuckets() -> listBuckets
    java.util.List listBuckets(com.amazonaws.services.s3.model.ListBucketsRequest) -> listBuckets
    java.lang.String getBucketLocation(java.lang.String) -> getBucketLocation
    java.lang.String getBucketLocation(com.amazonaws.services.s3.model.GetBucketLocationRequest) -> getBucketLocation
    com.amazonaws.services.s3.model.Bucket createBucket(com.amazonaws.services.s3.model.CreateBucketRequest) -> createBucket
    com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String) -> createBucket
    com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String,com.amazonaws.services.s3.model.Region) -> createBucket
    com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String,java.lang.String) -> createBucket
    com.amazonaws.services.s3.model.AccessControlList getObjectAcl(java.lang.String,java.lang.String) -> getObjectAcl
    com.amazonaws.services.s3.model.AccessControlList getObjectAcl(java.lang.String,java.lang.String,java.lang.String) -> getObjectAcl
    void setObjectAcl(java.lang.String,java.lang.String,com.amazonaws.services.s3.model.AccessControlList) -> setObjectAcl
    void setObjectAcl(java.lang.String,java.lang.String,com.amazonaws.services.s3.model.CannedAccessControlList) -> setObjectAcl
    void setObjectAcl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.services.s3.model.AccessControlList) -> setObjectAcl
    void setObjectAcl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.services.s3.model.CannedAccessControlList) -> setObjectAcl
    com.amazonaws.services.s3.model.AccessControlList getBucketAcl(java.lang.String) -> getBucketAcl
    void setBucketAcl(com.amazonaws.services.s3.model.SetBucketAclRequest) -> setBucketAcl
    com.amazonaws.services.s3.model.AccessControlList getBucketAcl(com.amazonaws.services.s3.model.GetBucketAclRequest) -> getBucketAcl
    void setBucketAcl(java.lang.String,com.amazonaws.services.s3.model.AccessControlList) -> setBucketAcl
    void setBucketAcl(java.lang.String,com.amazonaws.services.s3.model.CannedAccessControlList) -> setBucketAcl
    com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String,java.lang.String) -> getObjectMetadata
    com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(com.amazonaws.services.s3.model.GetObjectMetadataRequest) -> getObjectMetadata
    com.amazonaws.services.s3.model.S3Object getObject(java.lang.String,java.lang.String) -> getObject
    com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest) -> getObject
    com.amazonaws.services.s3.model.ObjectMetadata getObject(com.amazonaws.services.s3.model.GetObjectRequest,java.io.File) -> getObject
    void deleteBucket(com.amazonaws.services.s3.model.DeleteBucketRequest) -> deleteBucket
    void deleteBucket(java.lang.String) -> deleteBucket
    com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest) -> putObject
    com.amazonaws.services.s3.model.PutObjectResult putObject(java.lang.String,java.lang.String,java.io.File) -> putObject
    com.amazonaws.services.s3.model.PutObjectResult putObject(java.lang.String,java.lang.String,java.io.InputStream,com.amazonaws.services.s3.model.ObjectMetadata) -> putObject
    com.amazonaws.services.s3.model.CopyObjectResult copyObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> copyObject
    com.amazonaws.services.s3.model.CopyObjectResult copyObject(com.amazonaws.services.s3.model.CopyObjectRequest) -> copyObject
    com.amazonaws.services.s3.model.CopyPartResult copyPart(com.amazonaws.services.s3.model.CopyPartRequest) -> copyPart
    void deleteObject(java.lang.String,java.lang.String) -> deleteObject
    void deleteObject(com.amazonaws.services.s3.model.DeleteObjectRequest) -> deleteObject
    void deleteVersion(java.lang.String,java.lang.String,java.lang.String) -> deleteVersion
    void deleteVersion(com.amazonaws.services.s3.model.DeleteVersionRequest) -> deleteVersion
    com.amazonaws.services.s3.model.BucketLoggingConfiguration getBucketLoggingConfiguration(java.lang.String) -> getBucketLoggingConfiguration
    void setBucketLoggingConfiguration(com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest) -> setBucketLoggingConfiguration
    com.amazonaws.services.s3.model.BucketVersioningConfiguration getBucketVersioningConfiguration(java.lang.String) -> getBucketVersioningConfiguration
    void setBucketVersioningConfiguration(com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest) -> setBucketVersioningConfiguration
    com.amazonaws.services.s3.model.BucketNotificationConfiguration getBucketNotificationConfiguration(java.lang.String) -> getBucketNotificationConfiguration
    void setBucketNotificationConfiguration(java.lang.String,com.amazonaws.services.s3.model.BucketNotificationConfiguration) -> setBucketNotificationConfiguration
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration getBucketWebsiteConfiguration(java.lang.String) -> getBucketWebsiteConfiguration
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration getBucketWebsiteConfiguration(com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest) -> getBucketWebsiteConfiguration
    void setBucketWebsiteConfiguration(java.lang.String,com.amazonaws.services.s3.model.BucketWebsiteConfiguration) -> setBucketWebsiteConfiguration
    void setBucketWebsiteConfiguration(com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest) -> setBucketWebsiteConfiguration
    void deleteBucketWebsiteConfiguration(java.lang.String) -> deleteBucketWebsiteConfiguration
    void deleteBucketWebsiteConfiguration(com.amazonaws.services.s3.model.DeleteBucketWebsiteConfigurationRequest) -> deleteBucketWebsiteConfiguration
    com.amazonaws.services.s3.model.BucketPolicy getBucketPolicy(java.lang.String) -> getBucketPolicy
    com.amazonaws.services.s3.model.BucketPolicy getBucketPolicy(com.amazonaws.services.s3.model.GetBucketPolicyRequest) -> getBucketPolicy
    void setBucketPolicy(java.lang.String,java.lang.String) -> setBucketPolicy
    void setBucketPolicy(com.amazonaws.services.s3.model.SetBucketPolicyRequest) -> setBucketPolicy
    void deleteBucketPolicy(java.lang.String) -> deleteBucketPolicy
    void deleteBucketPolicy(com.amazonaws.services.s3.model.DeleteBucketPolicyRequest) -> deleteBucketPolicy
    java.net.URL generatePresignedUrl(java.lang.String,java.lang.String,java.util.Date) -> generatePresignedUrl
    java.net.URL generatePresignedUrl(java.lang.String,java.lang.String,java.util.Date,com.amazonaws.HttpMethod) -> generatePresignedUrl
    java.net.URL generatePresignedUrl(com.amazonaws.services.s3.model.GeneratePresignedUrlRequest) -> generatePresignedUrl
    com.amazonaws.services.s3.model.InitiateMultipartUploadResult initiateMultipartUpload(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest) -> initiateMultipartUpload
    com.amazonaws.services.s3.model.UploadPartResult uploadPart(com.amazonaws.services.s3.model.UploadPartRequest) -> uploadPart
    com.amazonaws.services.s3.model.PartListing listParts(com.amazonaws.services.s3.model.ListPartsRequest) -> listParts
    void abortMultipartUpload(com.amazonaws.services.s3.model.AbortMultipartUploadRequest) -> abortMultipartUpload
    com.amazonaws.services.s3.model.CompleteMultipartUploadResult completeMultipartUpload(com.amazonaws.services.s3.model.CompleteMultipartUploadRequest) -> completeMultipartUpload
    com.amazonaws.services.s3.model.MultipartUploadListing listMultipartUploads(com.amazonaws.services.s3.model.ListMultipartUploadsRequest) -> listMultipartUploads
    com.amazonaws.services.s3.S3ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
com.amazonaws.services.s3.AmazonS3Client -> com.amazonaws.services.s3.AmazonS3Client:
    org.apache.commons.logging.Log log -> d
    com.amazonaws.services.s3.internal.S3ErrorResponseHandler errorResponseHandler -> e
    com.amazonaws.services.s3.internal.S3XmlResponseHandler voidResponseHandler -> f
    com.amazonaws.services.s3.internal.BucketNameUtils bucketNameUtils -> g
    com.amazonaws.services.s3.model.transform.BucketConfigurationXmlFactory bucketConfigurationXmlFactory -> h
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> i
    void init() -> b
    void addRequestHandler(com.amazonaws.handlers.RequestHandler) -> addRequestHandler
    com.amazonaws.services.s3.model.VersionListing listNextBatchOfVersions(com.amazonaws.services.s3.model.VersionListing) -> listNextBatchOfVersions
    com.amazonaws.services.s3.model.VersionListing listVersions(java.lang.String,java.lang.String) -> listVersions
    com.amazonaws.services.s3.model.VersionListing listVersions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer) -> listVersions
    com.amazonaws.services.s3.model.VersionListing listVersions(com.amazonaws.services.s3.model.ListVersionsRequest) -> listVersions
    com.amazonaws.services.s3.model.ObjectListing listObjects(java.lang.String) -> listObjects
    com.amazonaws.services.s3.model.ObjectListing listObjects(java.lang.String,java.lang.String) -> listObjects
    com.amazonaws.services.s3.model.ObjectListing listObjects(com.amazonaws.services.s3.model.ListObjectsRequest) -> listObjects
    com.amazonaws.services.s3.model.ObjectListing listNextBatchOfObjects(com.amazonaws.services.s3.model.ObjectListing) -> listNextBatchOfObjects
    com.amazonaws.services.s3.model.Owner getS3AccountOwner() -> getS3AccountOwner
    java.util.List listBuckets(com.amazonaws.services.s3.model.ListBucketsRequest) -> listBuckets
    java.util.List listBuckets() -> listBuckets
    java.lang.String getBucketLocation(com.amazonaws.services.s3.model.GetBucketLocationRequest) -> getBucketLocation
    java.lang.String getBucketLocation(java.lang.String) -> getBucketLocation
    com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String) -> createBucket
    com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String,com.amazonaws.services.s3.model.Region) -> createBucket
    com.amazonaws.services.s3.model.Bucket createBucket(java.lang.String,java.lang.String) -> createBucket
    com.amazonaws.services.s3.model.Bucket createBucket(com.amazonaws.services.s3.model.CreateBucketRequest) -> createBucket
    com.amazonaws.services.s3.model.AccessControlList getObjectAcl(java.lang.String,java.lang.String) -> getObjectAcl
    com.amazonaws.services.s3.model.AccessControlList getObjectAcl(java.lang.String,java.lang.String,java.lang.String) -> getObjectAcl
    void setObjectAcl(java.lang.String,java.lang.String,com.amazonaws.services.s3.model.AccessControlList) -> setObjectAcl
    void setObjectAcl(java.lang.String,java.lang.String,com.amazonaws.services.s3.model.CannedAccessControlList) -> setObjectAcl
    void setObjectAcl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.services.s3.model.AccessControlList) -> setObjectAcl
    void setObjectAcl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.services.s3.model.CannedAccessControlList) -> setObjectAcl
    com.amazonaws.services.s3.model.AccessControlList getBucketAcl(java.lang.String) -> getBucketAcl
    com.amazonaws.services.s3.model.AccessControlList getBucketAcl(com.amazonaws.services.s3.model.GetBucketAclRequest) -> getBucketAcl
    void setBucketAcl(java.lang.String,com.amazonaws.services.s3.model.AccessControlList) -> setBucketAcl
    void setBucketAcl(com.amazonaws.services.s3.model.SetBucketAclRequest) -> setBucketAcl
    void setBucketAcl(java.lang.String,com.amazonaws.services.s3.model.CannedAccessControlList) -> setBucketAcl
    com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(java.lang.String,java.lang.String) -> getObjectMetadata
    com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata(com.amazonaws.services.s3.model.GetObjectMetadataRequest) -> getObjectMetadata
    com.amazonaws.services.s3.model.S3Object getObject(java.lang.String,java.lang.String) -> getObject
    boolean doesBucketExist(java.lang.String) -> doesBucketExist
    void changeObjectStorageClass(java.lang.String,java.lang.String,com.amazonaws.services.s3.model.StorageClass) -> changeObjectStorageClass
    com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest) -> getObject
    com.amazonaws.services.s3.model.ObjectMetadata getObject(com.amazonaws.services.s3.model.GetObjectRequest,java.io.File) -> getObject
    void deleteBucket(java.lang.String) -> deleteBucket
    void deleteBucket(com.amazonaws.services.s3.model.DeleteBucketRequest) -> deleteBucket
    com.amazonaws.services.s3.model.PutObjectResult putObject(java.lang.String,java.lang.String,java.io.File) -> putObject
    com.amazonaws.services.s3.model.PutObjectResult putObject(java.lang.String,java.lang.String,java.io.InputStream,com.amazonaws.services.s3.model.ObjectMetadata) -> putObject
    com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest) -> putObject
    com.amazonaws.services.s3.model.CopyObjectResult copyObject(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> copyObject
    com.amazonaws.services.s3.model.CopyObjectResult copyObject(com.amazonaws.services.s3.model.CopyObjectRequest) -> copyObject
    com.amazonaws.services.s3.model.CopyPartResult copyPart(com.amazonaws.services.s3.model.CopyPartRequest) -> copyPart
    void deleteObject(java.lang.String,java.lang.String) -> deleteObject
    void deleteObject(com.amazonaws.services.s3.model.DeleteObjectRequest) -> deleteObject
    void deleteVersion(java.lang.String,java.lang.String,java.lang.String) -> deleteVersion
    void deleteVersion(com.amazonaws.services.s3.model.DeleteVersionRequest) -> deleteVersion
    void setBucketVersioningConfiguration(com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest) -> setBucketVersioningConfiguration
    com.amazonaws.services.s3.model.BucketVersioningConfiguration getBucketVersioningConfiguration(java.lang.String) -> getBucketVersioningConfiguration
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration getBucketWebsiteConfiguration(java.lang.String) -> getBucketWebsiteConfiguration
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration getBucketWebsiteConfiguration(com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest) -> getBucketWebsiteConfiguration
    void setBucketWebsiteConfiguration(java.lang.String,com.amazonaws.services.s3.model.BucketWebsiteConfiguration) -> setBucketWebsiteConfiguration
    void setBucketWebsiteConfiguration(com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest) -> setBucketWebsiteConfiguration
    void deleteBucketWebsiteConfiguration(java.lang.String) -> deleteBucketWebsiteConfiguration
    void deleteBucketWebsiteConfiguration(com.amazonaws.services.s3.model.DeleteBucketWebsiteConfigurationRequest) -> deleteBucketWebsiteConfiguration
    void setBucketNotificationConfiguration(java.lang.String,com.amazonaws.services.s3.model.BucketNotificationConfiguration) -> setBucketNotificationConfiguration
    com.amazonaws.services.s3.model.BucketNotificationConfiguration getBucketNotificationConfiguration(java.lang.String) -> getBucketNotificationConfiguration
    com.amazonaws.services.s3.model.BucketLoggingConfiguration getBucketLoggingConfiguration(java.lang.String) -> getBucketLoggingConfiguration
    void setBucketLoggingConfiguration(com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest) -> setBucketLoggingConfiguration
    com.amazonaws.services.s3.model.BucketPolicy getBucketPolicy(java.lang.String) -> getBucketPolicy
    void setBucketPolicy(java.lang.String,java.lang.String) -> setBucketPolicy
    void deleteBucketPolicy(java.lang.String) -> deleteBucketPolicy
    com.amazonaws.services.s3.model.BucketPolicy getBucketPolicy(com.amazonaws.services.s3.model.GetBucketPolicyRequest) -> getBucketPolicy
    void setBucketPolicy(com.amazonaws.services.s3.model.SetBucketPolicyRequest) -> setBucketPolicy
    void deleteBucketPolicy(com.amazonaws.services.s3.model.DeleteBucketPolicyRequest) -> deleteBucketPolicy
    java.net.URL generatePresignedUrl(java.lang.String,java.lang.String,java.util.Date) -> generatePresignedUrl
    java.net.URL generatePresignedUrl(java.lang.String,java.lang.String,java.util.Date,com.amazonaws.HttpMethod) -> generatePresignedUrl
    java.net.URL generatePresignedUrl(com.amazonaws.services.s3.model.GeneratePresignedUrlRequest) -> generatePresignedUrl
    void abortMultipartUpload(com.amazonaws.services.s3.model.AbortMultipartUploadRequest) -> abortMultipartUpload
    com.amazonaws.services.s3.model.CompleteMultipartUploadResult completeMultipartUpload(com.amazonaws.services.s3.model.CompleteMultipartUploadRequest) -> completeMultipartUpload
    com.amazonaws.services.s3.model.InitiateMultipartUploadResult initiateMultipartUpload(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest) -> initiateMultipartUpload
    com.amazonaws.services.s3.model.MultipartUploadListing listMultipartUploads(com.amazonaws.services.s3.model.ListMultipartUploadsRequest) -> listMultipartUploads
    com.amazonaws.services.s3.model.PartListing listParts(com.amazonaws.services.s3.model.ListPartsRequest) -> listParts
    com.amazonaws.services.s3.model.UploadPartResult uploadPart(com.amazonaws.services.s3.model.UploadPartRequest) -> uploadPart
    com.amazonaws.services.s3.S3ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    void assertParameterNotNull(java.lang.Object,java.lang.String) -> a
    void fireProgressEvent(com.amazonaws.services.s3.model.ProgressListener,int) -> a
    com.amazonaws.services.s3.model.AccessControlList getAcl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.AmazonWebServiceRequest) -> a
    void setAcl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.services.s3.model.CannedAccessControlList,com.amazonaws.AmazonWebServiceRequest) -> a
    void setAcl(java.lang.String,java.lang.String,java.lang.String,com.amazonaws.services.s3.model.AccessControlList,com.amazonaws.AmazonWebServiceRequest) -> a
    void presignRequest(com.amazonaws.Request,com.amazonaws.HttpMethod,java.lang.String,java.lang.String,java.util.Date,java.lang.String) -> a
    java.net.URI convertToVirtualHostEndpoint(java.lang.String) -> a
    void populateRequestMetadata(com.amazonaws.Request,com.amazonaws.services.s3.model.ObjectMetadata) -> a
    void populateRequestWithMfaDetails(com.amazonaws.Request,com.amazonaws.services.s3.model.MultiFactorAuthentication) -> a
    void addDateHeader(com.amazonaws.Request,java.lang.String,java.util.Date) -> a
    void addStringListHeader(com.amazonaws.Request,java.lang.String,java.util.List) -> a
    void addResponseHeaderParameters(com.amazonaws.Request,com.amazonaws.services.s3.model.ResponseHeaderOverrides) -> a
    com.amazonaws.Request createRequest(java.lang.String,java.lang.String,com.amazonaws.AmazonWebServiceRequest,com.amazonaws.http.HttpMethodName) -> a
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller,java.lang.String,java.lang.String) -> a
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.http.HttpResponseHandler,java.lang.String,java.lang.String) -> a
com.amazonaws.services.s3.AmazonS3EncryptionClient -> com.amazonaws.services.s3.AmazonS3EncryptionClient:
    com.amazonaws.services.s3.model.EncryptionMaterials encryptionMaterials -> d
    com.amazonaws.services.s3.model.CryptoConfiguration cryptoConfig -> e
    org.apache.commons.logging.Log log -> f
    java.util.Map currentMultipartUploadSecretKeys -> g
    com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest) -> putObject
    com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest) -> getObject
    com.amazonaws.services.s3.model.ObjectMetadata getObject(com.amazonaws.services.s3.model.GetObjectRequest,java.io.File) -> getObject
    void deleteObject(com.amazonaws.services.s3.model.DeleteObjectRequest) -> deleteObject
    com.amazonaws.services.s3.model.CompleteMultipartUploadResult completeMultipartUpload(com.amazonaws.services.s3.model.CompleteMultipartUploadRequest) -> completeMultipartUpload
    com.amazonaws.services.s3.model.InitiateMultipartUploadResult initiateMultipartUpload(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest) -> initiateMultipartUpload
    com.amazonaws.services.s3.model.UploadPartResult uploadPart(com.amazonaws.services.s3.model.UploadPartRequest) -> uploadPart
    com.amazonaws.services.s3.model.S3Object getInstructionFile(com.amazonaws.services.s3.model.GetObjectRequest) -> a
    void assertParameterNotNull(java.lang.Object,java.lang.String) -> a
com.amazonaws.services.s3.Headers -> com.amazonaws.services.s3.Headers:
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String ETAG -> ETAG
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String SERVER -> SERVER
    java.lang.String AMAZON_PREFIX -> AMAZON_PREFIX
    java.lang.String S3_CANNED_ACL -> S3_CANNED_ACL
    java.lang.String S3_ALTERNATE_DATE -> S3_ALTERNATE_DATE
    java.lang.String S3_USER_METADATA_PREFIX -> S3_USER_METADATA_PREFIX
    java.lang.String S3_VERSION_ID -> S3_VERSION_ID
    java.lang.String S3_MFA -> S3_MFA
    java.lang.String REQUEST_ID -> REQUEST_ID
    java.lang.String EXTENDED_REQUEST_ID -> EXTENDED_REQUEST_ID
    java.lang.String METADATA_DIRECTIVE -> METADATA_DIRECTIVE
    java.lang.String SECURITY_TOKEN -> SECURITY_TOKEN
    java.lang.String STORAGE_CLASS -> STORAGE_CLASS
    java.lang.String SERVER_SIDE_ENCRYPTION -> SERVER_SIDE_ENCRYPTION
    java.lang.String COPY_SOURCE_IF_MATCH -> COPY_SOURCE_IF_MATCH
    java.lang.String COPY_SOURCE_IF_NO_MATCH -> COPY_SOURCE_IF_NO_MATCH
    java.lang.String COPY_SOURCE_IF_UNMODIFIED_SINCE -> COPY_SOURCE_IF_UNMODIFIED_SINCE
    java.lang.String COPY_SOURCE_IF_MODIFIED_SINCE -> COPY_SOURCE_IF_MODIFIED_SINCE
    java.lang.String RANGE -> RANGE
    java.lang.String COPY_PART_RANGE -> COPY_PART_RANGE
    java.lang.String GET_OBJECT_IF_MODIFIED_SINCE -> GET_OBJECT_IF_MODIFIED_SINCE
    java.lang.String GET_OBJECT_IF_UNMODIFIED_SINCE -> GET_OBJECT_IF_UNMODIFIED_SINCE
    java.lang.String GET_OBJECT_IF_MATCH -> GET_OBJECT_IF_MATCH
    java.lang.String GET_OBJECT_IF_NONE_MATCH -> GET_OBJECT_IF_NONE_MATCH
    java.lang.String CRYPTO_KEY -> CRYPTO_KEY
    java.lang.String CRYPTO_IV -> CRYPTO_IV
    java.lang.String MATERIALS_DESCRIPTION -> MATERIALS_DESCRIPTION
    java.lang.String CRYPTO_INSTRUCTION_FILE -> CRYPTO_INSTRUCTION_FILE
com.amazonaws.services.s3.S3ResponseMetadata -> com.amazonaws.services.s3.S3ResponseMetadata:
    java.lang.String HOST_ID -> HOST_ID
    java.lang.String getHostId() -> getHostId
com.amazonaws.services.s3.internal.AbstractS3ResponseHandler -> com.amazonaws.services.s3.internal.h:
    org.apache.commons.logging.Log log -> a
    java.util.Set ignoredHeaders -> b
    boolean needsConnectionLeftOpen() -> needsConnectionLeftOpen
    com.amazonaws.AmazonWebServiceResponse parseResponseMetadata(com.amazonaws.http.HttpResponse) -> b
    void populateObjectMetadata(com.amazonaws.http.HttpResponse,com.amazonaws.services.s3.model.ObjectMetadata) -> a
com.amazonaws.services.s3.internal.BucketNameUtils -> com.amazonaws.services.s3.internal.k:
com.amazonaws.services.s3.internal.Constants -> com.amazonaws.services.s3.internal.p:
    java.lang.String S3_HOSTNAME -> a
    java.lang.String S3_SERVICE_NAME -> b
    java.lang.String DEFAULT_ENCODING -> c
com.amazonaws.services.s3.internal.CopyObjectResponseHandler -> com.amazonaws.services.s3.internal.a:
    com.amazonaws.AmazonWebServiceResponse handle(com.amazonaws.http.HttpResponse) -> a
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.services.s3.internal.InputSubstream -> com.amazonaws.services.s3.internal.c:
    long currentPosition -> a
    long requestedOffset -> b
    long requestedLength -> c
    boolean closeSourceStream -> d
    long markedPosition -> e
    int read() -> read
    int read(byte[],int,int) -> read
    void mark(int) -> mark
    void reset() -> reset
    void close() -> close
    int available() -> available
com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream -> com.amazonaws.services.s3.internal.q:
    java.security.MessageDigest digest -> a
    byte[] getMd5Digest() -> a
    void reset() -> reset
    int read() -> read
    int read(byte[],int,int) -> read
com.amazonaws.services.s3.internal.Mimetypes -> com.amazonaws.services.s3.internal.l:
    org.apache.commons.logging.Log log -> a
    com.amazonaws.services.s3.internal.Mimetypes mimetypes -> b
    java.util.HashMap extensionToMimetypeMap -> c
    com.amazonaws.services.s3.internal.Mimetypes getInstance() -> a
    java.lang.String getMimetype(java.io.File) -> a
com.amazonaws.services.s3.internal.ProgressReportingInputStream -> com.amazonaws.services.s3.internal.v:
    com.amazonaws.services.s3.model.ProgressListener listener -> a
    int unnotifiedByteCount -> b
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
    void notify(int) -> a
com.amazonaws.services.s3.internal.RepeatableFileInputStream -> com.amazonaws.services.s3.internal.u:
    org.apache.commons.logging.Log log -> a
    java.io.File file -> b
    java.io.FileInputStream fis -> c
    long bytesReadPastMarkPoint -> d
    long markPoint -> e
    void reset() -> reset
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    int available() -> available
    void close() -> close
    int read() -> read
    long skip(long) -> skip
    int read(byte[],int,int) -> read
com.amazonaws.services.s3.internal.RepeatableInputStream -> com.amazonaws.services.s3.internal.f:
    org.apache.commons.logging.Log log -> a
    java.io.InputStream is -> b
    int bufferSize -> c
    int bufferOffset -> d
    long bytesReadPastMark -> e
    byte[] buffer -> f
    void reset() -> reset
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    int available() -> available
    void close() -> close
    int read(byte[],int,int) -> read
    int read() -> read
com.amazonaws.services.s3.internal.RestUtils -> com.amazonaws.services.s3.internal.j:
    java.util.List SIGNED_PARAMETERS -> a
    java.lang.String makeS3CanonicalString(java.lang.String,java.lang.String,com.amazonaws.Request,java.lang.String) -> a
com.amazonaws.services.s3.internal.S3ErrorResponseHandler -> com.amazonaws.services.s3.internal.s:
    void fillInErrorType(com.amazonaws.AmazonServiceException,com.amazonaws.http.HttpResponse) -> a
    boolean needsConnectionLeftOpen() -> needsConnectionLeftOpen
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.services.s3.internal.S3MetadataResponseHandler -> com.amazonaws.services.s3.internal.t:
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.services.s3.internal.S3ObjectResponseHandler -> com.amazonaws.services.s3.internal.o:
    boolean needsConnectionLeftOpen() -> needsConnectionLeftOpen
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.services.s3.internal.S3QueryStringSigner -> com.amazonaws.services.s3.internal.d:
    java.lang.String httpVerb -> a
    java.lang.String resourcePath -> b
    java.util.Date expiration -> c
    void sign(com.amazonaws.Request,com.amazonaws.auth.AWSCredentials) -> sign
    void addSessionCredentials(com.amazonaws.Request,com.amazonaws.auth.AWSSessionCredentials) -> addSessionCredentials
com.amazonaws.services.s3.internal.S3Signer -> com.amazonaws.services.s3.internal.e:
    org.apache.commons.logging.Log log -> a
    java.lang.String httpVerb -> b
    java.lang.String resourcePath -> c
    void sign(com.amazonaws.Request,com.amazonaws.auth.AWSCredentials) -> sign
    void addSessionCredentials(com.amazonaws.Request,com.amazonaws.auth.AWSSessionCredentials) -> addSessionCredentials
com.amazonaws.services.s3.internal.S3StringResponseHandler -> com.amazonaws.services.s3.internal.g:
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.services.s3.internal.S3XmlResponseHandler -> com.amazonaws.services.s3.internal.r:
    com.amazonaws.transform.Unmarshaller responseUnmarshaller -> a
    org.apache.commons.logging.Log log -> b
    java.util.Map responseHeaders -> c
    com.amazonaws.AmazonWebServiceResponse handle(com.amazonaws.http.HttpResponse) -> a
    java.util.Map getResponseHeaders() -> a
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.services.s3.internal.ServerSideEncryptionResponseHandler -> com.amazonaws.services.s3.internal.m:
    com.amazonaws.AmazonWebServiceResponse handle(com.amazonaws.http.HttpResponse) -> a
    java.lang.Object handle(com.amazonaws.http.HttpResponse) -> handle
com.amazonaws.services.s3.internal.ServerSideEncryptionResult -> com.amazonaws.services.s3.internal.b:
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
com.amazonaws.services.s3.internal.ServiceUtils -> com.amazonaws.services.s3.internal.n:
    org.apache.commons.logging.Log log -> a
    com.amazonaws.util.DateUtils dateUtils -> b
    java.util.Date parseIso8601Date(java.lang.String) -> a
    java.util.Date parseRfc822Date(java.lang.String) -> b
    java.lang.String formatRfc822Date(java.util.Date) -> a
    boolean isMultipartUploadETag(java.lang.String) -> c
    byte[] fromHex(java.lang.String) -> d
    java.lang.String toBase64(byte[]) -> a
    byte[] fromBase64(java.lang.String) -> e
    byte[] toByteArray(java.lang.String) -> f
    byte[] computeMD5Hash(java.io.InputStream) -> a
    java.lang.String removeQuotes(java.lang.String) -> g
    java.lang.String urlEncode(java.lang.String) -> h
    java.net.URL convertRequestToUrl(com.amazonaws.Request) -> a
    java.lang.String join(java.util.List) -> a
com.amazonaws.services.s3.internal.XmlWriter -> com.amazonaws.services.s3.internal.i:
    java.util.List tags -> a
    java.lang.StringBuilder sb -> b
    boolean $assertionsDisabled -> c
    com.amazonaws.services.s3.internal.XmlWriter start(java.lang.String) -> a
    com.amazonaws.services.s3.internal.XmlWriter start(java.lang.String,java.lang.String,java.lang.String) -> a
    com.amazonaws.services.s3.internal.XmlWriter start(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    com.amazonaws.services.s3.internal.XmlWriter end() -> a
    byte[] getBytes() -> b
    java.lang.String toString() -> toString
    com.amazonaws.services.s3.internal.XmlWriter value(java.lang.String) -> b
    void writeAttr(java.lang.String,java.lang.String) -> a
    void appendEscapedString(java.lang.String,java.lang.StringBuilder) -> a
com.amazonaws.services.s3.internal.crypto.AdjustedRangeInputStream -> com.amazonaws.services.s3.internal.crypto.a:
    java.io.InputStream decryptedContents -> a
    long virtualAvailable -> b
    boolean closed -> c
    void initializeForRead(long,long) -> a
    int read() -> read
    int read(byte[],int,int) -> read
    int available() -> available
    void close() -> close
com.amazonaws.services.s3.internal.crypto.ByteRangeCapturingInputStream -> com.amazonaws.services.s3.internal.crypto.c:
    long startingPosition -> a
    long endingPosition -> b
    long streamPosition -> c
    int blockPosition -> d
    byte[] block -> e
    long markedStreamPosition -> f
    int markedBlockPosition -> g
    byte[] getBlock() -> a
    int read() -> read
    void mark(int) -> mark
    void reset() -> reset
    int read(byte[],int,int) -> read
com.amazonaws.services.s3.internal.crypto.EncryptedUploadContext -> com.amazonaws.services.s3.internal.crypto.d:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    javax.crypto.SecretKey envelopeEncryptionKey -> c
    byte[] firstIV -> d
    byte[] nextIV -> e
    boolean hasFinalPartBeenSeen -> f
    java.lang.String getBucketName() -> a
    java.lang.String getKey() -> b
    javax.crypto.SecretKey getEnvelopeEncryptionKey() -> c
    void setNextInitializationVector(byte[]) -> a
    byte[] getNextInitializationVector() -> d
    boolean hasFinalPartBeenSeen() -> e
    void setHasFinalPartBeenSeen(boolean) -> a
    void setFirstInitializationVector(byte[]) -> b
    byte[] getFirstInitializationVector() -> f
com.amazonaws.services.s3.internal.crypto.EncryptionInstruction -> com.amazonaws.services.s3.internal.crypto.b:
    java.util.Map materialsDescription -> a
    byte[] encryptedSymmetricKey -> b
    javax.crypto.Cipher symmetricCipher -> c
    java.util.Map getMaterialsDescription() -> a
    byte[] getEncryptedSymmetricKey() -> b
    javax.crypto.Cipher getSymmetricCipher() -> c
com.amazonaws.services.s3.internal.crypto.JceEncryptionConstants -> com.amazonaws.services.s3.internal.crypto.e:
    java.lang.String SYMMETRIC_KEY_ALGORITHM -> a
    java.lang.String SYMMETRIC_CIPHER_METHOD -> b
    int SYMMETRIC_KEY_LENGTH -> c
    int SYMMETRIC_CIPHER_BLOCK_SIZE -> d
com.amazonaws.services.s3.model.AbortMultipartUploadRequest -> com.amazonaws.services.s3.model.AbortMultipartUploadRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String uploadId -> c
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.AbortMultipartUploadRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.AbortMultipartUploadRequest withKey(java.lang.String) -> withKey
    java.lang.String getUploadId() -> getUploadId
    void setUploadId(java.lang.String) -> setUploadId
    com.amazonaws.services.s3.model.AbortMultipartUploadRequest withUploadId(java.lang.String) -> withUploadId
com.amazonaws.services.s3.model.AccessControlList -> com.amazonaws.services.s3.model.AccessControlList:
    java.util.HashSet grants -> a
    com.amazonaws.services.s3.model.Owner owner -> b
    com.amazonaws.services.s3.model.Owner getOwner() -> getOwner
    void setOwner(com.amazonaws.services.s3.model.Owner) -> setOwner
    void grantPermission(com.amazonaws.services.s3.model.Grantee,com.amazonaws.services.s3.model.Permission) -> grantPermission
    void grantAllPermissions(com.amazonaws.services.s3.model.Grant[]) -> grantAllPermissions
    void revokeAllPermissions(com.amazonaws.services.s3.model.Grantee) -> revokeAllPermissions
    java.util.Set getGrants() -> getGrants
    java.lang.String toString() -> toString
com.amazonaws.services.s3.model.AmazonS3Exception -> com.amazonaws.services.s3.model.AmazonS3Exception:
    java.lang.String extendedRequestId -> a
    java.lang.String getExtendedRequestId() -> getExtendedRequestId
    void setExtendedRequestId(java.lang.String) -> setExtendedRequestId
    java.lang.String toString() -> toString
com.amazonaws.services.s3.model.Bucket -> com.amazonaws.services.s3.model.Bucket:
    java.lang.String name -> a
    com.amazonaws.services.s3.model.Owner owner -> b
    java.util.Date creationDate -> c
    java.lang.String toString() -> toString
    com.amazonaws.services.s3.model.Owner getOwner() -> getOwner
    void setOwner(com.amazonaws.services.s3.model.Owner) -> setOwner
    java.util.Date getCreationDate() -> getCreationDate
    void setCreationDate(java.util.Date) -> setCreationDate
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
com.amazonaws.services.s3.model.BucketLoggingConfiguration -> com.amazonaws.services.s3.model.BucketLoggingConfiguration:
    java.lang.String destinationBucketName -> a
    java.lang.String logFilePrefix -> b
    boolean isLoggingEnabled() -> isLoggingEnabled
    java.lang.String getLogFilePrefix() -> getLogFilePrefix
    void setLogFilePrefix(java.lang.String) -> setLogFilePrefix
    java.lang.String getDestinationBucketName() -> getDestinationBucketName
    void setDestinationBucketName(java.lang.String) -> setDestinationBucketName
    java.lang.String toString() -> toString
com.amazonaws.services.s3.model.BucketNotificationConfiguration -> com.amazonaws.services.s3.model.BucketNotificationConfiguration:
    java.util.List topicConfigurations -> a
    com.amazonaws.services.s3.model.BucketNotificationConfiguration withTopicConfigurations(com.amazonaws.services.s3.model.BucketNotificationConfiguration$TopicConfiguration[]) -> withTopicConfigurations
    void setTopicConfigurations(java.util.Collection) -> setTopicConfigurations
    java.util.List getTopicConfigurations() -> getTopicConfigurations
    java.lang.String toString() -> toString
com.amazonaws.services.s3.model.BucketNotificationConfiguration$TopicConfiguration -> com.amazonaws.services.s3.model.BucketNotificationConfiguration$TopicConfiguration:
    java.lang.String topic -> a
    java.lang.String event -> b
    java.lang.String getTopic() -> getTopic
    java.lang.String getEvent() -> getEvent
    java.lang.String toString() -> toString
com.amazonaws.services.s3.model.BucketPolicy -> com.amazonaws.services.s3.model.BucketPolicy:
    java.lang.String policyText -> a
    java.lang.String getPolicyText() -> getPolicyText
    void setPolicyText(java.lang.String) -> setPolicyText
com.amazonaws.services.s3.model.BucketVersioningConfiguration -> com.amazonaws.services.s3.model.BucketVersioningConfiguration:
    java.lang.String OFF -> OFF
    java.lang.String SUSPENDED -> SUSPENDED
    java.lang.String ENABLED -> ENABLED
    java.lang.String status -> a
    java.lang.Boolean isMfaDeleteEnabled -> b
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    com.amazonaws.services.s3.model.BucketVersioningConfiguration withStatus(java.lang.String) -> withStatus
    java.lang.Boolean isMfaDeleteEnabled() -> isMfaDeleteEnabled
    void setMfaDeleteEnabled(java.lang.Boolean) -> setMfaDeleteEnabled
    com.amazonaws.services.s3.model.BucketVersioningConfiguration withMfaDeleteEnabled(java.lang.Boolean) -> withMfaDeleteEnabled
com.amazonaws.services.s3.model.BucketWebsiteConfiguration -> com.amazonaws.services.s3.model.BucketWebsiteConfiguration:
    java.lang.String indexDocumentSuffix -> a
    java.lang.String errorDocument -> b
    java.lang.String getIndexDocumentSuffix() -> getIndexDocumentSuffix
    void setIndexDocumentSuffix(java.lang.String) -> setIndexDocumentSuffix
    java.lang.String getErrorDocument() -> getErrorDocument
    void setErrorDocument(java.lang.String) -> setErrorDocument
com.amazonaws.services.s3.model.CannedAccessControlList -> com.amazonaws.services.s3.model.CannedAccessControlList:
    com.amazonaws.services.s3.model.CannedAccessControlList Private -> Private
    com.amazonaws.services.s3.model.CannedAccessControlList PublicRead -> PublicRead
    com.amazonaws.services.s3.model.CannedAccessControlList PublicReadWrite -> PublicReadWrite
    com.amazonaws.services.s3.model.CannedAccessControlList AuthenticatedRead -> AuthenticatedRead
    com.amazonaws.services.s3.model.CannedAccessControlList LogDeliveryWrite -> LogDeliveryWrite
    com.amazonaws.services.s3.model.CannedAccessControlList BucketOwnerRead -> BucketOwnerRead
    com.amazonaws.services.s3.model.CannedAccessControlList BucketOwnerFullControl -> BucketOwnerFullControl
    java.lang.String cannedAclHeader -> a
    com.amazonaws.services.s3.model.CannedAccessControlList[] $VALUES -> b
    com.amazonaws.services.s3.model.CannedAccessControlList[] values() -> values
    com.amazonaws.services.s3.model.CannedAccessControlList valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.amazonaws.services.s3.model.CanonicalGrantee -> com.amazonaws.services.s3.model.CanonicalGrantee:
    java.lang.String id -> a
    java.lang.String displayName -> b
    void setIdentifier(java.lang.String) -> setIdentifier
    java.lang.String getIdentifier() -> getIdentifier
    void setDisplayName(java.lang.String) -> setDisplayName
    java.lang.String getDisplayName() -> getDisplayName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amazonaws.services.s3.model.CompleteMultipartUploadRequest -> com.amazonaws.services.s3.model.CompleteMultipartUploadRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String uploadId -> c
    java.util.List partETags -> d
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.CompleteMultipartUploadRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.CompleteMultipartUploadRequest withKey(java.lang.String) -> withKey
    java.lang.String getUploadId() -> getUploadId
    void setUploadId(java.lang.String) -> setUploadId
    com.amazonaws.services.s3.model.CompleteMultipartUploadRequest withUploadId(java.lang.String) -> withUploadId
    java.util.List getPartETags() -> getPartETags
    void setPartETags(java.util.List) -> setPartETags
    com.amazonaws.services.s3.model.CompleteMultipartUploadRequest withPartETags(java.util.List) -> withPartETags
    com.amazonaws.services.s3.model.CompleteMultipartUploadRequest withPartETags(com.amazonaws.services.s3.model.UploadPartResult[]) -> withPartETags
    com.amazonaws.services.s3.model.CompleteMultipartUploadRequest withPartETags(java.util.Collection) -> withPartETags
com.amazonaws.services.s3.model.CompleteMultipartUploadResult -> com.amazonaws.services.s3.model.CompleteMultipartUploadResult:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String location -> c
    java.lang.String eTag -> d
    java.lang.String versionId -> e
    java.lang.String serverSideEncryption -> f
    java.lang.String getLocation() -> getLocation
    void setLocation(java.lang.String) -> setLocation
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
com.amazonaws.services.s3.model.CopyObjectRequest -> com.amazonaws.services.s3.model.CopyObjectRequest:
    java.lang.String sourceBucketName -> a
    java.lang.String sourceKey -> b
    java.lang.String sourceVersionId -> c
    java.lang.String destinationBucketName -> d
    java.lang.String destinationKey -> e
    java.lang.String storageClass -> f
    com.amazonaws.services.s3.model.ObjectMetadata newObjectMetadata -> g
    com.amazonaws.services.s3.model.CannedAccessControlList cannedACL -> h
    java.util.List matchingETagConstraints -> i
    java.util.List nonmatchingEtagConstraints -> j
    java.util.Date unmodifiedSinceConstraint -> k
    java.util.Date modifiedSinceConstraint -> l
    java.lang.String getSourceBucketName() -> getSourceBucketName
    void setSourceBucketName(java.lang.String) -> setSourceBucketName
    com.amazonaws.services.s3.model.CopyObjectRequest withSourceBucketName(java.lang.String) -> withSourceBucketName
    java.lang.String getSourceKey() -> getSourceKey
    void setSourceKey(java.lang.String) -> setSourceKey
    com.amazonaws.services.s3.model.CopyObjectRequest withSourceKey(java.lang.String) -> withSourceKey
    java.lang.String getSourceVersionId() -> getSourceVersionId
    void setSourceVersionId(java.lang.String) -> setSourceVersionId
    com.amazonaws.services.s3.model.CopyObjectRequest withSourceVersionId(java.lang.String) -> withSourceVersionId
    java.lang.String getDestinationBucketName() -> getDestinationBucketName
    void setDestinationBucketName(java.lang.String) -> setDestinationBucketName
    com.amazonaws.services.s3.model.CopyObjectRequest withDestinationBucketName(java.lang.String) -> withDestinationBucketName
    java.lang.String getDestinationKey() -> getDestinationKey
    void setDestinationKey(java.lang.String) -> setDestinationKey
    com.amazonaws.services.s3.model.CopyObjectRequest withDestinationKey(java.lang.String) -> withDestinationKey
    java.lang.String getStorageClass() -> getStorageClass
    void setStorageClass(java.lang.String) -> setStorageClass
    com.amazonaws.services.s3.model.CopyObjectRequest withStorageClass(java.lang.String) -> withStorageClass
    void setStorageClass(com.amazonaws.services.s3.model.StorageClass) -> setStorageClass
    com.amazonaws.services.s3.model.CopyObjectRequest withStorageClass(com.amazonaws.services.s3.model.StorageClass) -> withStorageClass
    com.amazonaws.services.s3.model.CannedAccessControlList getCannedAccessControlList() -> getCannedAccessControlList
    void setCannedAccessControlList(com.amazonaws.services.s3.model.CannedAccessControlList) -> setCannedAccessControlList
    com.amazonaws.services.s3.model.CopyObjectRequest withCannedAccessControlList(com.amazonaws.services.s3.model.CannedAccessControlList) -> withCannedAccessControlList
    com.amazonaws.services.s3.model.ObjectMetadata getNewObjectMetadata() -> getNewObjectMetadata
    void setNewObjectMetadata(com.amazonaws.services.s3.model.ObjectMetadata) -> setNewObjectMetadata
    com.amazonaws.services.s3.model.CopyObjectRequest withNewObjectMetadata(com.amazonaws.services.s3.model.ObjectMetadata) -> withNewObjectMetadata
    java.util.List getMatchingETagConstraints() -> getMatchingETagConstraints
    void setMatchingETagConstraints(java.util.List) -> setMatchingETagConstraints
    com.amazonaws.services.s3.model.CopyObjectRequest withMatchingETagConstraint(java.lang.String) -> withMatchingETagConstraint
    java.util.List getNonmatchingETagConstraints() -> getNonmatchingETagConstraints
    void setNonmatchingETagConstraints(java.util.List) -> setNonmatchingETagConstraints
    com.amazonaws.services.s3.model.CopyObjectRequest withNonmatchingETagConstraint(java.lang.String) -> withNonmatchingETagConstraint
    java.util.Date getUnmodifiedSinceConstraint() -> getUnmodifiedSinceConstraint
    void setUnmodifiedSinceConstraint(java.util.Date) -> setUnmodifiedSinceConstraint
    com.amazonaws.services.s3.model.CopyObjectRequest withUnmodifiedSinceConstraint(java.util.Date) -> withUnmodifiedSinceConstraint
    java.util.Date getModifiedSinceConstraint() -> getModifiedSinceConstraint
    void setModifiedSinceConstraint(java.util.Date) -> setModifiedSinceConstraint
    com.amazonaws.services.s3.model.CopyObjectRequest withModifiedSinceConstraint(java.util.Date) -> withModifiedSinceConstraint
com.amazonaws.services.s3.model.CopyObjectResult -> com.amazonaws.services.s3.model.CopyObjectResult:
    java.lang.String etag -> a
    java.util.Date lastModifiedDate -> b
    java.lang.String versionId -> c
    java.lang.String serverSideEncryption -> d
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    void setLastModifiedDate(java.util.Date) -> setLastModifiedDate
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
com.amazonaws.services.s3.model.CopyPartRequest -> com.amazonaws.services.s3.model.CopyPartRequest:
    java.lang.String uploadId -> a
    int partNumber -> b
    java.lang.String sourceBucketName -> c
    java.lang.String sourceKey -> d
    java.lang.String sourceVersionId -> e
    java.lang.String destinationBucketName -> f
    java.lang.String destinationKey -> g
    java.util.List matchingETagConstraints -> h
    java.util.List nonmatchingEtagConstraints -> i
    java.util.Date unmodifiedSinceConstraint -> j
    java.util.Date modifiedSinceConstraint -> k
    java.lang.Long firstByte -> l
    java.lang.Long lastByte -> m
    java.lang.String getUploadId() -> getUploadId
    void setUploadId(java.lang.String) -> setUploadId
    com.amazonaws.services.s3.model.CopyPartRequest withUploadId(java.lang.String) -> withUploadId
    int getPartNumber() -> getPartNumber
    void setPartNumber(int) -> setPartNumber
    com.amazonaws.services.s3.model.CopyPartRequest withPartNumber(int) -> withPartNumber
    java.lang.String getSourceBucketName() -> getSourceBucketName
    void setSourceBucketName(java.lang.String) -> setSourceBucketName
    com.amazonaws.services.s3.model.CopyPartRequest withSourceBucketName(java.lang.String) -> withSourceBucketName
    java.lang.String getSourceKey() -> getSourceKey
    void setSourceKey(java.lang.String) -> setSourceKey
    com.amazonaws.services.s3.model.CopyPartRequest withSourceKey(java.lang.String) -> withSourceKey
    java.lang.String getSourceVersionId() -> getSourceVersionId
    void setSourceVersionId(java.lang.String) -> setSourceVersionId
    com.amazonaws.services.s3.model.CopyPartRequest withSourceVersionId(java.lang.String) -> withSourceVersionId
    java.lang.String getDestinationBucketName() -> getDestinationBucketName
    void setDestinationBucketName(java.lang.String) -> setDestinationBucketName
    com.amazonaws.services.s3.model.CopyPartRequest withDestinationBucketName(java.lang.String) -> withDestinationBucketName
    java.lang.String getDestinationKey() -> getDestinationKey
    void setDestinationKey(java.lang.String) -> setDestinationKey
    com.amazonaws.services.s3.model.CopyPartRequest withDestinationKey(java.lang.String) -> withDestinationKey
    java.lang.Long getFirstByte() -> getFirstByte
    void setFirstByte(java.lang.Long) -> setFirstByte
    com.amazonaws.services.s3.model.CopyPartRequest withFirstByte(java.lang.Long) -> withFirstByte
    java.lang.Long getLastByte() -> getLastByte
    void setLastByte(java.lang.Long) -> setLastByte
    com.amazonaws.services.s3.model.CopyPartRequest withLastByte(java.lang.Long) -> withLastByte
    java.util.List getMatchingETagConstraints() -> getMatchingETagConstraints
    void setMatchingETagConstraints(java.util.List) -> setMatchingETagConstraints
    com.amazonaws.services.s3.model.CopyPartRequest withMatchingETagConstraint(java.lang.String) -> withMatchingETagConstraint
    java.util.List getNonmatchingETagConstraints() -> getNonmatchingETagConstraints
    void setNonmatchingETagConstraints(java.util.List) -> setNonmatchingETagConstraints
    com.amazonaws.services.s3.model.CopyPartRequest withNonmatchingETagConstraint(java.lang.String) -> withNonmatchingETagConstraint
    java.util.Date getUnmodifiedSinceConstraint() -> getUnmodifiedSinceConstraint
    void setUnmodifiedSinceConstraint(java.util.Date) -> setUnmodifiedSinceConstraint
    com.amazonaws.services.s3.model.CopyPartRequest withUnmodifiedSinceConstraint(java.util.Date) -> withUnmodifiedSinceConstraint
    java.util.Date getModifiedSinceConstraint() -> getModifiedSinceConstraint
    void setModifiedSinceConstraint(java.util.Date) -> setModifiedSinceConstraint
    com.amazonaws.services.s3.model.CopyPartRequest withModifiedSinceConstraint(java.util.Date) -> withModifiedSinceConstraint
com.amazonaws.services.s3.model.CopyPartResult -> com.amazonaws.services.s3.model.CopyPartResult:
    java.lang.String etag -> a
    java.util.Date lastModifiedDate -> b
    java.lang.String versionId -> c
    int partNumber -> d
    java.lang.String serverSideEncryption -> e
    int getPartNumber() -> getPartNumber
    void setPartNumber(int) -> setPartNumber
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    java.util.Date getLastModifiedDate() -> getLastModifiedDate
    void setLastModifiedDate(java.util.Date) -> setLastModifiedDate
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
com.amazonaws.services.s3.model.CreateBucketRequest -> com.amazonaws.services.s3.model.CreateBucketRequest:
    java.lang.String bucketName -> a
    java.lang.String region -> b
    com.amazonaws.services.s3.model.CannedAccessControlList cannedAcl -> c
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getBucketName() -> getBucketName
    void setRegion(java.lang.String) -> setRegion
    java.lang.String getRegion() -> getRegion
    com.amazonaws.services.s3.model.CannedAccessControlList getCannedAcl() -> getCannedAcl
    void setCannedAcl(com.amazonaws.services.s3.model.CannedAccessControlList) -> setCannedAcl
    com.amazonaws.services.s3.model.CreateBucketRequest withCannedAcl(com.amazonaws.services.s3.model.CannedAccessControlList) -> withCannedAcl
com.amazonaws.services.s3.model.CryptoConfiguration -> com.amazonaws.services.s3.model.CryptoConfiguration:
    com.amazonaws.services.s3.model.CryptoStorageMode storageMode -> a
    java.security.Provider cryptoProvider -> b
    void setStorageMode(com.amazonaws.services.s3.model.CryptoStorageMode) -> setStorageMode
    com.amazonaws.services.s3.model.CryptoConfiguration withStorageMode(com.amazonaws.services.s3.model.CryptoStorageMode) -> withStorageMode
    com.amazonaws.services.s3.model.CryptoStorageMode getStorageMode() -> getStorageMode
    void setCryptoProvider(java.security.Provider) -> setCryptoProvider
    com.amazonaws.services.s3.model.CryptoConfiguration withCryptoProvider(java.security.Provider) -> withCryptoProvider
    java.security.Provider getCryptoProvider() -> getCryptoProvider
com.amazonaws.services.s3.model.CryptoStorageMode -> com.amazonaws.services.s3.model.CryptoStorageMode:
    com.amazonaws.services.s3.model.CryptoStorageMode InstructionFile -> InstructionFile
    com.amazonaws.services.s3.model.CryptoStorageMode ObjectMetadata -> ObjectMetadata
    com.amazonaws.services.s3.model.CryptoStorageMode[] $VALUES -> a
    com.amazonaws.services.s3.model.CryptoStorageMode[] values() -> values
    com.amazonaws.services.s3.model.CryptoStorageMode valueOf(java.lang.String) -> valueOf
com.amazonaws.services.s3.model.DeleteBucketPolicyRequest -> com.amazonaws.services.s3.model.DeleteBucketPolicyRequest:
    java.lang.String bucketName -> a
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.DeleteBucketPolicyRequest withBucketName(java.lang.String) -> withBucketName
com.amazonaws.services.s3.model.DeleteBucketRequest -> com.amazonaws.services.s3.model.DeleteBucketRequest:
    java.lang.String bucketName -> a
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getBucketName() -> getBucketName
com.amazonaws.services.s3.model.DeleteBucketWebsiteConfigurationRequest -> com.amazonaws.services.s3.model.DeleteBucketWebsiteConfigurationRequest:
    java.lang.String bucketName -> a
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getBucketName() -> getBucketName
    com.amazonaws.services.s3.model.DeleteBucketWebsiteConfigurationRequest withBucketName(java.lang.String) -> withBucketName
com.amazonaws.services.s3.model.DeleteObjectRequest -> com.amazonaws.services.s3.model.DeleteObjectRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.DeleteObjectRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.DeleteObjectRequest withKey(java.lang.String) -> withKey
com.amazonaws.services.s3.model.DeleteVersionRequest -> com.amazonaws.services.s3.model.DeleteVersionRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String versionId -> c
    com.amazonaws.services.s3.model.MultiFactorAuthentication mfa -> d
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.DeleteVersionRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.DeleteVersionRequest withKey(java.lang.String) -> withKey
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    com.amazonaws.services.s3.model.DeleteVersionRequest withVersionId(java.lang.String) -> withVersionId
    com.amazonaws.services.s3.model.MultiFactorAuthentication getMfa() -> getMfa
    void setMfa(com.amazonaws.services.s3.model.MultiFactorAuthentication) -> setMfa
    com.amazonaws.services.s3.model.DeleteVersionRequest withMfa(com.amazonaws.services.s3.model.MultiFactorAuthentication) -> withMfa
com.amazonaws.services.s3.model.EmailAddressGrantee -> com.amazonaws.services.s3.model.EmailAddressGrantee:
    java.lang.String emailAddress -> a
    void setIdentifier(java.lang.String) -> setIdentifier
    java.lang.String getIdentifier() -> getIdentifier
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amazonaws.services.s3.model.EncryptionMaterials -> com.amazonaws.services.s3.model.EncryptionMaterials:
    java.security.KeyPair keyPair -> a
    javax.crypto.SecretKey symmetricKey -> b
    java.security.KeyPair getKeyPair() -> getKeyPair
    javax.crypto.SecretKey getSymmetricKey() -> getSymmetricKey
    java.util.Map getMaterialsDescription() -> getMaterialsDescription
    com.amazonaws.services.s3.model.EncryptionMaterialsAccessor getAccessor() -> getAccessor
com.amazonaws.services.s3.model.EncryptionMaterialsAccessor -> com.amazonaws.services.s3.model.EncryptionMaterialsAccessor:
    com.amazonaws.services.s3.model.EncryptionMaterials getEncryptionMaterials(java.util.Map) -> getEncryptionMaterials
com.amazonaws.services.s3.model.GeneratePresignedUrlRequest -> com.amazonaws.services.s3.model.GeneratePresignedUrlRequest:
    com.amazonaws.HttpMethod method -> a
    java.lang.String bucketName -> b
    java.lang.String key -> c
    java.util.Date expiration -> d
    java.util.Map requestParameters -> e
    com.amazonaws.services.s3.model.ResponseHeaderOverrides responseHeaders -> f
    com.amazonaws.HttpMethod getMethod() -> getMethod
    void setMethod(com.amazonaws.HttpMethod) -> setMethod
    com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withMethod(com.amazonaws.HttpMethod) -> withMethod
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withKey(java.lang.String) -> withKey
    java.util.Date getExpiration() -> getExpiration
    void setExpiration(java.util.Date) -> setExpiration
    com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withExpiration(java.util.Date) -> withExpiration
    void addRequestParameter(java.lang.String,java.lang.String) -> addRequestParameter
    java.util.Map getRequestParameters() -> getRequestParameters
    com.amazonaws.services.s3.model.ResponseHeaderOverrides getResponseHeaders() -> getResponseHeaders
    void setResponseHeaders(com.amazonaws.services.s3.model.ResponseHeaderOverrides) -> setResponseHeaders
    com.amazonaws.services.s3.model.GeneratePresignedUrlRequest withResponseHeaders(com.amazonaws.services.s3.model.ResponseHeaderOverrides) -> withResponseHeaders
com.amazonaws.services.s3.model.GenericBucketRequest -> com.amazonaws.services.s3.model.GenericBucketRequest:
    java.lang.String bucket -> a
    java.lang.String getBucket() -> getBucket
com.amazonaws.services.s3.model.GetBucketAclRequest -> com.amazonaws.services.s3.model.GetBucketAclRequest:
    java.lang.String bucketName -> a
    java.lang.String getBucketName() -> getBucketName
com.amazonaws.services.s3.model.GetBucketLocationRequest -> com.amazonaws.services.s3.model.GetBucketLocationRequest:
    java.lang.String bucketName -> a
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.GetBucketLocationRequest withBucketName(java.lang.String) -> withBucketName
com.amazonaws.services.s3.model.GetBucketPolicyRequest -> com.amazonaws.services.s3.model.GetBucketPolicyRequest:
    java.lang.String bucketName -> a
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.GetBucketPolicyRequest withBucketName(java.lang.String) -> withBucketName
com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest -> com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest:
    java.lang.String bucketName -> a
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getBucketName() -> getBucketName
    com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest withBucketName(java.lang.String) -> withBucketName
com.amazonaws.services.s3.model.GetObjectMetadataRequest -> com.amazonaws.services.s3.model.GetObjectMetadataRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String versionId -> c
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.GetObjectMetadataRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.GetObjectMetadataRequest withKey(java.lang.String) -> withKey
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    com.amazonaws.services.s3.model.GetObjectMetadataRequest withVersionId(java.lang.String) -> withVersionId
com.amazonaws.services.s3.model.GetObjectRequest -> com.amazonaws.services.s3.model.GetObjectRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String versionId -> c
    long[] range -> d
    java.util.List matchingETagConstraints -> e
    java.util.List nonmatchingEtagConstraints -> f
    java.util.Date unmodifiedSinceConstraint -> g
    java.util.Date modifiedSinceConstraint -> h
    com.amazonaws.services.s3.model.ResponseHeaderOverrides responseHeaders -> i
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.GetObjectRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.GetObjectRequest withKey(java.lang.String) -> withKey
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    com.amazonaws.services.s3.model.GetObjectRequest withVersionId(java.lang.String) -> withVersionId
    long[] getRange() -> getRange
    void setRange(long,long) -> setRange
    com.amazonaws.services.s3.model.GetObjectRequest withRange(long,long) -> withRange
    java.util.List getMatchingETagConstraints() -> getMatchingETagConstraints
    void setMatchingETagConstraints(java.util.List) -> setMatchingETagConstraints
    com.amazonaws.services.s3.model.GetObjectRequest withMatchingETagConstraint(java.lang.String) -> withMatchingETagConstraint
    java.util.List getNonmatchingETagConstraints() -> getNonmatchingETagConstraints
    void setNonmatchingETagConstraints(java.util.List) -> setNonmatchingETagConstraints
    com.amazonaws.services.s3.model.GetObjectRequest withNonmatchingETagConstraint(java.lang.String) -> withNonmatchingETagConstraint
    java.util.Date getUnmodifiedSinceConstraint() -> getUnmodifiedSinceConstraint
    void setUnmodifiedSinceConstraint(java.util.Date) -> setUnmodifiedSinceConstraint
    com.amazonaws.services.s3.model.GetObjectRequest withUnmodifiedSinceConstraint(java.util.Date) -> withUnmodifiedSinceConstraint
    java.util.Date getModifiedSinceConstraint() -> getModifiedSinceConstraint
    void setModifiedSinceConstraint(java.util.Date) -> setModifiedSinceConstraint
    com.amazonaws.services.s3.model.GetObjectRequest withModifiedSinceConstraint(java.util.Date) -> withModifiedSinceConstraint
    com.amazonaws.services.s3.model.ResponseHeaderOverrides getResponseHeaders() -> getResponseHeaders
    void setResponseHeaders(com.amazonaws.services.s3.model.ResponseHeaderOverrides) -> setResponseHeaders
    com.amazonaws.services.s3.model.GetObjectRequest withResponseHeaders(com.amazonaws.services.s3.model.ResponseHeaderOverrides) -> withResponseHeaders
com.amazonaws.services.s3.model.Grant -> com.amazonaws.services.s3.model.Grant:
    com.amazonaws.services.s3.model.Grantee grantee -> a
    com.amazonaws.services.s3.model.Permission permission -> b
    com.amazonaws.services.s3.model.Grantee getGrantee() -> getGrantee
    com.amazonaws.services.s3.model.Permission getPermission() -> getPermission
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amazonaws.services.s3.model.Grantee -> com.amazonaws.services.s3.model.Grantee:
    void setIdentifier(java.lang.String) -> setIdentifier
    java.lang.String getIdentifier() -> getIdentifier
com.amazonaws.services.s3.model.GroupGrantee -> com.amazonaws.services.s3.model.GroupGrantee:
    com.amazonaws.services.s3.model.GroupGrantee AllUsers -> AllUsers
    com.amazonaws.services.s3.model.GroupGrantee AuthenticatedUsers -> AuthenticatedUsers
    com.amazonaws.services.s3.model.GroupGrantee LogDelivery -> LogDelivery
    java.lang.String groupUri -> a
    com.amazonaws.services.s3.model.GroupGrantee[] $VALUES -> b
    com.amazonaws.services.s3.model.GroupGrantee[] values() -> values
    com.amazonaws.services.s3.model.GroupGrantee valueOf(java.lang.String) -> valueOf
    java.lang.String getIdentifier() -> getIdentifier
    void setIdentifier(java.lang.String) -> setIdentifier
    java.lang.String toString() -> toString
    com.amazonaws.services.s3.model.GroupGrantee parseGroupGrantee(java.lang.String) -> parseGroupGrantee
com.amazonaws.services.s3.model.InitiateMultipartUploadRequest -> com.amazonaws.services.s3.model.InitiateMultipartUploadRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    com.amazonaws.services.s3.model.ObjectMetadata objectMetadata -> objectMetadata
    com.amazonaws.services.s3.model.CannedAccessControlList cannedACL -> c
    com.amazonaws.services.s3.model.StorageClass storageClass -> d
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withKey(java.lang.String) -> withKey
    com.amazonaws.services.s3.model.CannedAccessControlList getCannedACL() -> getCannedACL
    void setCannedACL(com.amazonaws.services.s3.model.CannedAccessControlList) -> setCannedACL
    com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withCannedACL(com.amazonaws.services.s3.model.CannedAccessControlList) -> withCannedACL
    com.amazonaws.services.s3.model.StorageClass getStorageClass() -> getStorageClass
    void setStorageClass(com.amazonaws.services.s3.model.StorageClass) -> setStorageClass
    com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withStorageClass(com.amazonaws.services.s3.model.StorageClass) -> withStorageClass
    com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata() -> getObjectMetadata
    void setObjectMetadata(com.amazonaws.services.s3.model.ObjectMetadata) -> setObjectMetadata
    com.amazonaws.services.s3.model.InitiateMultipartUploadRequest withObjectMetadata(com.amazonaws.services.s3.model.ObjectMetadata) -> withObjectMetadata
com.amazonaws.services.s3.model.InitiateMultipartUploadResult -> com.amazonaws.services.s3.model.InitiateMultipartUploadResult:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String uploadId -> c
    java.lang.String serverSideEncryption -> d
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getUploadId() -> getUploadId
    void setUploadId(java.lang.String) -> setUploadId
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
com.amazonaws.services.s3.model.ListBucketsRequest -> com.amazonaws.services.s3.model.ListBucketsRequest:
com.amazonaws.services.s3.model.ListMultipartUploadsRequest -> com.amazonaws.services.s3.model.ListMultipartUploadsRequest:
    java.lang.String bucketName -> a
    java.lang.String delimiter -> b
    java.lang.String prefix -> c
    java.lang.Integer maxUploads -> d
    java.lang.String keyMarker -> e
    java.lang.String uploadIdMarker -> f
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.ListMultipartUploadsRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.Integer getMaxUploads() -> getMaxUploads
    void setMaxUploads(java.lang.Integer) -> setMaxUploads
    com.amazonaws.services.s3.model.ListMultipartUploadsRequest withMaxUploads(int) -> withMaxUploads
    java.lang.String getKeyMarker() -> getKeyMarker
    void setKeyMarker(java.lang.String) -> setKeyMarker
    com.amazonaws.services.s3.model.ListMultipartUploadsRequest withKeyMarker(java.lang.String) -> withKeyMarker
    java.lang.String getUploadIdMarker() -> getUploadIdMarker
    void setUploadIdMarker(java.lang.String) -> setUploadIdMarker
    com.amazonaws.services.s3.model.ListMultipartUploadsRequest withUploadIdMarker(java.lang.String) -> withUploadIdMarker
    java.lang.String getDelimiter() -> getDelimiter
    void setDelimiter(java.lang.String) -> setDelimiter
    com.amazonaws.services.s3.model.ListMultipartUploadsRequest withDelimiter(java.lang.String) -> withDelimiter
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    com.amazonaws.services.s3.model.ListMultipartUploadsRequest withPrefix(java.lang.String) -> withPrefix
com.amazonaws.services.s3.model.ListObjectsRequest -> com.amazonaws.services.s3.model.ListObjectsRequest:
    java.lang.String bucketName -> a
    java.lang.String prefix -> b
    java.lang.String marker -> c
    java.lang.String delimiter -> d
    java.lang.Integer maxKeys -> e
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.ListObjectsRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    com.amazonaws.services.s3.model.ListObjectsRequest withPrefix(java.lang.String) -> withPrefix
    java.lang.String getMarker() -> getMarker
    void setMarker(java.lang.String) -> setMarker
    com.amazonaws.services.s3.model.ListObjectsRequest withMarker(java.lang.String) -> withMarker
    java.lang.String getDelimiter() -> getDelimiter
    void setDelimiter(java.lang.String) -> setDelimiter
    com.amazonaws.services.s3.model.ListObjectsRequest withDelimiter(java.lang.String) -> withDelimiter
    java.lang.Integer getMaxKeys() -> getMaxKeys
    void setMaxKeys(java.lang.Integer) -> setMaxKeys
    com.amazonaws.services.s3.model.ListObjectsRequest withMaxKeys(java.lang.Integer) -> withMaxKeys
com.amazonaws.services.s3.model.ListPartsRequest -> com.amazonaws.services.s3.model.ListPartsRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String uploadId -> c
    java.lang.Integer maxParts -> d
    java.lang.Integer partNumberMarker -> e
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.ListPartsRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.ListPartsRequest withKey(java.lang.String) -> withKey
    java.lang.String getUploadId() -> getUploadId
    void setUploadId(java.lang.String) -> setUploadId
    com.amazonaws.services.s3.model.ListPartsRequest withUploadId(java.lang.String) -> withUploadId
    java.lang.Integer getMaxParts() -> getMaxParts
    void setMaxParts(int) -> setMaxParts
    com.amazonaws.services.s3.model.ListPartsRequest withMaxParts(int) -> withMaxParts
    java.lang.Integer getPartNumberMarker() -> getPartNumberMarker
    void setPartNumberMarker(java.lang.Integer) -> setPartNumberMarker
    com.amazonaws.services.s3.model.ListPartsRequest withPartNumberMarker(java.lang.Integer) -> withPartNumberMarker
com.amazonaws.services.s3.model.ListVersionsRequest -> com.amazonaws.services.s3.model.ListVersionsRequest:
    java.lang.String bucketName -> a
    java.lang.String prefix -> b
    java.lang.String keyMarker -> c
    java.lang.String versionIdMarker -> d
    java.lang.String delimiter -> e
    java.lang.Integer maxResults -> f
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.ListVersionsRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    com.amazonaws.services.s3.model.ListVersionsRequest withPrefix(java.lang.String) -> withPrefix
    java.lang.String getKeyMarker() -> getKeyMarker
    void setKeyMarker(java.lang.String) -> setKeyMarker
    com.amazonaws.services.s3.model.ListVersionsRequest withKeyMarker(java.lang.String) -> withKeyMarker
    java.lang.String getVersionIdMarker() -> getVersionIdMarker
    void setVersionIdMarker(java.lang.String) -> setVersionIdMarker
    com.amazonaws.services.s3.model.ListVersionsRequest withVersionIdMarker(java.lang.String) -> withVersionIdMarker
    java.lang.String getDelimiter() -> getDelimiter
    void setDelimiter(java.lang.String) -> setDelimiter
    com.amazonaws.services.s3.model.ListVersionsRequest withDelimiter(java.lang.String) -> withDelimiter
    java.lang.Integer getMaxResults() -> getMaxResults
    void setMaxResults(java.lang.Integer) -> setMaxResults
    com.amazonaws.services.s3.model.ListVersionsRequest withMaxResults(java.lang.Integer) -> withMaxResults
com.amazonaws.services.s3.model.MultiFactorAuthentication -> com.amazonaws.services.s3.model.MultiFactorAuthentication:
    java.lang.String deviceSerialNumber -> a
    java.lang.String token -> b
    java.lang.String getDeviceSerialNumber() -> getDeviceSerialNumber
    void setDeviceSerialNumber(java.lang.String) -> setDeviceSerialNumber
    com.amazonaws.services.s3.model.MultiFactorAuthentication withDeviceSerialNumber(java.lang.String) -> withDeviceSerialNumber
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    com.amazonaws.services.s3.model.MultiFactorAuthentication withToken(java.lang.String) -> withToken
com.amazonaws.services.s3.model.MultipartUpload -> com.amazonaws.services.s3.model.MultipartUpload:
    java.lang.String key -> a
    java.lang.String uploadId -> b
    com.amazonaws.services.s3.model.Owner owner -> c
    com.amazonaws.services.s3.model.Owner initiator -> d
    java.lang.String storageClass -> e
    java.util.Date initiated -> f
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getUploadId() -> getUploadId
    void setUploadId(java.lang.String) -> setUploadId
    com.amazonaws.services.s3.model.Owner getOwner() -> getOwner
    void setOwner(com.amazonaws.services.s3.model.Owner) -> setOwner
    com.amazonaws.services.s3.model.Owner getInitiator() -> getInitiator
    void setInitiator(com.amazonaws.services.s3.model.Owner) -> setInitiator
    java.lang.String getStorageClass() -> getStorageClass
    void setStorageClass(java.lang.String) -> setStorageClass
    java.util.Date getInitiated() -> getInitiated
    void setInitiated(java.util.Date) -> setInitiated
com.amazonaws.services.s3.model.MultipartUploadListing -> com.amazonaws.services.s3.model.MultipartUploadListing:
    java.lang.String bucketName -> a
    java.lang.String keyMarker -> b
    java.lang.String delimiter -> c
    java.lang.String prefix -> d
    java.lang.String uploadIdMarker -> e
    int maxUploads -> f
    boolean isTruncated -> g
    java.lang.String nextKeyMarker -> h
    java.lang.String nextUploadIdMarker -> i
    java.util.List multipartUploads -> j
    java.util.List commonPrefixes -> k
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getKeyMarker() -> getKeyMarker
    void setKeyMarker(java.lang.String) -> setKeyMarker
    java.lang.String getUploadIdMarker() -> getUploadIdMarker
    void setUploadIdMarker(java.lang.String) -> setUploadIdMarker
    java.lang.String getNextKeyMarker() -> getNextKeyMarker
    void setNextKeyMarker(java.lang.String) -> setNextKeyMarker
    java.lang.String getNextUploadIdMarker() -> getNextUploadIdMarker
    void setNextUploadIdMarker(java.lang.String) -> setNextUploadIdMarker
    int getMaxUploads() -> getMaxUploads
    void setMaxUploads(int) -> setMaxUploads
    boolean isTruncated() -> isTruncated
    void setTruncated(boolean) -> setTruncated
    java.util.List getMultipartUploads() -> getMultipartUploads
    void setMultipartUploads(java.util.List) -> setMultipartUploads
    java.util.List getCommonPrefixes() -> getCommonPrefixes
    void setCommonPrefixes(java.util.List) -> setCommonPrefixes
    java.lang.String getDelimiter() -> getDelimiter
    void setDelimiter(java.lang.String) -> setDelimiter
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
com.amazonaws.services.s3.model.ObjectListing -> com.amazonaws.services.s3.model.ObjectListing:
    java.util.List objectSummaries -> a
    java.util.List commonPrefixes -> b
    java.lang.String bucketName -> c
    java.lang.String nextMarker -> d
    boolean isTruncated -> e
    java.lang.String prefix -> f
    java.lang.String marker -> g
    int maxKeys -> h
    java.lang.String delimiter -> i
    java.util.List getObjectSummaries() -> getObjectSummaries
    java.util.List getCommonPrefixes() -> getCommonPrefixes
    void setCommonPrefixes(java.util.List) -> setCommonPrefixes
    java.lang.String getNextMarker() -> getNextMarker
    void setNextMarker(java.lang.String) -> setNextMarker
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getMarker() -> getMarker
    void setMarker(java.lang.String) -> setMarker
    int getMaxKeys() -> getMaxKeys
    void setMaxKeys(int) -> setMaxKeys
    java.lang.String getDelimiter() -> getDelimiter
    void setDelimiter(java.lang.String) -> setDelimiter
    boolean isTruncated() -> isTruncated
    void setTruncated(boolean) -> setTruncated
com.amazonaws.services.s3.model.ObjectMetadata -> com.amazonaws.services.s3.model.ObjectMetadata:
    java.util.Map userMetadata -> a
    java.util.Map metadata -> b
    java.lang.String AES_256_SERVER_SIDE_ENCRYPTION -> AES_256_SERVER_SIDE_ENCRYPTION
    java.util.Map getUserMetadata() -> getUserMetadata
    void setUserMetadata(java.util.Map) -> setUserMetadata
    void setHeader(java.lang.String,java.lang.Object) -> setHeader
    void addUserMetadata(java.lang.String,java.lang.String) -> addUserMetadata
    java.util.Map getRawMetadata() -> getRawMetadata
    java.util.Date getLastModified() -> getLastModified
    void setLastModified(java.util.Date) -> setLastModified
    long getContentLength() -> getContentLength
    void setContentLength(long) -> setContentLength
    java.lang.String getContentType() -> getContentType
    void setContentType(java.lang.String) -> setContentType
    java.lang.String getContentEncoding() -> getContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    java.lang.String getCacheControl() -> getCacheControl
    void setCacheControl(java.lang.String) -> setCacheControl
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getContentMD5() -> getContentMD5
    void setContentDisposition(java.lang.String) -> setContentDisposition
    java.lang.String getContentDisposition() -> getContentDisposition
    java.lang.String getETag() -> getETag
    java.lang.String getVersionId() -> getVersionId
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
com.amazonaws.services.s3.model.Owner -> com.amazonaws.services.s3.model.Owner:
    java.lang.String displayName -> a
    java.lang.String id -> b
    java.lang.String toString() -> toString
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getDisplayName() -> getDisplayName
    void setDisplayName(java.lang.String) -> setDisplayName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amazonaws.services.s3.model.PartETag -> com.amazonaws.services.s3.model.PartETag:
    int partNumber -> a
    java.lang.String eTag -> b
    int getPartNumber() -> getPartNumber
    void setPartNumber(int) -> setPartNumber
    com.amazonaws.services.s3.model.PartETag withPartNumber(int) -> withPartNumber
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    com.amazonaws.services.s3.model.PartETag withETag(java.lang.String) -> withETag
com.amazonaws.services.s3.model.PartListing -> com.amazonaws.services.s3.model.PartListing:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String uploadId -> c
    java.lang.Integer maxParts -> d
    java.lang.Integer partNumberMarker -> e
    com.amazonaws.services.s3.model.Owner owner -> f
    com.amazonaws.services.s3.model.Owner initiator -> g
    java.lang.String storageClass -> h
    boolean isTruncated -> i
    java.lang.Integer nextPartNumberMarker -> j
    java.util.List parts -> k
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getUploadId() -> getUploadId
    void setUploadId(java.lang.String) -> setUploadId
    com.amazonaws.services.s3.model.Owner getOwner() -> getOwner
    void setOwner(com.amazonaws.services.s3.model.Owner) -> setOwner
    com.amazonaws.services.s3.model.Owner getInitiator() -> getInitiator
    void setInitiator(com.amazonaws.services.s3.model.Owner) -> setInitiator
    java.lang.String getStorageClass() -> getStorageClass
    void setStorageClass(java.lang.String) -> setStorageClass
    java.lang.Integer getPartNumberMarker() -> getPartNumberMarker
    void setPartNumberMarker(int) -> setPartNumberMarker
    java.lang.Integer getNextPartNumberMarker() -> getNextPartNumberMarker
    void setNextPartNumberMarker(int) -> setNextPartNumberMarker
    java.lang.Integer getMaxParts() -> getMaxParts
    void setMaxParts(int) -> setMaxParts
    boolean isTruncated() -> isTruncated
    void setTruncated(boolean) -> setTruncated
    java.util.List getParts() -> getParts
    void setParts(java.util.List) -> setParts
com.amazonaws.services.s3.model.PartSummary -> com.amazonaws.services.s3.model.PartSummary:
    int partNumber -> a
    java.util.Date lastModified -> b
    java.lang.String eTag -> c
    long size -> d
    int getPartNumber() -> getPartNumber
    void setPartNumber(int) -> setPartNumber
    java.util.Date getLastModified() -> getLastModified
    void setLastModified(java.util.Date) -> setLastModified
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    long getSize() -> getSize
    void setSize(long) -> setSize
com.amazonaws.services.s3.model.Permission -> com.amazonaws.services.s3.model.Permission:
    com.amazonaws.services.s3.model.Permission FullControl -> FullControl
    com.amazonaws.services.s3.model.Permission Read -> Read
    com.amazonaws.services.s3.model.Permission Write -> Write
    com.amazonaws.services.s3.model.Permission ReadAcp -> ReadAcp
    com.amazonaws.services.s3.model.Permission WriteAcp -> WriteAcp
    java.lang.String permissionString -> a
    com.amazonaws.services.s3.model.Permission[] $VALUES -> b
    com.amazonaws.services.s3.model.Permission[] values() -> values
    com.amazonaws.services.s3.model.Permission valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.s3.model.Permission parsePermission(java.lang.String) -> parsePermission
com.amazonaws.services.s3.model.ProgressEvent -> com.amazonaws.services.s3.model.ProgressEvent:
    int STARTED_EVENT_CODE -> STARTED_EVENT_CODE
    int COMPLETED_EVENT_CODE -> COMPLETED_EVENT_CODE
    int FAILED_EVENT_CODE -> FAILED_EVENT_CODE
    int CANCELED_EVENT_CODE -> CANCELED_EVENT_CODE
    int PART_STARTED_EVENT_CODE -> PART_STARTED_EVENT_CODE
    int PART_COMPLETED_EVENT_CODE -> PART_COMPLETED_EVENT_CODE
    int PART_FAILED_EVENT_CODE -> PART_FAILED_EVENT_CODE
    int bytesTransfered -> a
    int eventCode -> b
    void setBytesTransfered(int) -> setBytesTransfered
    int getBytesTransfered() -> getBytesTransfered
    int getEventCode() -> getEventCode
    void setEventCode(int) -> setEventCode
com.amazonaws.services.s3.model.ProgressListener -> com.amazonaws.services.s3.model.ProgressListener:
    void progressChanged(com.amazonaws.services.s3.model.ProgressEvent) -> progressChanged
com.amazonaws.services.s3.model.PutObjectRequest -> com.amazonaws.services.s3.model.PutObjectRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.io.File file -> c
    java.io.InputStream inputStream -> d
    com.amazonaws.services.s3.model.ObjectMetadata metadata -> e
    com.amazonaws.services.s3.model.CannedAccessControlList cannedAcl -> f
    java.lang.String storageClass -> g
    com.amazonaws.services.s3.model.ProgressListener progressListener -> h
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.PutObjectRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.PutObjectRequest withKey(java.lang.String) -> withKey
    java.lang.String getStorageClass() -> getStorageClass
    void setStorageClass(java.lang.String) -> setStorageClass
    com.amazonaws.services.s3.model.PutObjectRequest withStorageClass(java.lang.String) -> withStorageClass
    void setStorageClass(com.amazonaws.services.s3.model.StorageClass) -> setStorageClass
    com.amazonaws.services.s3.model.PutObjectRequest withStorageClass(com.amazonaws.services.s3.model.StorageClass) -> withStorageClass
    java.io.File getFile() -> getFile
    void setFile(java.io.File) -> setFile
    com.amazonaws.services.s3.model.PutObjectRequest withFile(java.io.File) -> withFile
    com.amazonaws.services.s3.model.ObjectMetadata getMetadata() -> getMetadata
    void setMetadata(com.amazonaws.services.s3.model.ObjectMetadata) -> setMetadata
    com.amazonaws.services.s3.model.PutObjectRequest withMetadata(com.amazonaws.services.s3.model.ObjectMetadata) -> withMetadata
    com.amazonaws.services.s3.model.CannedAccessControlList getCannedAcl() -> getCannedAcl
    void setCannedAcl(com.amazonaws.services.s3.model.CannedAccessControlList) -> setCannedAcl
    com.amazonaws.services.s3.model.PutObjectRequest withCannedAcl(com.amazonaws.services.s3.model.CannedAccessControlList) -> withCannedAcl
    java.io.InputStream getInputStream() -> getInputStream
    void setInputStream(java.io.InputStream) -> setInputStream
    com.amazonaws.services.s3.model.PutObjectRequest withInputStream(java.io.InputStream) -> withInputStream
    void setProgressListener(com.amazonaws.services.s3.model.ProgressListener) -> setProgressListener
    com.amazonaws.services.s3.model.ProgressListener getProgressListener() -> getProgressListener
    com.amazonaws.services.s3.model.PutObjectRequest withProgressListener(com.amazonaws.services.s3.model.ProgressListener) -> withProgressListener
com.amazonaws.services.s3.model.PutObjectResult -> com.amazonaws.services.s3.model.PutObjectResult:
    java.lang.String versionId -> a
    java.lang.String eTag -> b
    java.lang.String serverSideEncryption -> c
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
com.amazonaws.services.s3.model.Region -> com.amazonaws.services.s3.model.Region:
    com.amazonaws.services.s3.model.Region US_Standard -> US_Standard
    com.amazonaws.services.s3.model.Region US_West -> US_West
    com.amazonaws.services.s3.model.Region US_West_2 -> US_West_2
    com.amazonaws.services.s3.model.Region EU_Ireland -> EU_Ireland
    com.amazonaws.services.s3.model.Region AP_Singapore -> AP_Singapore
    com.amazonaws.services.s3.model.Region AP_Tokyo -> AP_Tokyo
    com.amazonaws.services.s3.model.Region SA_SaoPaulo -> SA_SaoPaulo
    java.lang.String regionId -> a
    com.amazonaws.services.s3.model.Region[] $VALUES -> b
    com.amazonaws.services.s3.model.Region[] values() -> values
    com.amazonaws.services.s3.model.Region valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.s3.model.Region fromValue(java.lang.String) -> fromValue
com.amazonaws.services.s3.model.ResponseHeaderOverrides -> com.amazonaws.services.s3.model.ResponseHeaderOverrides:
    java.lang.String contentType -> a
    java.lang.String contentLanguage -> b
    java.lang.String expires -> c
    java.lang.String cacheControl -> d
    java.lang.String contentDisposition -> e
    java.lang.String contentEncoding -> f
    java.lang.String RESPONSE_HEADER_CONTENT_TYPE -> RESPONSE_HEADER_CONTENT_TYPE
    java.lang.String RESPONSE_HEADER_CONTENT_LANGUAGE -> RESPONSE_HEADER_CONTENT_LANGUAGE
    java.lang.String RESPONSE_HEADER_EXPIRES -> RESPONSE_HEADER_EXPIRES
    java.lang.String RESPONSE_HEADER_CACHE_CONTROL -> RESPONSE_HEADER_CACHE_CONTROL
    java.lang.String RESPONSE_HEADER_CONTENT_DISPOSITION -> RESPONSE_HEADER_CONTENT_DISPOSITION
    java.lang.String RESPONSE_HEADER_CONTENT_ENCODING -> RESPONSE_HEADER_CONTENT_ENCODING
    java.lang.String getContentType() -> getContentType
    void setContentType(java.lang.String) -> setContentType
    com.amazonaws.services.s3.model.ResponseHeaderOverrides withContentType(java.lang.String) -> withContentType
    java.lang.String getContentLanguage() -> getContentLanguage
    void setContentLanguage(java.lang.String) -> setContentLanguage
    com.amazonaws.services.s3.model.ResponseHeaderOverrides withContentLanguage(java.lang.String) -> withContentLanguage
    java.lang.String getExpires() -> getExpires
    void setExpires(java.lang.String) -> setExpires
    com.amazonaws.services.s3.model.ResponseHeaderOverrides withExpires(java.lang.String) -> withExpires
    java.lang.String getCacheControl() -> getCacheControl
    void setCacheControl(java.lang.String) -> setCacheControl
    com.amazonaws.services.s3.model.ResponseHeaderOverrides withCacheControl(java.lang.String) -> withCacheControl
    java.lang.String getContentDisposition() -> getContentDisposition
    void setContentDisposition(java.lang.String) -> setContentDisposition
    com.amazonaws.services.s3.model.ResponseHeaderOverrides withContentDisposition(java.lang.String) -> withContentDisposition
    java.lang.String getContentEncoding() -> getContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    com.amazonaws.services.s3.model.ResponseHeaderOverrides withContentEncoding(java.lang.String) -> withContentEncoding
com.amazonaws.services.s3.model.S3Object -> com.amazonaws.services.s3.model.S3Object:
    java.lang.String key -> a
    java.lang.String bucketName -> b
    com.amazonaws.services.s3.model.ObjectMetadata metadata -> c
    java.io.InputStream objectContent -> d
    com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadata() -> getObjectMetadata
    java.io.InputStream getObjectContent() -> getObjectContent
    void setObjectContent(java.io.InputStream) -> setObjectContent
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String toString() -> toString
com.amazonaws.services.s3.model.S3ObjectSummary -> com.amazonaws.services.s3.model.S3ObjectSummary:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String eTag -> c
    long size -> d
    java.util.Date lastModified -> e
    java.lang.String storageClass -> f
    com.amazonaws.services.s3.model.Owner owner -> g
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    long getSize() -> getSize
    void setSize(long) -> setSize
    java.util.Date getLastModified() -> getLastModified
    void setLastModified(java.util.Date) -> setLastModified
    com.amazonaws.services.s3.model.Owner getOwner() -> getOwner
    void setOwner(com.amazonaws.services.s3.model.Owner) -> setOwner
    java.lang.String getStorageClass() -> getStorageClass
    void setStorageClass(java.lang.String) -> setStorageClass
com.amazonaws.services.s3.model.S3VersionSummary -> com.amazonaws.services.s3.model.S3VersionSummary:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String versionId -> c
    boolean isLatest -> d
    java.util.Date lastModified -> e
    com.amazonaws.services.s3.model.Owner owner -> f
    java.lang.String eTag -> g
    long size -> h
    java.lang.String storageClass -> i
    boolean isDeleteMarker -> j
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    boolean isLatest() -> isLatest
    void setIsLatest(boolean) -> setIsLatest
    java.util.Date getLastModified() -> getLastModified
    void setLastModified(java.util.Date) -> setLastModified
    com.amazonaws.services.s3.model.Owner getOwner() -> getOwner
    void setOwner(com.amazonaws.services.s3.model.Owner) -> setOwner
    boolean isDeleteMarker() -> isDeleteMarker
    void setIsDeleteMarker(boolean) -> setIsDeleteMarker
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    java.lang.String getStorageClass() -> getStorageClass
    void setStorageClass(java.lang.String) -> setStorageClass
    long getSize() -> getSize
    void setSize(long) -> setSize
com.amazonaws.services.s3.model.SetBucketAclRequest -> com.amazonaws.services.s3.model.SetBucketAclRequest:
    java.lang.String bucketName -> a
    com.amazonaws.services.s3.model.AccessControlList acl -> b
    com.amazonaws.services.s3.model.CannedAccessControlList cannedAcl -> c
    java.lang.String getBucketName() -> getBucketName
    com.amazonaws.services.s3.model.AccessControlList getAcl() -> getAcl
    com.amazonaws.services.s3.model.CannedAccessControlList getCannedAcl() -> getCannedAcl
com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest -> com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest:
    java.lang.String bucketName -> a
    com.amazonaws.services.s3.model.BucketLoggingConfiguration loggingConfiguration -> b
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest withBucketName(java.lang.String) -> withBucketName
    com.amazonaws.services.s3.model.BucketLoggingConfiguration getLoggingConfiguration() -> getLoggingConfiguration
    void setLoggingConfiguration(com.amazonaws.services.s3.model.BucketLoggingConfiguration) -> setLoggingConfiguration
    com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest withLoggingConfiguration(com.amazonaws.services.s3.model.BucketLoggingConfiguration) -> withLoggingConfiguration
com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest -> com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest:
    com.amazonaws.services.s3.model.BucketNotificationConfiguration bucketNotificationConfiguration -> a
    java.lang.String bucket -> b
    com.amazonaws.services.s3.model.BucketNotificationConfiguration getBucketNotificationConfiguration() -> getBucketNotificationConfiguration
    void setBucketNotificationConfiguration(com.amazonaws.services.s3.model.BucketNotificationConfiguration) -> setBucketNotificationConfiguration
    java.lang.String getBucket() -> getBucket
    void setBucket(java.lang.String) -> setBucket
com.amazonaws.services.s3.model.SetBucketPolicyRequest -> com.amazonaws.services.s3.model.SetBucketPolicyRequest:
    java.lang.String bucketName -> a
    java.lang.String policyText -> b
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.SetBucketPolicyRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getPolicyText() -> getPolicyText
    void setPolicyText(java.lang.String) -> setPolicyText
    com.amazonaws.services.s3.model.SetBucketPolicyRequest withPolicyText(java.lang.String) -> withPolicyText
com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest -> com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest:
    java.lang.String bucketName -> a
    com.amazonaws.services.s3.model.BucketVersioningConfiguration versioningConfiguration -> b
    com.amazonaws.services.s3.model.MultiFactorAuthentication mfa -> c
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest withBucketName(java.lang.String) -> withBucketName
    com.amazonaws.services.s3.model.BucketVersioningConfiguration getVersioningConfiguration() -> getVersioningConfiguration
    void setVersioningConfiguration(com.amazonaws.services.s3.model.BucketVersioningConfiguration) -> setVersioningConfiguration
    com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest withVersioningConfiguration(com.amazonaws.services.s3.model.BucketVersioningConfiguration) -> withVersioningConfiguration
    com.amazonaws.services.s3.model.MultiFactorAuthentication getMfa() -> getMfa
    void setMfa(com.amazonaws.services.s3.model.MultiFactorAuthentication) -> setMfa
    com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest withMfa(com.amazonaws.services.s3.model.MultiFactorAuthentication) -> withMfa
com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest -> com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest:
    java.lang.String bucketName -> a
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration configuration -> b
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getBucketName() -> getBucketName
    com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest withBucketName(java.lang.String) -> withBucketName
    void setConfiguration(com.amazonaws.services.s3.model.BucketWebsiteConfiguration) -> setConfiguration
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration getConfiguration() -> getConfiguration
    com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest withConfiguration(com.amazonaws.services.s3.model.BucketWebsiteConfiguration) -> withConfiguration
com.amazonaws.services.s3.model.StorageClass -> com.amazonaws.services.s3.model.StorageClass:
    com.amazonaws.services.s3.model.StorageClass Standard -> Standard
    com.amazonaws.services.s3.model.StorageClass ReducedRedundancy -> ReducedRedundancy
    java.lang.String storageClassId -> a
    com.amazonaws.services.s3.model.StorageClass[] $VALUES -> b
    com.amazonaws.services.s3.model.StorageClass[] values() -> values
    com.amazonaws.services.s3.model.StorageClass valueOf(java.lang.String) -> valueOf
    com.amazonaws.services.s3.model.StorageClass fromValue(java.lang.String) -> fromValue
    java.lang.String toString() -> toString
com.amazonaws.services.s3.model.UploadPartRequest -> com.amazonaws.services.s3.model.UploadPartRequest:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String uploadId -> c
    int partNumber -> d
    long partSize -> e
    java.lang.String md5Digest -> f
    java.io.InputStream inputStream -> g
    java.io.File file -> h
    long fileOffset -> i
    com.amazonaws.services.s3.model.ProgressListener progressListener -> j
    boolean isLastPart -> k
    void setInputStream(java.io.InputStream) -> setInputStream
    java.io.InputStream getInputStream() -> getInputStream
    com.amazonaws.services.s3.model.UploadPartRequest withInputStream(java.io.InputStream) -> withInputStream
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    com.amazonaws.services.s3.model.UploadPartRequest withBucketName(java.lang.String) -> withBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.amazonaws.services.s3.model.UploadPartRequest withKey(java.lang.String) -> withKey
    java.lang.String getUploadId() -> getUploadId
    void setUploadId(java.lang.String) -> setUploadId
    com.amazonaws.services.s3.model.UploadPartRequest withUploadId(java.lang.String) -> withUploadId
    int getPartNumber() -> getPartNumber
    void setPartNumber(int) -> setPartNumber
    com.amazonaws.services.s3.model.UploadPartRequest withPartNumber(int) -> withPartNumber
    long getPartSize() -> getPartSize
    void setPartSize(long) -> setPartSize
    com.amazonaws.services.s3.model.UploadPartRequest withPartSize(long) -> withPartSize
    java.lang.String getMd5Digest() -> getMd5Digest
    void setMd5Digest(java.lang.String) -> setMd5Digest
    com.amazonaws.services.s3.model.UploadPartRequest withMD5Digest(java.lang.String) -> withMD5Digest
    java.io.File getFile() -> getFile
    void setFile(java.io.File) -> setFile
    com.amazonaws.services.s3.model.UploadPartRequest withFile(java.io.File) -> withFile
    long getFileOffset() -> getFileOffset
    void setFileOffset(long) -> setFileOffset
    com.amazonaws.services.s3.model.UploadPartRequest withFileOffset(long) -> withFileOffset
    void setProgressListener(com.amazonaws.services.s3.model.ProgressListener) -> setProgressListener
    com.amazonaws.services.s3.model.ProgressListener getProgressListener() -> getProgressListener
    com.amazonaws.services.s3.model.UploadPartRequest withProgressListener(com.amazonaws.services.s3.model.ProgressListener) -> withProgressListener
    boolean isLastPart() -> isLastPart
    void setLastPart(boolean) -> setLastPart
    com.amazonaws.services.s3.model.UploadPartRequest withLastPart(boolean) -> withLastPart
com.amazonaws.services.s3.model.UploadPartResult -> com.amazonaws.services.s3.model.UploadPartResult:
    int partNumber -> a
    java.lang.String eTag -> b
    java.lang.String serverSideEncryption -> c
    int getPartNumber() -> getPartNumber
    void setPartNumber(int) -> setPartNumber
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    com.amazonaws.services.s3.model.PartETag getPartETag() -> getPartETag
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
com.amazonaws.services.s3.model.VersionListing -> com.amazonaws.services.s3.model.VersionListing:
    java.util.List versionSummaries -> a
    java.util.List commonPrefixes -> b
    java.lang.String bucketName -> c
    java.lang.String nextKeyMarker -> d
    java.lang.String nextVersionIdMarker -> e
    boolean isTruncated -> f
    java.lang.String prefix -> g
    java.lang.String keyMarker -> h
    java.lang.String versionIdMarker -> i
    int maxKeys -> j
    java.lang.String delimiter -> k
    java.util.List getVersionSummaries() -> getVersionSummaries
    void setVersionSummaries(java.util.List) -> setVersionSummaries
    java.util.List getCommonPrefixes() -> getCommonPrefixes
    void setCommonPrefixes(java.util.List) -> setCommonPrefixes
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getKeyMarker() -> getKeyMarker
    void setKeyMarker(java.lang.String) -> setKeyMarker
    java.lang.String getVersionIdMarker() -> getVersionIdMarker
    void setVersionIdMarker(java.lang.String) -> setVersionIdMarker
    int getMaxKeys() -> getMaxKeys
    void setMaxKeys(int) -> setMaxKeys
    java.lang.String getDelimiter() -> getDelimiter
    void setDelimiter(java.lang.String) -> setDelimiter
    java.lang.String getNextKeyMarker() -> getNextKeyMarker
    void setNextKeyMarker(java.lang.String) -> setNextKeyMarker
    java.lang.String getNextVersionIdMarker() -> getNextVersionIdMarker
    void setNextVersionIdMarker(java.lang.String) -> setNextVersionIdMarker
    boolean isTruncated() -> isTruncated
    void setTruncated(boolean) -> setTruncated
com.amazonaws.services.s3.model.package-info -> com.amazonaws.services.s3.model.package-info:
com.amazonaws.services.s3.model.transform.AclXmlFactory -> com.amazonaws.services.s3.model.transform.AclXmlFactory:
    byte[] convertToXmlByteArray(com.amazonaws.services.s3.model.AccessControlList) -> convertToXmlByteArray
com.amazonaws.services.s3.model.transform.BucketConfigurationXmlFactory -> com.amazonaws.services.s3.model.transform.BucketConfigurationXmlFactory:
    byte[] convertToXmlByteArray(com.amazonaws.services.s3.model.BucketVersioningConfiguration) -> convertToXmlByteArray
    byte[] convertToXmlByteArray(com.amazonaws.services.s3.model.BucketLoggingConfiguration) -> convertToXmlByteArray
    byte[] convertToXmlByteArray(com.amazonaws.services.s3.model.BucketNotificationConfiguration) -> convertToXmlByteArray
    byte[] convertToXmlByteArray(com.amazonaws.services.s3.model.BucketWebsiteConfiguration) -> convertToXmlByteArray
com.amazonaws.services.s3.model.transform.RequestXmlFactory -> com.amazonaws.services.s3.model.transform.RequestXmlFactory:
    byte[] convertToXmlByteArray(java.util.List) -> convertToXmlByteArray
com.amazonaws.services.s3.model.transform.RequestXmlFactory$1 -> com.amazonaws.services.s3.model.transform.RequestXmlFactory$1:
    int compare(com.amazonaws.services.s3.model.PartETag,com.amazonaws.services.s3.model.PartETag) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amazonaws.services.s3.model.transform.Unmarshallers -> com.amazonaws.services.s3.model.transform.Unmarshallers:
com.amazonaws.services.s3.model.transform.Unmarshallers$AccessControlListUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$AccessControlListUnmarshaller:
    com.amazonaws.services.s3.model.AccessControlList unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$BucketLocationUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$BucketLocationUnmarshaller:
    java.lang.String unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$BucketLoggingConfigurationnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$BucketLoggingConfigurationnmarshaller:
    com.amazonaws.services.s3.model.BucketLoggingConfiguration unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$BucketNotificationConfigurationUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$BucketNotificationConfigurationUnmarshaller:
    com.amazonaws.services.s3.model.BucketNotificationConfiguration unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$BucketVersioningConfigurationUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$BucketVersioningConfigurationUnmarshaller:
    com.amazonaws.services.s3.model.BucketVersioningConfiguration unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$BucketWebsiteConfigurationUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$BucketWebsiteConfigurationUnmarshaller:
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$CompleteMultipartUploadResultUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$CompleteMultipartUploadResultUnmarshaller:
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$CompleteMultipartUploadHandler unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$CopyObjectUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$CopyObjectUnmarshaller:
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$CopyObjectResultHandler unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$InitiateMultipartUploadResultUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$InitiateMultipartUploadResultUnmarshaller:
    com.amazonaws.services.s3.model.InitiateMultipartUploadResult unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$InputStreamUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$InputStreamUnmarshaller:
    java.io.InputStream unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$ListBucketsOwnerUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$ListBucketsOwnerUnmarshaller:
    com.amazonaws.services.s3.model.Owner unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$ListBucketsUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$ListBucketsUnmarshaller:
    java.util.List unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$ListMultipartUploadsResultUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$ListMultipartUploadsResultUnmarshaller:
    com.amazonaws.services.s3.model.MultipartUploadListing unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$ListObjectsUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$ListObjectsUnmarshaller:
    com.amazonaws.services.s3.model.ObjectListing unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$ListPartsResultUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$ListPartsResultUnmarshaller:
    com.amazonaws.services.s3.model.PartListing unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.Unmarshallers$VersionListUnmarshaller -> com.amazonaws.services.s3.model.transform.Unmarshallers$VersionListUnmarshaller:
    com.amazonaws.services.s3.model.VersionListing unmarshall(java.io.InputStream) -> unmarshall
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser:
    org.apache.commons.logging.Log log -> a
    org.xml.sax.XMLReader xr -> b
    boolean sanitizeXmlDocument -> c
    void parseXmlInputStream(org.xml.sax.helpers.DefaultHandler,java.io.InputStream) -> a
    java.io.InputStream sanitizeXmlDocument(org.xml.sax.helpers.DefaultHandler,java.io.InputStream) -> b
    int parseInt(java.lang.String) -> a
    long parseLong(java.lang.String) -> b
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListBucketHandler parseListBucketObjectsResponse(java.io.InputStream) -> parseListBucketObjectsResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListVersionsHandler parseListVersionsResponse(java.io.InputStream) -> parseListVersionsResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListAllMyBucketsHandler parseListMyBucketsResponse(java.io.InputStream) -> parseListMyBucketsResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$AccessControlListHandler parseAccessControlListResponse(java.io.InputStream) -> parseAccessControlListResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketLoggingConfigurationHandler parseLoggingStatusResponse(java.io.InputStream) -> parseLoggingStatusResponse
    java.lang.String parseBucketLocationResponse(java.io.InputStream) -> parseBucketLocationResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketVersioningConfigurationHandler parseVersioningConfigurationResponse(java.io.InputStream) -> parseVersioningConfigurationResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketWebsiteConfigurationHandler parseWebsiteConfigurationResponse(java.io.InputStream) -> parseWebsiteConfigurationResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketNotificationConfigurationHandler parseNotificationConfigurationResponse(java.io.InputStream) -> parseNotificationConfigurationResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$CopyObjectResultHandler parseCopyObjectResponse(java.io.InputStream) -> parseCopyObjectResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$CompleteMultipartUploadHandler parseCompleteMultipartUploadResponse(java.io.InputStream) -> parseCompleteMultipartUploadResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$InitiateMultipartUploadHandler parseInitiateMultipartUploadResponse(java.io.InputStream) -> parseInitiateMultipartUploadResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListMultipartUploadsHandler parseListMultipartUploadsResponse(java.io.InputStream) -> parseListMultipartUploadsResponse
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListPartsHandler parseListPartsResponse(java.io.InputStream) -> parseListPartsResponse
    boolean parseRequestPaymentConfigurationResponse(java.io.InputStream) -> parseRequestPaymentConfigurationResponse
    org.apache.commons.logging.Log access$000() -> a
    java.lang.String access$100(com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser,java.lang.String) -> a
    int access$200(com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser,java.lang.String) -> b
    long access$300(com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser,java.lang.String) -> c
    java.lang.String access$400(java.lang.String,org.xml.sax.Attributes) -> a
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$AccessControlListHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$AccessControlListHandler:
    com.amazonaws.services.s3.model.AccessControlList accessControlList -> a
    com.amazonaws.services.s3.model.Owner owner -> b
    com.amazonaws.services.s3.model.Grantee currentGrantee -> c
    com.amazonaws.services.s3.model.Permission currentPermission -> d
    java.lang.StringBuilder currText -> e
    boolean insideACL -> f
    com.amazonaws.services.s3.model.AccessControlList getAccessControlList() -> getAccessControlList
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketLocationHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketLocationHandler:
    java.lang.String location -> a
    java.lang.StringBuilder currText -> b
    java.lang.String getLocation() -> getLocation
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketLoggingConfigurationHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketLoggingConfigurationHandler:
    com.amazonaws.services.s3.model.BucketLoggingConfiguration bucketLoggingConfiguration -> a
    java.lang.String targetBucket -> b
    java.lang.String targetPrefix -> c
    java.lang.StringBuilder currText -> d
    com.amazonaws.services.s3.model.BucketLoggingConfiguration getBucketLoggingConfiguration() -> getBucketLoggingConfiguration
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketNotificationConfigurationHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketNotificationConfigurationHandler:
    com.amazonaws.services.s3.model.BucketNotificationConfiguration configuration -> a
    java.lang.StringBuilder text -> b
    java.util.List topicConfigurations -> c
    java.lang.String topic -> d
    java.lang.String event -> e
    com.amazonaws.services.s3.model.BucketNotificationConfiguration getConfiguration() -> getConfiguration
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketVersioningConfigurationHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketVersioningConfigurationHandler:
    com.amazonaws.services.s3.model.BucketVersioningConfiguration configuration -> a
    java.lang.StringBuilder text -> b
    com.amazonaws.services.s3.model.BucketVersioningConfiguration getConfiguration() -> getConfiguration
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketWebsiteConfigurationHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$BucketWebsiteConfigurationHandler:
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration configuration -> a
    java.lang.StringBuilder text -> b
    boolean inIndexDocumentElement -> c
    boolean inErrorDocumentElement -> d
    com.amazonaws.services.s3.model.BucketWebsiteConfiguration getConfiguration() -> getConfiguration
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$CompleteMultipartUploadHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$CompleteMultipartUploadHandler:
    java.lang.StringBuilder text -> a
    com.amazonaws.services.s3.model.CompleteMultipartUploadResult result -> b
    com.amazonaws.services.s3.model.AmazonS3Exception ase -> c
    java.lang.String hostId -> d
    java.lang.String requestId -> e
    java.lang.String errorCode -> f
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
    com.amazonaws.services.s3.model.CompleteMultipartUploadResult getCompleteMultipartUploadResult() -> getCompleteMultipartUploadResult
    com.amazonaws.services.s3.model.AmazonS3Exception getAmazonS3Exception() -> getAmazonS3Exception
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$CopyObjectResultHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$CopyObjectResultHandler:
    java.lang.String etag -> a
    java.util.Date lastModified -> b
    java.lang.String versionId -> c
    java.lang.String serverSideEncryption -> d
    java.lang.String errorCode -> e
    java.lang.String errorMessage -> f
    java.lang.String errorRequestId -> g
    java.lang.String errorHostId -> h
    boolean receivedErrorResponse -> i
    java.lang.StringBuilder currText -> j
    java.util.Date getLastModified() -> getLastModified
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
    java.lang.String getServerSideEncryption() -> getServerSideEncryption
    void setServerSideEncryption(java.lang.String) -> setServerSideEncryption
    java.lang.String getETag() -> getETag
    java.lang.String getErrorCode() -> getErrorCode
    java.lang.String getErrorHostId() -> getErrorHostId
    java.lang.String getErrorMessage() -> getErrorMessage
    java.lang.String getErrorRequestId() -> getErrorRequestId
    boolean isErrorResponse() -> isErrorResponse
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$InitiateMultipartUploadHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$InitiateMultipartUploadHandler:
    java.lang.StringBuilder text -> a
    com.amazonaws.services.s3.model.InitiateMultipartUploadResult result -> b
    com.amazonaws.services.s3.model.InitiateMultipartUploadResult getInitiateMultipartUploadResult() -> getInitiateMultipartUploadResult
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListAllMyBucketsHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListAllMyBucketsHandler:
    com.amazonaws.services.s3.model.Owner bucketsOwner -> a
    com.amazonaws.services.s3.model.Bucket currentBucket -> b
    java.lang.StringBuilder currText -> c
    java.util.List buckets -> d
    java.util.List getBuckets() -> getBuckets
    com.amazonaws.services.s3.model.Owner getOwner() -> getOwner
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListBucketHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListBucketHandler:
    com.amazonaws.services.s3.model.S3ObjectSummary currentObject -> a
    com.amazonaws.services.s3.model.Owner currentOwner -> b
    java.lang.StringBuilder currText -> c
    boolean insideCommonPrefixes -> d
    com.amazonaws.services.s3.model.ObjectListing objectListing -> e
    java.util.List commonPrefixes -> f
    java.lang.String bucketName -> g
    java.lang.String requestPrefix -> h
    java.lang.String requestMarker -> i
    int requestMaxKeys -> j
    java.lang.String requestDelimiter -> k
    boolean listingTruncated -> l
    java.lang.String lastKey -> m
    java.lang.String nextMarker -> n
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser this$0 -> o
    com.amazonaws.services.s3.model.ObjectListing getObjectListing() -> getObjectListing
    java.lang.String getMarkerForNextListing() -> getMarkerForNextListing
    boolean isListingTruncated() -> isListingTruncated
    java.util.List getObjects() -> getObjects
    java.lang.String[] getCommonPrefixes() -> getCommonPrefixes
    java.lang.String getRequestPrefix() -> getRequestPrefix
    java.lang.String getRequestMarker() -> getRequestMarker
    java.lang.String getNextMarker() -> getNextMarker
    long getRequestMaxKeys() -> getRequestMaxKeys
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListMultipartUploadsHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListMultipartUploadsHandler:
    java.lang.StringBuilder text -> a
    com.amazonaws.services.s3.model.MultipartUploadListing result -> b
    com.amazonaws.services.s3.model.MultipartUpload currentMultipartUpload -> c
    com.amazonaws.services.s3.model.Owner currentOwner -> d
    com.amazonaws.services.s3.model.Owner currentInitiator -> e
    boolean inCommonPrefixes -> f
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser this$0 -> g
    com.amazonaws.services.s3.model.MultipartUploadListing getListMultipartUploadsResult() -> getListMultipartUploadsResult
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListPartsHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListPartsHandler:
    java.lang.StringBuilder text -> a
    com.amazonaws.services.s3.model.PartListing result -> b
    com.amazonaws.services.s3.model.Owner currentOwner -> c
    com.amazonaws.services.s3.model.Owner currentInitiator -> d
    com.amazonaws.services.s3.model.PartSummary currentPart -> e
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser this$0 -> f
    com.amazonaws.services.s3.model.PartListing getListPartsResult() -> getListPartsResult
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    java.lang.Integer parseInteger(java.lang.String) -> a
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListVersionsHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$ListVersionsHandler:
    com.amazonaws.services.s3.model.VersionListing versionListing -> a
    java.util.List versionSummaries -> b
    com.amazonaws.services.s3.model.S3VersionSummary currentVersionSummary -> c
    com.amazonaws.services.s3.model.Owner owner -> d
    java.lang.StringBuilder text -> e
    boolean insideCommonPrefixes -> f
    boolean $assertionsDisabled -> g
    com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser this$0 -> h
    com.amazonaws.services.s3.model.VersionListing getListing() -> getListing
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$RequestPaymentConfigurationHandler -> com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser$RequestPaymentConfigurationHandler:
    java.lang.String payer -> a
    java.lang.StringBuilder currText -> b
    boolean isRequesterPays() -> isRequesterPays
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.amazonaws.services.s3.package-info -> com.amazonaws.services.s3.package-info:
com.amazonaws.services.s3.transfer.Transfer -> com.amazonaws.services.s3.transfer.Transfer:
    com.amazonaws.services.s3.transfer.Transfer$TransferState state -> a
    com.amazonaws.services.s3.transfer.internal.TransferMonitor monitor -> b
    com.amazonaws.services.s3.transfer.TransferProgress transferProgress -> c
    java.lang.String description -> d
    com.amazonaws.services.s3.transfer.internal.ProgressListenerChain progressListenerChain -> e
    boolean isDone() -> isDone
    void waitForCompletion() -> waitForCompletion
    com.amazonaws.AmazonClientException waitForException() -> waitForException
    java.lang.String getDescription() -> getDescription
    com.amazonaws.services.s3.transfer.Transfer$TransferState getState() -> getState
    void addProgressListener(com.amazonaws.services.s3.model.ProgressListener) -> addProgressListener
    void removeProgressListener(com.amazonaws.services.s3.model.ProgressListener) -> removeProgressListener
    com.amazonaws.services.s3.transfer.TransferProgress getProgress() -> getProgress
    void rethrowExecutionException(java.util.concurrent.ExecutionException) -> a
    com.amazonaws.AmazonClientException unwrapExecutionException(java.util.concurrent.ExecutionException) -> b
com.amazonaws.services.s3.transfer.Transfer$TransferState -> com.amazonaws.services.s3.transfer.Transfer$TransferState:
    com.amazonaws.services.s3.transfer.Transfer$TransferState Waiting -> Waiting
    com.amazonaws.services.s3.transfer.Transfer$TransferState InProgress -> InProgress
    com.amazonaws.services.s3.transfer.Transfer$TransferState Completed -> Completed
    com.amazonaws.services.s3.transfer.Transfer$TransferState Canceled -> Canceled
    com.amazonaws.services.s3.transfer.Transfer$TransferState Failed -> Failed
    com.amazonaws.services.s3.transfer.Transfer$TransferState[] $VALUES -> a
    com.amazonaws.services.s3.transfer.Transfer$TransferState[] values() -> values
    com.amazonaws.services.s3.transfer.Transfer$TransferState valueOf(java.lang.String) -> valueOf
com.amazonaws.services.s3.transfer.TransferManager -> com.amazonaws.services.s3.transfer.TransferManager:
    com.amazonaws.services.s3.AmazonS3 s3 -> a
    com.amazonaws.services.s3.transfer.TransferManagerConfiguration configuration -> b
    java.util.concurrent.ThreadPoolExecutor threadPool -> c
    java.lang.String USER_AGENT -> d
    void setConfiguration(com.amazonaws.services.s3.transfer.TransferManagerConfiguration) -> setConfiguration
    com.amazonaws.services.s3.transfer.TransferManagerConfiguration getConfiguration() -> getConfiguration
    com.amazonaws.services.s3.AmazonS3 getAmazonS3Client() -> getAmazonS3Client
    com.amazonaws.services.s3.transfer.Upload upload(java.lang.String,java.lang.String,java.io.InputStream,com.amazonaws.services.s3.model.ObjectMetadata) -> upload
    com.amazonaws.services.s3.transfer.Upload upload(java.lang.String,java.lang.String,java.io.File) -> upload
    com.amazonaws.services.s3.transfer.Upload upload(com.amazonaws.services.s3.model.PutObjectRequest) -> upload
    void abortMultipartUploads(java.lang.String,java.util.Date) -> abortMultipartUploads
    void shutdownNow() -> shutdownNow
    com.amazonaws.AmazonWebServiceRequest appendUserAgent(com.amazonaws.AmazonWebServiceRequest,java.lang.String) -> appendUserAgent
com.amazonaws.services.s3.transfer.TransferManagerConfiguration -> com.amazonaws.services.s3.transfer.TransferManagerConfiguration:
    long minimumUploadPartSize -> a
    int multipartUploadThreshold -> b
    long getMinimumUploadPartSize() -> getMinimumUploadPartSize
    void setMinimumUploadPartSize(long) -> setMinimumUploadPartSize
    long getMultipartUploadThreshold() -> getMultipartUploadThreshold
    void setMultipartUploadThreshold(int) -> setMultipartUploadThreshold
com.amazonaws.services.s3.transfer.TransferProgress -> com.amazonaws.services.s3.transfer.TransferProgress:
    long bytesTransfered -> a
    long totalBytesToTransfer -> b
    long getBytesTransfered() -> getBytesTransfered
    long getTotalBytesToTransfer() -> getTotalBytesToTransfer
    double getPercentTransfered() -> getPercentTransfered
com.amazonaws.services.s3.transfer.Upload -> com.amazonaws.services.s3.transfer.Upload:
    com.amazonaws.services.s3.transfer.model.UploadResult waitForUploadResult() -> waitForUploadResult
com.amazonaws.services.s3.transfer.internal.MultipartUploadCallable -> com.amazonaws.services.s3.transfer.internal.MultipartUploadCallable:
    com.amazonaws.services.s3.AmazonS3 s3 -> a
    java.util.concurrent.ExecutorService threadPool -> b
    com.amazonaws.services.s3.model.PutObjectRequest putObjectRequest -> c
    org.apache.commons.logging.Log log -> d
    com.amazonaws.services.s3.transfer.TransferManagerConfiguration configuration -> e
    com.amazonaws.services.s3.transfer.internal.ProgressListenerChain progressListenerChain -> f
    com.amazonaws.services.s3.transfer.model.UploadResult call() -> call
    void fireProgressEvent(int) -> a
    void collectPartETags(java.util.List,java.util.List) -> a
    java.lang.Object call() -> call
com.amazonaws.services.s3.transfer.internal.ProgressListenerChain -> com.amazonaws.services.s3.transfer.internal.ProgressListenerChain:
    java.util.List listeners -> a
    org.apache.commons.logging.Log log -> b
    void addProgressListener(com.amazonaws.services.s3.model.ProgressListener) -> addProgressListener
    void removeProgressListener(com.amazonaws.services.s3.model.ProgressListener) -> removeProgressListener
    void progressChanged(com.amazonaws.services.s3.model.ProgressEvent) -> progressChanged
com.amazonaws.services.s3.transfer.internal.PutObjectCallable -> com.amazonaws.services.s3.transfer.internal.PutObjectCallable:
    com.amazonaws.services.s3.model.PutObjectRequest putObjectRequest -> a
    com.amazonaws.services.s3.AmazonS3 s3 -> b
    com.amazonaws.services.s3.transfer.model.UploadResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.s3.transfer.internal.TransferManagerUtils -> com.amazonaws.services.s3.transfer.internal.TransferManagerUtils:
    java.util.concurrent.ThreadPoolExecutor createDefaultExecutorService() -> createDefaultExecutorService
    boolean isUploadParallelizable(com.amazonaws.services.s3.model.PutObjectRequest,boolean) -> isUploadParallelizable
    long getContentLength(com.amazonaws.services.s3.model.PutObjectRequest) -> getContentLength
    long calculateOptimalPartSize(com.amazonaws.services.s3.model.PutObjectRequest,com.amazonaws.services.s3.transfer.TransferManagerConfiguration) -> calculateOptimalPartSize
    boolean shouldUseMultipartUpload(com.amazonaws.services.s3.model.PutObjectRequest,com.amazonaws.services.s3.transfer.TransferManagerConfiguration) -> shouldUseMultipartUpload
    java.io.File getRequestFile(com.amazonaws.services.s3.model.PutObjectRequest) -> getRequestFile
com.amazonaws.services.s3.transfer.internal.TransferManagerUtils$1 -> com.amazonaws.services.s3.transfer.internal.TransferManagerUtils$1:
    int threadCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.amazonaws.services.s3.transfer.internal.TransferMonitor -> com.amazonaws.services.s3.transfer.internal.TransferMonitor:
    java.util.concurrent.Future getFuture() -> getFuture
    boolean isDone() -> isDone
com.amazonaws.services.s3.transfer.internal.TransferProgressImpl -> com.amazonaws.services.s3.transfer.internal.TransferProgressImpl:
    void updateProgress(long) -> updateProgress
    void setBytesTransfered(long) -> setBytesTransfered
    void setTotalBytesToTransfer(long) -> setTotalBytesToTransfer
com.amazonaws.services.s3.transfer.internal.TransferProgressUpdatingListener -> com.amazonaws.services.s3.transfer.internal.TransferProgressUpdatingListener:
    com.amazonaws.services.s3.transfer.internal.TransferProgressImpl transferProgress -> a
    void progressChanged(com.amazonaws.services.s3.model.ProgressEvent) -> progressChanged
com.amazonaws.services.s3.transfer.internal.TransferStateUpdatingCallable -> com.amazonaws.services.s3.transfer.internal.TransferStateUpdatingCallable:
    java.util.concurrent.Callable callable -> a
    com.amazonaws.services.s3.transfer.internal.UploadImpl transfer -> b
    com.amazonaws.services.s3.transfer.model.UploadResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.s3.transfer.internal.UploadCallable -> com.amazonaws.services.s3.transfer.internal.UploadCallable:
    com.amazonaws.services.s3.AmazonS3 s3 -> a
    java.util.concurrent.ExecutorService threadPool -> b
    com.amazonaws.services.s3.model.PutObjectRequest putObjectRequest -> c
    java.lang.String multipartUploadId -> d
    org.apache.commons.logging.Log log -> e
    com.amazonaws.services.s3.transfer.TransferManagerConfiguration configuration -> f
    com.amazonaws.services.s3.transfer.internal.ProgressListenerChain progressListenerChain -> g
    java.util.List futures -> h
    java.util.List getFutures() -> a
    java.lang.String getMultipartUploadId() -> b
    boolean isMultipartUpload() -> isMultipartUpload
    com.amazonaws.services.s3.transfer.model.UploadResult call() -> call
    com.amazonaws.services.s3.transfer.model.UploadResult uploadInParts() -> c
    com.amazonaws.services.s3.transfer.model.UploadResult uploadPartsInSeries(com.amazonaws.services.s3.transfer.internal.UploadPartRequestFactory) -> a
    void uploadPartsInParallel(com.amazonaws.services.s3.transfer.internal.UploadPartRequestFactory) -> b
    void fireProgressEvent(int) -> a
    java.lang.Object call() -> call
com.amazonaws.services.s3.transfer.internal.UploadImpl -> com.amazonaws.services.s3.transfer.internal.UploadImpl:
    void setState(com.amazonaws.services.s3.transfer.Transfer$TransferState) -> setState
    void setMonitor(com.amazonaws.services.s3.transfer.internal.TransferMonitor) -> setMonitor
com.amazonaws.services.s3.transfer.internal.UploadMonitor -> com.amazonaws.services.s3.transfer.internal.UploadMonitor:
    java.util.concurrent.ScheduledExecutorService timedThreadPoool -> a
    com.amazonaws.services.s3.AmazonS3 s3 -> b
    java.util.concurrent.ExecutorService threadPool -> c
    com.amazonaws.services.s3.model.PutObjectRequest putObjectRequest -> d
    com.amazonaws.services.s3.transfer.internal.ProgressListenerChain progressListenerChain -> e
    com.amazonaws.services.s3.transfer.internal.UploadCallable mulipartUploadCallable -> f
    com.amazonaws.services.s3.transfer.internal.UploadImpl transfer -> g
    java.lang.String uploadId -> h
    java.util.List futures -> i
    boolean isUploadDone -> j
    java.util.concurrent.Future nextFuture -> k
    int pollInterval -> l
    java.util.concurrent.ScheduledExecutorService getDelayExecutor() -> a
    void shutdownNow() -> shutdownNow
    java.util.concurrent.Future getFuture() -> getFuture
    void setNextFuture(java.util.concurrent.Future) -> a
    boolean isDone() -> isDone
    void markAllDone() -> b
    com.amazonaws.services.s3.transfer.model.UploadResult call() -> call
    void uploadComplete() -> c
    void reschedule() -> d
    void fireProgressEvent(int) -> a
    java.util.List collectPartETags() -> e
    java.lang.Object call() -> call
    java.util.concurrent.ExecutorService access$000(com.amazonaws.services.s3.transfer.internal.UploadMonitor) -> a
    void access$100(com.amazonaws.services.s3.transfer.internal.UploadMonitor,java.util.concurrent.Future) -> a
com.amazonaws.services.s3.transfer.internal.UploadMonitor$1 -> com.amazonaws.services.s3.transfer.internal.UploadMonitor$1:
    com.amazonaws.services.s3.transfer.internal.UploadMonitor this$0 -> a
    com.amazonaws.services.s3.transfer.model.UploadResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.s3.transfer.internal.UploadPartCallable -> com.amazonaws.services.s3.transfer.internal.UploadPartCallable:
    com.amazonaws.services.s3.AmazonS3 s3 -> a
    com.amazonaws.services.s3.model.UploadPartRequest request -> b
    com.amazonaws.services.s3.model.PartETag call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.s3.transfer.internal.UploadPartRequestFactory -> com.amazonaws.services.s3.transfer.internal.UploadPartRequestFactory:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String uploadId -> c
    long optimalPartSize -> d
    java.io.File file -> e
    com.amazonaws.services.s3.model.PutObjectRequest putObjectRequest -> f
    int partNumber -> g
    long offset -> h
    long remainingBytes -> i
    boolean hasMoreRequests() -> hasMoreRequests
    com.amazonaws.services.s3.model.UploadPartRequest getNextUploadPartRequest() -> getNextUploadPartRequest
com.amazonaws.services.s3.transfer.model.UploadResult -> com.amazonaws.services.s3.transfer.model.UploadResult:
    java.lang.String bucketName -> a
    java.lang.String key -> b
    java.lang.String eTag -> c
    java.lang.String versionId -> d
    java.lang.String getBucketName() -> getBucketName
    void setBucketName(java.lang.String) -> setBucketName
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    java.lang.String getVersionId() -> getVersionId
    void setVersionId(java.lang.String) -> setVersionId
com.amazonaws.services.s3.transfer.package-info -> com.amazonaws.services.s3.transfer.package-info:
com.amazonaws.services.simpledb.AmazonSimpleDB -> com.amazonaws.services.simpledb.AmazonSimpleDB:
    void setEndpoint(java.lang.String) -> setEndpoint
    com.amazonaws.services.simpledb.model.SelectResult select(com.amazonaws.services.simpledb.model.SelectRequest) -> select
    void putAttributes(com.amazonaws.services.simpledb.model.PutAttributesRequest) -> putAttributes
    void batchDeleteAttributes(com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest) -> batchDeleteAttributes
    void deleteDomain(com.amazonaws.services.simpledb.model.DeleteDomainRequest) -> deleteDomain
    void createDomain(com.amazonaws.services.simpledb.model.CreateDomainRequest) -> createDomain
    void deleteAttributes(com.amazonaws.services.simpledb.model.DeleteAttributesRequest) -> deleteAttributes
    com.amazonaws.services.simpledb.model.ListDomainsResult listDomains(com.amazonaws.services.simpledb.model.ListDomainsRequest) -> listDomains
    com.amazonaws.services.simpledb.model.GetAttributesResult getAttributes(com.amazonaws.services.simpledb.model.GetAttributesRequest) -> getAttributes
    void batchPutAttributes(com.amazonaws.services.simpledb.model.BatchPutAttributesRequest) -> batchPutAttributes
    com.amazonaws.services.simpledb.model.DomainMetadataResult domainMetadata(com.amazonaws.services.simpledb.model.DomainMetadataRequest) -> domainMetadata
    com.amazonaws.services.simpledb.model.ListDomainsResult listDomains() -> listDomains
com.amazonaws.services.simpledb.AmazonSimpleDBAsync -> com.amazonaws.services.simpledb.AmazonSimpleDBAsync:
    java.util.concurrent.Future selectAsync(com.amazonaws.services.simpledb.model.SelectRequest) -> selectAsync
    java.util.concurrent.Future putAttributesAsync(com.amazonaws.services.simpledb.model.PutAttributesRequest) -> putAttributesAsync
    java.util.concurrent.Future batchDeleteAttributesAsync(com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest) -> batchDeleteAttributesAsync
    java.util.concurrent.Future deleteDomainAsync(com.amazonaws.services.simpledb.model.DeleteDomainRequest) -> deleteDomainAsync
    java.util.concurrent.Future createDomainAsync(com.amazonaws.services.simpledb.model.CreateDomainRequest) -> createDomainAsync
    java.util.concurrent.Future deleteAttributesAsync(com.amazonaws.services.simpledb.model.DeleteAttributesRequest) -> deleteAttributesAsync
    java.util.concurrent.Future listDomainsAsync(com.amazonaws.services.simpledb.model.ListDomainsRequest) -> listDomainsAsync
    java.util.concurrent.Future getAttributesAsync(com.amazonaws.services.simpledb.model.GetAttributesRequest) -> getAttributesAsync
    java.util.concurrent.Future batchPutAttributesAsync(com.amazonaws.services.simpledb.model.BatchPutAttributesRequest) -> batchPutAttributesAsync
    java.util.concurrent.Future domainMetadataAsync(com.amazonaws.services.simpledb.model.DomainMetadataRequest) -> domainMetadataAsync
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient:
    java.util.concurrent.ExecutorService executorService -> d
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.Future selectAsync(com.amazonaws.services.simpledb.model.SelectRequest) -> selectAsync
    java.util.concurrent.Future putAttributesAsync(com.amazonaws.services.simpledb.model.PutAttributesRequest) -> putAttributesAsync
    java.util.concurrent.Future batchDeleteAttributesAsync(com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest) -> batchDeleteAttributesAsync
    java.util.concurrent.Future deleteDomainAsync(com.amazonaws.services.simpledb.model.DeleteDomainRequest) -> deleteDomainAsync
    java.util.concurrent.Future createDomainAsync(com.amazonaws.services.simpledb.model.CreateDomainRequest) -> createDomainAsync
    java.util.concurrent.Future deleteAttributesAsync(com.amazonaws.services.simpledb.model.DeleteAttributesRequest) -> deleteAttributesAsync
    java.util.concurrent.Future listDomainsAsync(com.amazonaws.services.simpledb.model.ListDomainsRequest) -> listDomainsAsync
    java.util.concurrent.Future getAttributesAsync(com.amazonaws.services.simpledb.model.GetAttributesRequest) -> getAttributesAsync
    java.util.concurrent.Future batchPutAttributesAsync(com.amazonaws.services.simpledb.model.BatchPutAttributesRequest) -> batchPutAttributesAsync
    java.util.concurrent.Future domainMetadataAsync(com.amazonaws.services.simpledb.model.DomainMetadataRequest) -> domainMetadataAsync
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$1 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$1:
    com.amazonaws.services.simpledb.model.SelectRequest val$selectRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    com.amazonaws.services.simpledb.model.SelectResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$10 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$10:
    com.amazonaws.services.simpledb.model.DomainMetadataRequest val$domainMetadataRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    com.amazonaws.services.simpledb.model.DomainMetadataResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$2 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$2:
    com.amazonaws.services.simpledb.model.PutAttributesRequest val$putAttributesRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$3 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$3:
    com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest val$batchDeleteAttributesRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$4 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$4:
    com.amazonaws.services.simpledb.model.DeleteDomainRequest val$deleteDomainRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$5 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$5:
    com.amazonaws.services.simpledb.model.CreateDomainRequest val$createDomainRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$6 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$6:
    com.amazonaws.services.simpledb.model.DeleteAttributesRequest val$deleteAttributesRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$7 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$7:
    com.amazonaws.services.simpledb.model.ListDomainsRequest val$listDomainsRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    com.amazonaws.services.simpledb.model.ListDomainsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$8 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$8:
    com.amazonaws.services.simpledb.model.GetAttributesRequest val$getAttributesRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    com.amazonaws.services.simpledb.model.GetAttributesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$9 -> com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient$9:
    com.amazonaws.services.simpledb.model.BatchPutAttributesRequest val$batchPutAttributesRequest -> a
    com.amazonaws.services.simpledb.AmazonSimpleDBAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpledb.AmazonSimpleDBClient -> com.amazonaws.services.simpledb.AmazonSimpleDBClient:
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> d
    java.util.List exceptionUnmarshallers -> e
    com.amazonaws.auth.QueryStringSigner signer -> f
    void init() -> b
    com.amazonaws.services.simpledb.model.SelectResult select(com.amazonaws.services.simpledb.model.SelectRequest) -> select
    void putAttributes(com.amazonaws.services.simpledb.model.PutAttributesRequest) -> putAttributes
    void batchDeleteAttributes(com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest) -> batchDeleteAttributes
    void deleteDomain(com.amazonaws.services.simpledb.model.DeleteDomainRequest) -> deleteDomain
    void createDomain(com.amazonaws.services.simpledb.model.CreateDomainRequest) -> createDomain
    void deleteAttributes(com.amazonaws.services.simpledb.model.DeleteAttributesRequest) -> deleteAttributes
    com.amazonaws.services.simpledb.model.ListDomainsResult listDomains(com.amazonaws.services.simpledb.model.ListDomainsRequest) -> listDomains
    com.amazonaws.services.simpledb.model.GetAttributesResult getAttributes(com.amazonaws.services.simpledb.model.GetAttributesRequest) -> getAttributes
    void batchPutAttributes(com.amazonaws.services.simpledb.model.BatchPutAttributesRequest) -> batchPutAttributes
    com.amazonaws.services.simpledb.model.DomainMetadataResult domainMetadata(com.amazonaws.services.simpledb.model.DomainMetadataRequest) -> domainMetadata
    com.amazonaws.services.simpledb.model.ListDomainsResult listDomains() -> listDomains
    com.amazonaws.services.simpledb.SimpleDBResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller) -> a
com.amazonaws.services.simpledb.SimpleDBResponseMetadata -> com.amazonaws.services.simpledb.SimpleDBResponseMetadata:
    java.lang.String BOX_USAGE -> BOX_USAGE
    float getBoxUsage() -> getBoxUsage
com.amazonaws.services.simpledb.internal.SimpleDBStaxResponseHandler -> com.amazonaws.services.simpledb.internal.a:
    void registerAdditionalMetadataExpressions(com.amazonaws.transform.StaxUnmarshallerContext) -> a
com.amazonaws.services.simpledb.model.Attribute -> com.amazonaws.services.simpledb.model.Attribute:
    java.lang.String name -> a
    java.lang.String alternateNameEncoding -> b
    java.lang.String value -> c
    java.lang.String alternateValueEncoding -> d
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.simpledb.model.Attribute withName(java.lang.String) -> withName
    java.lang.String getAlternateNameEncoding() -> getAlternateNameEncoding
    void setAlternateNameEncoding(java.lang.String) -> setAlternateNameEncoding
    com.amazonaws.services.simpledb.model.Attribute withAlternateNameEncoding(java.lang.String) -> withAlternateNameEncoding
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.simpledb.model.Attribute withValue(java.lang.String) -> withValue
    java.lang.String getAlternateValueEncoding() -> getAlternateValueEncoding
    void setAlternateValueEncoding(java.lang.String) -> setAlternateValueEncoding
    com.amazonaws.services.simpledb.model.Attribute withAlternateValueEncoding(java.lang.String) -> withAlternateValueEncoding
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.AttributeDoesNotExistException -> com.amazonaws.services.simpledb.model.AttributeDoesNotExistException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest -> com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest:
    java.lang.String domainName -> a
    java.util.List items -> b
    java.lang.String getDomainName() -> getDomainName
    void setDomainName(java.lang.String) -> setDomainName
    com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest withDomainName(java.lang.String) -> withDomainName
    java.util.List getItems() -> getItems
    void setItems(java.util.Collection) -> setItems
    com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest withItems(com.amazonaws.services.simpledb.model.DeletableItem[]) -> withItems
    com.amazonaws.services.simpledb.model.BatchDeleteAttributesRequest withItems(java.util.Collection) -> withItems
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.BatchPutAttributesRequest -> com.amazonaws.services.simpledb.model.BatchPutAttributesRequest:
    java.lang.String domainName -> a
    java.util.List items -> b
    java.lang.String getDomainName() -> getDomainName
    void setDomainName(java.lang.String) -> setDomainName
    com.amazonaws.services.simpledb.model.BatchPutAttributesRequest withDomainName(java.lang.String) -> withDomainName
    java.util.List getItems() -> getItems
    void setItems(java.util.Collection) -> setItems
    com.amazonaws.services.simpledb.model.BatchPutAttributesRequest withItems(com.amazonaws.services.simpledb.model.ReplaceableItem[]) -> withItems
    com.amazonaws.services.simpledb.model.BatchPutAttributesRequest withItems(java.util.Collection) -> withItems
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.CreateDomainRequest -> com.amazonaws.services.simpledb.model.CreateDomainRequest:
    java.lang.String domainName -> a
    java.lang.String getDomainName() -> getDomainName
    void setDomainName(java.lang.String) -> setDomainName
    com.amazonaws.services.simpledb.model.CreateDomainRequest withDomainName(java.lang.String) -> withDomainName
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.DeletableItem -> com.amazonaws.services.simpledb.model.DeletableItem:
    java.lang.String name -> a
    java.util.List attributes -> b
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.simpledb.model.DeletableItem withName(java.lang.String) -> withName
    java.util.List getAttributes() -> getAttributes
    void setAttributes(java.util.Collection) -> setAttributes
    com.amazonaws.services.simpledb.model.DeletableItem withAttributes(com.amazonaws.services.simpledb.model.Attribute[]) -> withAttributes
    com.amazonaws.services.simpledb.model.DeletableItem withAttributes(java.util.Collection) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.DeleteAttributesRequest -> com.amazonaws.services.simpledb.model.DeleteAttributesRequest:
    java.lang.String domainName -> a
    java.lang.String itemName -> b
    java.util.List attributes -> c
    com.amazonaws.services.simpledb.model.UpdateCondition expected -> d
    java.lang.String getDomainName() -> getDomainName
    void setDomainName(java.lang.String) -> setDomainName
    com.amazonaws.services.simpledb.model.DeleteAttributesRequest withDomainName(java.lang.String) -> withDomainName
    java.lang.String getItemName() -> getItemName
    void setItemName(java.lang.String) -> setItemName
    com.amazonaws.services.simpledb.model.DeleteAttributesRequest withItemName(java.lang.String) -> withItemName
    java.util.List getAttributes() -> getAttributes
    void setAttributes(java.util.Collection) -> setAttributes
    com.amazonaws.services.simpledb.model.DeleteAttributesRequest withAttributes(com.amazonaws.services.simpledb.model.Attribute[]) -> withAttributes
    com.amazonaws.services.simpledb.model.DeleteAttributesRequest withAttributes(java.util.Collection) -> withAttributes
    com.amazonaws.services.simpledb.model.UpdateCondition getExpected() -> getExpected
    void setExpected(com.amazonaws.services.simpledb.model.UpdateCondition) -> setExpected
    com.amazonaws.services.simpledb.model.DeleteAttributesRequest withExpected(com.amazonaws.services.simpledb.model.UpdateCondition) -> withExpected
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.DeleteDomainRequest -> com.amazonaws.services.simpledb.model.DeleteDomainRequest:
    java.lang.String domainName -> a
    java.lang.String getDomainName() -> getDomainName
    void setDomainName(java.lang.String) -> setDomainName
    com.amazonaws.services.simpledb.model.DeleteDomainRequest withDomainName(java.lang.String) -> withDomainName
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.DomainMetadataRequest -> com.amazonaws.services.simpledb.model.DomainMetadataRequest:
    java.lang.String domainName -> a
    java.lang.String getDomainName() -> getDomainName
    void setDomainName(java.lang.String) -> setDomainName
    com.amazonaws.services.simpledb.model.DomainMetadataRequest withDomainName(java.lang.String) -> withDomainName
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.DomainMetadataResult -> com.amazonaws.services.simpledb.model.DomainMetadataResult:
    java.lang.Integer itemCount -> a
    java.lang.Long itemNamesSizeBytes -> b
    java.lang.Integer attributeNameCount -> c
    java.lang.Long attributeNamesSizeBytes -> d
    java.lang.Integer attributeValueCount -> e
    java.lang.Long attributeValuesSizeBytes -> f
    java.lang.Integer timestamp -> g
    java.lang.Integer getItemCount() -> getItemCount
    void setItemCount(java.lang.Integer) -> setItemCount
    com.amazonaws.services.simpledb.model.DomainMetadataResult withItemCount(java.lang.Integer) -> withItemCount
    java.lang.Long getItemNamesSizeBytes() -> getItemNamesSizeBytes
    void setItemNamesSizeBytes(java.lang.Long) -> setItemNamesSizeBytes
    com.amazonaws.services.simpledb.model.DomainMetadataResult withItemNamesSizeBytes(java.lang.Long) -> withItemNamesSizeBytes
    java.lang.Integer getAttributeNameCount() -> getAttributeNameCount
    void setAttributeNameCount(java.lang.Integer) -> setAttributeNameCount
    com.amazonaws.services.simpledb.model.DomainMetadataResult withAttributeNameCount(java.lang.Integer) -> withAttributeNameCount
    java.lang.Long getAttributeNamesSizeBytes() -> getAttributeNamesSizeBytes
    void setAttributeNamesSizeBytes(java.lang.Long) -> setAttributeNamesSizeBytes
    com.amazonaws.services.simpledb.model.DomainMetadataResult withAttributeNamesSizeBytes(java.lang.Long) -> withAttributeNamesSizeBytes
    java.lang.Integer getAttributeValueCount() -> getAttributeValueCount
    void setAttributeValueCount(java.lang.Integer) -> setAttributeValueCount
    com.amazonaws.services.simpledb.model.DomainMetadataResult withAttributeValueCount(java.lang.Integer) -> withAttributeValueCount
    java.lang.Long getAttributeValuesSizeBytes() -> getAttributeValuesSizeBytes
    void setAttributeValuesSizeBytes(java.lang.Long) -> setAttributeValuesSizeBytes
    com.amazonaws.services.simpledb.model.DomainMetadataResult withAttributeValuesSizeBytes(java.lang.Long) -> withAttributeValuesSizeBytes
    java.lang.Integer getTimestamp() -> getTimestamp
    void setTimestamp(java.lang.Integer) -> setTimestamp
    com.amazonaws.services.simpledb.model.DomainMetadataResult withTimestamp(java.lang.Integer) -> withTimestamp
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.DuplicateItemNameException -> com.amazonaws.services.simpledb.model.DuplicateItemNameException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.GetAttributesRequest -> com.amazonaws.services.simpledb.model.GetAttributesRequest:
    java.lang.String domainName -> a
    java.lang.String itemName -> b
    java.util.List attributeNames -> c
    java.lang.Boolean consistentRead -> d
    java.lang.String getDomainName() -> getDomainName
    void setDomainName(java.lang.String) -> setDomainName
    com.amazonaws.services.simpledb.model.GetAttributesRequest withDomainName(java.lang.String) -> withDomainName
    java.lang.String getItemName() -> getItemName
    void setItemName(java.lang.String) -> setItemName
    com.amazonaws.services.simpledb.model.GetAttributesRequest withItemName(java.lang.String) -> withItemName
    java.util.List getAttributeNames() -> getAttributeNames
    void setAttributeNames(java.util.Collection) -> setAttributeNames
    com.amazonaws.services.simpledb.model.GetAttributesRequest withAttributeNames(java.lang.String[]) -> withAttributeNames
    com.amazonaws.services.simpledb.model.GetAttributesRequest withAttributeNames(java.util.Collection) -> withAttributeNames
    java.lang.Boolean isConsistentRead() -> isConsistentRead
    void setConsistentRead(java.lang.Boolean) -> setConsistentRead
    com.amazonaws.services.simpledb.model.GetAttributesRequest withConsistentRead(java.lang.Boolean) -> withConsistentRead
    java.lang.Boolean getConsistentRead() -> getConsistentRead
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.GetAttributesResult -> com.amazonaws.services.simpledb.model.GetAttributesResult:
    java.util.List attributes -> a
    java.util.List getAttributes() -> getAttributes
    void setAttributes(java.util.Collection) -> setAttributes
    com.amazonaws.services.simpledb.model.GetAttributesResult withAttributes(com.amazonaws.services.simpledb.model.Attribute[]) -> withAttributes
    com.amazonaws.services.simpledb.model.GetAttributesResult withAttributes(java.util.Collection) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.InvalidNextTokenException -> com.amazonaws.services.simpledb.model.InvalidNextTokenException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.InvalidNumberPredicatesException -> com.amazonaws.services.simpledb.model.InvalidNumberPredicatesException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.InvalidNumberValueTestsException -> com.amazonaws.services.simpledb.model.InvalidNumberValueTestsException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.InvalidParameterValueException -> com.amazonaws.services.simpledb.model.InvalidParameterValueException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.InvalidQueryExpressionException -> com.amazonaws.services.simpledb.model.InvalidQueryExpressionException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.Item -> com.amazonaws.services.simpledb.model.Item:
    java.lang.String name -> a
    java.lang.String alternateNameEncoding -> b
    java.util.List attributes -> c
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.simpledb.model.Item withName(java.lang.String) -> withName
    java.lang.String getAlternateNameEncoding() -> getAlternateNameEncoding
    void setAlternateNameEncoding(java.lang.String) -> setAlternateNameEncoding
    com.amazonaws.services.simpledb.model.Item withAlternateNameEncoding(java.lang.String) -> withAlternateNameEncoding
    java.util.List getAttributes() -> getAttributes
    void setAttributes(java.util.Collection) -> setAttributes
    com.amazonaws.services.simpledb.model.Item withAttributes(com.amazonaws.services.simpledb.model.Attribute[]) -> withAttributes
    com.amazonaws.services.simpledb.model.Item withAttributes(java.util.Collection) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.ListDomainsRequest -> com.amazonaws.services.simpledb.model.ListDomainsRequest:
    java.lang.Integer maxNumberOfDomains -> a
    java.lang.String nextToken -> b
    java.lang.Integer getMaxNumberOfDomains() -> getMaxNumberOfDomains
    void setMaxNumberOfDomains(java.lang.Integer) -> setMaxNumberOfDomains
    com.amazonaws.services.simpledb.model.ListDomainsRequest withMaxNumberOfDomains(java.lang.Integer) -> withMaxNumberOfDomains
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.simpledb.model.ListDomainsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.ListDomainsResult -> com.amazonaws.services.simpledb.model.ListDomainsResult:
    java.util.List domainNames -> a
    java.lang.String nextToken -> b
    java.util.List getDomainNames() -> getDomainNames
    void setDomainNames(java.util.Collection) -> setDomainNames
    com.amazonaws.services.simpledb.model.ListDomainsResult withDomainNames(java.lang.String[]) -> withDomainNames
    com.amazonaws.services.simpledb.model.ListDomainsResult withDomainNames(java.util.Collection) -> withDomainNames
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.simpledb.model.ListDomainsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.MissingParameterException -> com.amazonaws.services.simpledb.model.MissingParameterException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.NoSuchDomainException -> com.amazonaws.services.simpledb.model.NoSuchDomainException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.NumberDomainAttributesExceededException -> com.amazonaws.services.simpledb.model.NumberDomainAttributesExceededException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.NumberDomainBytesExceededException -> com.amazonaws.services.simpledb.model.NumberDomainBytesExceededException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.NumberDomainsExceededException -> com.amazonaws.services.simpledb.model.NumberDomainsExceededException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.NumberItemAttributesExceededException -> com.amazonaws.services.simpledb.model.NumberItemAttributesExceededException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.NumberSubmittedAttributesExceededException -> com.amazonaws.services.simpledb.model.NumberSubmittedAttributesExceededException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.NumberSubmittedItemsExceededException -> com.amazonaws.services.simpledb.model.NumberSubmittedItemsExceededException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.PutAttributesRequest -> com.amazonaws.services.simpledb.model.PutAttributesRequest:
    java.lang.String domainName -> a
    java.lang.String itemName -> b
    java.util.List attributes -> c
    com.amazonaws.services.simpledb.model.UpdateCondition expected -> d
    java.lang.String getDomainName() -> getDomainName
    void setDomainName(java.lang.String) -> setDomainName
    com.amazonaws.services.simpledb.model.PutAttributesRequest withDomainName(java.lang.String) -> withDomainName
    java.lang.String getItemName() -> getItemName
    void setItemName(java.lang.String) -> setItemName
    com.amazonaws.services.simpledb.model.PutAttributesRequest withItemName(java.lang.String) -> withItemName
    java.util.List getAttributes() -> getAttributes
    void setAttributes(java.util.Collection) -> setAttributes
    com.amazonaws.services.simpledb.model.PutAttributesRequest withAttributes(com.amazonaws.services.simpledb.model.ReplaceableAttribute[]) -> withAttributes
    com.amazonaws.services.simpledb.model.PutAttributesRequest withAttributes(java.util.Collection) -> withAttributes
    com.amazonaws.services.simpledb.model.UpdateCondition getExpected() -> getExpected
    void setExpected(com.amazonaws.services.simpledb.model.UpdateCondition) -> setExpected
    com.amazonaws.services.simpledb.model.PutAttributesRequest withExpected(com.amazonaws.services.simpledb.model.UpdateCondition) -> withExpected
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.ReplaceableAttribute -> com.amazonaws.services.simpledb.model.ReplaceableAttribute:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.Boolean replace -> c
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.simpledb.model.ReplaceableAttribute withName(java.lang.String) -> withName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.simpledb.model.ReplaceableAttribute withValue(java.lang.String) -> withValue
    java.lang.Boolean isReplace() -> isReplace
    void setReplace(java.lang.Boolean) -> setReplace
    com.amazonaws.services.simpledb.model.ReplaceableAttribute withReplace(java.lang.Boolean) -> withReplace
    java.lang.Boolean getReplace() -> getReplace
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.ReplaceableItem -> com.amazonaws.services.simpledb.model.ReplaceableItem:
    java.lang.String name -> a
    java.util.List attributes -> b
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.simpledb.model.ReplaceableItem withName(java.lang.String) -> withName
    java.util.List getAttributes() -> getAttributes
    void setAttributes(java.util.Collection) -> setAttributes
    com.amazonaws.services.simpledb.model.ReplaceableItem withAttributes(com.amazonaws.services.simpledb.model.ReplaceableAttribute[]) -> withAttributes
    com.amazonaws.services.simpledb.model.ReplaceableItem withAttributes(java.util.Collection) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.RequestTimeoutException -> com.amazonaws.services.simpledb.model.RequestTimeoutException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.SelectRequest -> com.amazonaws.services.simpledb.model.SelectRequest:
    java.lang.String selectExpression -> a
    java.lang.String nextToken -> b
    java.lang.Boolean consistentRead -> c
    java.lang.String getSelectExpression() -> getSelectExpression
    void setSelectExpression(java.lang.String) -> setSelectExpression
    com.amazonaws.services.simpledb.model.SelectRequest withSelectExpression(java.lang.String) -> withSelectExpression
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.simpledb.model.SelectRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.Boolean isConsistentRead() -> isConsistentRead
    void setConsistentRead(java.lang.Boolean) -> setConsistentRead
    com.amazonaws.services.simpledb.model.SelectRequest withConsistentRead(java.lang.Boolean) -> withConsistentRead
    java.lang.Boolean getConsistentRead() -> getConsistentRead
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.SelectResult -> com.amazonaws.services.simpledb.model.SelectResult:
    java.util.List items -> a
    java.lang.String nextToken -> b
    java.util.List getItems() -> getItems
    void setItems(java.util.Collection) -> setItems
    com.amazonaws.services.simpledb.model.SelectResult withItems(com.amazonaws.services.simpledb.model.Item[]) -> withItems
    com.amazonaws.services.simpledb.model.SelectResult withItems(java.util.Collection) -> withItems
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.simpledb.model.SelectResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.TooManyRequestedAttributesException -> com.amazonaws.services.simpledb.model.TooManyRequestedAttributesException:
    java.lang.Float boxUsage -> a
    java.lang.Float getBoxUsage() -> getBoxUsage
    void setBoxUsage(java.lang.Float) -> setBoxUsage
com.amazonaws.services.simpledb.model.UpdateCondition -> com.amazonaws.services.simpledb.model.UpdateCondition:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.Boolean exists -> c
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.simpledb.model.UpdateCondition withName(java.lang.String) -> withName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.amazonaws.services.simpledb.model.UpdateCondition withValue(java.lang.String) -> withValue
    java.lang.Boolean isExists() -> isExists
    void setExists(java.lang.Boolean) -> setExists
    com.amazonaws.services.simpledb.model.UpdateCondition withExists(java.lang.Boolean) -> withExists
    java.lang.Boolean getExists() -> getExists
    java.lang.String toString() -> toString
com.amazonaws.services.simpledb.model.package-info -> com.amazonaws.services.simpledb.model.package-info:
com.amazonaws.services.simpledb.model.transform.AttributeDoesNotExistExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.p:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.AttributeStaxUnmarshaller -> com.amazonaws.services.simpledb.model.transform.x:
    com.amazonaws.services.simpledb.model.transform.AttributeStaxUnmarshaller instance -> a
    com.amazonaws.services.simpledb.model.Attribute unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.simpledb.model.transform.AttributeStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.BatchDeleteAttributesRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.k:
com.amazonaws.services.simpledb.model.transform.BatchPutAttributesRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.g:
com.amazonaws.services.simpledb.model.transform.CreateDomainRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.a:
com.amazonaws.services.simpledb.model.transform.DeleteAttributesRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.q:
com.amazonaws.services.simpledb.model.transform.DeleteDomainRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.z:
com.amazonaws.services.simpledb.model.transform.DomainMetadataRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.b:
com.amazonaws.services.simpledb.model.transform.DomainMetadataResultStaxUnmarshaller -> com.amazonaws.services.simpledb.model.transform.y:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.DuplicateItemNameExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.m:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.GetAttributesRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.G:
com.amazonaws.services.simpledb.model.transform.GetAttributesResultStaxUnmarshaller -> com.amazonaws.services.simpledb.model.transform.D:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.InvalidNextTokenExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.u:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.InvalidNumberPredicatesExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.c:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.InvalidNumberValueTestsExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.j:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.InvalidParameterValueExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.t:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.InvalidQueryExpressionExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.v:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.ItemStaxUnmarshaller -> com.amazonaws.services.simpledb.model.transform.h:
    com.amazonaws.services.simpledb.model.transform.ItemStaxUnmarshaller instance -> a
    com.amazonaws.services.simpledb.model.Item unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.simpledb.model.transform.ItemStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.ListDomainsRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.F:
com.amazonaws.services.simpledb.model.transform.ListDomainsResultStaxUnmarshaller -> com.amazonaws.services.simpledb.model.transform.i:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.MissingParameterExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.r:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.NoSuchDomainExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.E:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.NumberDomainAttributesExceededExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.d:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.NumberDomainBytesExceededExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.w:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.NumberDomainsExceededExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.e:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.NumberItemAttributesExceededExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.B:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.NumberSubmittedAttributesExceededExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.A:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.NumberSubmittedItemsExceededExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.n:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.PutAttributesRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.f:
com.amazonaws.services.simpledb.model.transform.RequestTimeoutExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.l:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.SelectRequestMarshaller -> com.amazonaws.services.simpledb.model.transform.s:
com.amazonaws.services.simpledb.model.transform.SelectResultStaxUnmarshaller -> com.amazonaws.services.simpledb.model.transform.C:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.model.transform.TooManyRequestedAttributesExceptionUnmarshaller -> com.amazonaws.services.simpledb.model.transform.o:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpledb.package-info -> com.amazonaws.services.simpledb.package-info:
com.amazonaws.services.simpledb.util.SimpleDBUtils -> com.amazonaws.services.simpledb.util.SimpleDBUtils:
    java.lang.String dateFormat -> a
    java.lang.String encodeZeroPadding(int,int) -> encodeZeroPadding
    java.lang.String encodeZeroPadding(long,int) -> encodeZeroPadding
    java.lang.String encodeZeroPadding(float,int) -> encodeZeroPadding
    int decodeZeroPaddingInt(java.lang.String) -> decodeZeroPaddingInt
    long decodeZeroPaddingLong(java.lang.String) -> decodeZeroPaddingLong
    float decodeZeroPaddingFloat(java.lang.String) -> decodeZeroPaddingFloat
    java.lang.String encodeRealNumberRange(int,int,int) -> encodeRealNumberRange
    java.lang.String encodeRealNumberRange(long,int,long) -> encodeRealNumberRange
    java.lang.String encodeRealNumberRange(float,int,int,int) -> encodeRealNumberRange
    int decodeRealNumberRangeInt(java.lang.String,int) -> decodeRealNumberRangeInt
    long decodeRealNumberRangeLong(java.lang.String,long) -> decodeRealNumberRangeLong
    float decodeRealNumberRangeFloat(java.lang.String,int,int) -> decodeRealNumberRangeFloat
    java.lang.String encodeDate(java.util.Date) -> encodeDate
    java.util.Date decodeDate(java.lang.String) -> decodeDate
    java.lang.String quoteValues(java.util.Collection) -> quoteValues
    java.lang.String quoteValue(java.lang.String) -> quoteValue
    java.lang.String quoteName(java.lang.String) -> quoteName
    java.lang.String replaceChar(java.lang.String,java.lang.String,java.lang.String) -> a
com.amazonaws.services.simpledb.util.package-info -> com.amazonaws.services.simpledb.util.package-info:
com.amazonaws.services.simpleemail.AmazonSimpleEmailService -> com.amazonaws.services.simpleemail.AmazonSimpleEmailService:
    void setEndpoint(java.lang.String) -> setEndpoint
    com.amazonaws.services.simpleemail.model.GetSendQuotaResult getSendQuota(com.amazonaws.services.simpleemail.model.GetSendQuotaRequest) -> getSendQuota
    com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult listVerifiedEmailAddresses(com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesRequest) -> listVerifiedEmailAddresses
    com.amazonaws.services.simpleemail.model.GetSendStatisticsResult getSendStatistics(com.amazonaws.services.simpleemail.model.GetSendStatisticsRequest) -> getSendStatistics
    com.amazonaws.services.simpleemail.model.SendEmailResult sendEmail(com.amazonaws.services.simpleemail.model.SendEmailRequest) -> sendEmail
    void deleteVerifiedEmailAddress(com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest) -> deleteVerifiedEmailAddress
    void verifyEmailAddress(com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest) -> verifyEmailAddress
    com.amazonaws.services.simpleemail.model.SendRawEmailResult sendRawEmail(com.amazonaws.services.simpleemail.model.SendRawEmailRequest) -> sendRawEmail
    com.amazonaws.services.simpleemail.model.GetSendQuotaResult getSendQuota() -> getSendQuota
    com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult listVerifiedEmailAddresses() -> listVerifiedEmailAddresses
    com.amazonaws.services.simpleemail.model.GetSendStatisticsResult getSendStatistics() -> getSendStatistics
    void shutdown() -> shutdown
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsync -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsync:
    java.util.concurrent.Future getSendQuotaAsync(com.amazonaws.services.simpleemail.model.GetSendQuotaRequest) -> getSendQuotaAsync
    java.util.concurrent.Future listVerifiedEmailAddressesAsync(com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesRequest) -> listVerifiedEmailAddressesAsync
    java.util.concurrent.Future getSendStatisticsAsync(com.amazonaws.services.simpleemail.model.GetSendStatisticsRequest) -> getSendStatisticsAsync
    java.util.concurrent.Future sendEmailAsync(com.amazonaws.services.simpleemail.model.SendEmailRequest) -> sendEmailAsync
    java.util.concurrent.Future deleteVerifiedEmailAddressAsync(com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest) -> deleteVerifiedEmailAddressAsync
    java.util.concurrent.Future verifyEmailAddressAsync(com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest) -> verifyEmailAddressAsync
    java.util.concurrent.Future sendRawEmailAsync(com.amazonaws.services.simpleemail.model.SendRawEmailRequest) -> sendRawEmailAsync
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient:
    java.util.concurrent.ExecutorService executorService -> d
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.Future getSendQuotaAsync(com.amazonaws.services.simpleemail.model.GetSendQuotaRequest) -> getSendQuotaAsync
    java.util.concurrent.Future listVerifiedEmailAddressesAsync(com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesRequest) -> listVerifiedEmailAddressesAsync
    java.util.concurrent.Future getSendStatisticsAsync(com.amazonaws.services.simpleemail.model.GetSendStatisticsRequest) -> getSendStatisticsAsync
    java.util.concurrent.Future sendEmailAsync(com.amazonaws.services.simpleemail.model.SendEmailRequest) -> sendEmailAsync
    java.util.concurrent.Future deleteVerifiedEmailAddressAsync(com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest) -> deleteVerifiedEmailAddressAsync
    java.util.concurrent.Future verifyEmailAddressAsync(com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest) -> verifyEmailAddressAsync
    java.util.concurrent.Future sendRawEmailAsync(com.amazonaws.services.simpleemail.model.SendRawEmailRequest) -> sendRawEmailAsync
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$1 -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$1:
    com.amazonaws.services.simpleemail.model.GetSendQuotaRequest val$getSendQuotaRequest -> a
    com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient this$0 -> b
    com.amazonaws.services.simpleemail.model.GetSendQuotaResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$2 -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$2:
    com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesRequest val$listVerifiedEmailAddressesRequest -> a
    com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient this$0 -> b
    com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$3 -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$3:
    com.amazonaws.services.simpleemail.model.GetSendStatisticsRequest val$getSendStatisticsRequest -> a
    com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient this$0 -> b
    com.amazonaws.services.simpleemail.model.GetSendStatisticsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$4 -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$4:
    com.amazonaws.services.simpleemail.model.SendEmailRequest val$sendEmailRequest -> a
    com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient this$0 -> b
    com.amazonaws.services.simpleemail.model.SendEmailResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$5 -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$5:
    com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest val$deleteVerifiedEmailAddressRequest -> a
    com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$6 -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$6:
    com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest val$verifyEmailAddressRequest -> a
    com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$7 -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient$7:
    com.amazonaws.services.simpleemail.model.SendRawEmailRequest val$sendRawEmailRequest -> a
    com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceAsyncClient this$0 -> b
    com.amazonaws.services.simpleemail.model.SendRawEmailResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient -> com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient:
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> d
    java.util.List exceptionUnmarshallers -> e
    com.amazonaws.auth.AWS3Signer signer -> f
    void init() -> b
    com.amazonaws.services.simpleemail.model.GetSendQuotaResult getSendQuota(com.amazonaws.services.simpleemail.model.GetSendQuotaRequest) -> getSendQuota
    com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult listVerifiedEmailAddresses(com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesRequest) -> listVerifiedEmailAddresses
    com.amazonaws.services.simpleemail.model.GetSendStatisticsResult getSendStatistics(com.amazonaws.services.simpleemail.model.GetSendStatisticsRequest) -> getSendStatistics
    com.amazonaws.services.simpleemail.model.SendEmailResult sendEmail(com.amazonaws.services.simpleemail.model.SendEmailRequest) -> sendEmail
    void deleteVerifiedEmailAddress(com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest) -> deleteVerifiedEmailAddress
    void verifyEmailAddress(com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest) -> verifyEmailAddress
    com.amazonaws.services.simpleemail.model.SendRawEmailResult sendRawEmail(com.amazonaws.services.simpleemail.model.SendRawEmailRequest) -> sendRawEmail
    com.amazonaws.services.simpleemail.model.GetSendQuotaResult getSendQuota() -> getSendQuota
    com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult listVerifiedEmailAddresses() -> listVerifiedEmailAddresses
    com.amazonaws.services.simpleemail.model.GetSendStatisticsResult getSendStatistics() -> getSendStatistics
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller) -> a
com.amazonaws.services.simpleemail.model.Body -> com.amazonaws.services.simpleemail.model.Body:
    com.amazonaws.services.simpleemail.model.Content text -> a
    com.amazonaws.services.simpleemail.model.Content html -> b
    com.amazonaws.services.simpleemail.model.Content getText() -> getText
    void setText(com.amazonaws.services.simpleemail.model.Content) -> setText
    com.amazonaws.services.simpleemail.model.Body withText(com.amazonaws.services.simpleemail.model.Content) -> withText
    com.amazonaws.services.simpleemail.model.Content getHtml() -> getHtml
    void setHtml(com.amazonaws.services.simpleemail.model.Content) -> setHtml
    com.amazonaws.services.simpleemail.model.Body withHtml(com.amazonaws.services.simpleemail.model.Content) -> withHtml
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.Content -> com.amazonaws.services.simpleemail.model.Content:
    java.lang.String data -> a
    java.lang.String charset -> b
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    com.amazonaws.services.simpleemail.model.Content withData(java.lang.String) -> withData
    java.lang.String getCharset() -> getCharset
    void setCharset(java.lang.String) -> setCharset
    com.amazonaws.services.simpleemail.model.Content withCharset(java.lang.String) -> withCharset
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest -> com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest:
    java.lang.String emailAddress -> a
    java.lang.String getEmailAddress() -> getEmailAddress
    void setEmailAddress(java.lang.String) -> setEmailAddress
    com.amazonaws.services.simpleemail.model.DeleteVerifiedEmailAddressRequest withEmailAddress(java.lang.String) -> withEmailAddress
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.Destination -> com.amazonaws.services.simpleemail.model.Destination:
    java.util.List toAddresses -> a
    java.util.List ccAddresses -> b
    java.util.List bccAddresses -> c
    java.util.List getToAddresses() -> getToAddresses
    void setToAddresses(java.util.Collection) -> setToAddresses
    com.amazonaws.services.simpleemail.model.Destination withToAddresses(java.lang.String[]) -> withToAddresses
    com.amazonaws.services.simpleemail.model.Destination withToAddresses(java.util.Collection) -> withToAddresses
    java.util.List getCcAddresses() -> getCcAddresses
    void setCcAddresses(java.util.Collection) -> setCcAddresses
    com.amazonaws.services.simpleemail.model.Destination withCcAddresses(java.lang.String[]) -> withCcAddresses
    com.amazonaws.services.simpleemail.model.Destination withCcAddresses(java.util.Collection) -> withCcAddresses
    java.util.List getBccAddresses() -> getBccAddresses
    void setBccAddresses(java.util.Collection) -> setBccAddresses
    com.amazonaws.services.simpleemail.model.Destination withBccAddresses(java.lang.String[]) -> withBccAddresses
    com.amazonaws.services.simpleemail.model.Destination withBccAddresses(java.util.Collection) -> withBccAddresses
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.GetSendQuotaRequest -> com.amazonaws.services.simpleemail.model.GetSendQuotaRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.GetSendQuotaResult -> com.amazonaws.services.simpleemail.model.GetSendQuotaResult:
    java.lang.Double max24HourSend -> a
    java.lang.Double maxSendRate -> b
    java.lang.Double sentLast24Hours -> c
    java.lang.Double getMax24HourSend() -> getMax24HourSend
    void setMax24HourSend(java.lang.Double) -> setMax24HourSend
    com.amazonaws.services.simpleemail.model.GetSendQuotaResult withMax24HourSend(java.lang.Double) -> withMax24HourSend
    java.lang.Double getMaxSendRate() -> getMaxSendRate
    void setMaxSendRate(java.lang.Double) -> setMaxSendRate
    com.amazonaws.services.simpleemail.model.GetSendQuotaResult withMaxSendRate(java.lang.Double) -> withMaxSendRate
    java.lang.Double getSentLast24Hours() -> getSentLast24Hours
    void setSentLast24Hours(java.lang.Double) -> setSentLast24Hours
    com.amazonaws.services.simpleemail.model.GetSendQuotaResult withSentLast24Hours(java.lang.Double) -> withSentLast24Hours
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.GetSendStatisticsRequest -> com.amazonaws.services.simpleemail.model.GetSendStatisticsRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.GetSendStatisticsResult -> com.amazonaws.services.simpleemail.model.GetSendStatisticsResult:
    java.util.List sendDataPoints -> a
    java.util.List getSendDataPoints() -> getSendDataPoints
    void setSendDataPoints(java.util.Collection) -> setSendDataPoints
    com.amazonaws.services.simpleemail.model.GetSendStatisticsResult withSendDataPoints(com.amazonaws.services.simpleemail.model.SendDataPoint[]) -> withSendDataPoints
    com.amazonaws.services.simpleemail.model.GetSendStatisticsResult withSendDataPoints(java.util.Collection) -> withSendDataPoints
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesRequest -> com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesRequest:
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult -> com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult:
    java.util.List verifiedEmailAddresses -> a
    java.util.List getVerifiedEmailAddresses() -> getVerifiedEmailAddresses
    void setVerifiedEmailAddresses(java.util.Collection) -> setVerifiedEmailAddresses
    com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult withVerifiedEmailAddresses(java.lang.String[]) -> withVerifiedEmailAddresses
    com.amazonaws.services.simpleemail.model.ListVerifiedEmailAddressesResult withVerifiedEmailAddresses(java.util.Collection) -> withVerifiedEmailAddresses
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.Message -> com.amazonaws.services.simpleemail.model.Message:
    com.amazonaws.services.simpleemail.model.Content subject -> a
    com.amazonaws.services.simpleemail.model.Body body -> b
    com.amazonaws.services.simpleemail.model.Content getSubject() -> getSubject
    void setSubject(com.amazonaws.services.simpleemail.model.Content) -> setSubject
    com.amazonaws.services.simpleemail.model.Message withSubject(com.amazonaws.services.simpleemail.model.Content) -> withSubject
    com.amazonaws.services.simpleemail.model.Body getBody() -> getBody
    void setBody(com.amazonaws.services.simpleemail.model.Body) -> setBody
    com.amazonaws.services.simpleemail.model.Message withBody(com.amazonaws.services.simpleemail.model.Body) -> withBody
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.MessageRejectedException -> com.amazonaws.services.simpleemail.model.MessageRejectedException:
com.amazonaws.services.simpleemail.model.RawMessage -> com.amazonaws.services.simpleemail.model.RawMessage:
    java.nio.ByteBuffer data -> a
    java.nio.ByteBuffer getData() -> getData
    void setData(java.nio.ByteBuffer) -> setData
    com.amazonaws.services.simpleemail.model.RawMessage withData(java.nio.ByteBuffer) -> withData
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.SendDataPoint -> com.amazonaws.services.simpleemail.model.SendDataPoint:
    java.util.Date timestamp -> a
    java.lang.Long deliveryAttempts -> b
    java.lang.Long bounces -> c
    java.lang.Long complaints -> d
    java.lang.Long rejects -> e
    java.util.Date getTimestamp() -> getTimestamp
    void setTimestamp(java.util.Date) -> setTimestamp
    com.amazonaws.services.simpleemail.model.SendDataPoint withTimestamp(java.util.Date) -> withTimestamp
    java.lang.Long getDeliveryAttempts() -> getDeliveryAttempts
    void setDeliveryAttempts(java.lang.Long) -> setDeliveryAttempts
    com.amazonaws.services.simpleemail.model.SendDataPoint withDeliveryAttempts(java.lang.Long) -> withDeliveryAttempts
    java.lang.Long getBounces() -> getBounces
    void setBounces(java.lang.Long) -> setBounces
    com.amazonaws.services.simpleemail.model.SendDataPoint withBounces(java.lang.Long) -> withBounces
    java.lang.Long getComplaints() -> getComplaints
    void setComplaints(java.lang.Long) -> setComplaints
    com.amazonaws.services.simpleemail.model.SendDataPoint withComplaints(java.lang.Long) -> withComplaints
    java.lang.Long getRejects() -> getRejects
    void setRejects(java.lang.Long) -> setRejects
    com.amazonaws.services.simpleemail.model.SendDataPoint withRejects(java.lang.Long) -> withRejects
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.SendEmailRequest -> com.amazonaws.services.simpleemail.model.SendEmailRequest:
    java.lang.String source -> a
    com.amazonaws.services.simpleemail.model.Destination destination -> b
    com.amazonaws.services.simpleemail.model.Message message -> c
    java.util.List replyToAddresses -> d
    java.lang.String returnPath -> e
    java.lang.String getSource() -> getSource
    void setSource(java.lang.String) -> setSource
    com.amazonaws.services.simpleemail.model.SendEmailRequest withSource(java.lang.String) -> withSource
    com.amazonaws.services.simpleemail.model.Destination getDestination() -> getDestination
    void setDestination(com.amazonaws.services.simpleemail.model.Destination) -> setDestination
    com.amazonaws.services.simpleemail.model.SendEmailRequest withDestination(com.amazonaws.services.simpleemail.model.Destination) -> withDestination
    com.amazonaws.services.simpleemail.model.Message getMessage() -> getMessage
    void setMessage(com.amazonaws.services.simpleemail.model.Message) -> setMessage
    com.amazonaws.services.simpleemail.model.SendEmailRequest withMessage(com.amazonaws.services.simpleemail.model.Message) -> withMessage
    java.util.List getReplyToAddresses() -> getReplyToAddresses
    void setReplyToAddresses(java.util.Collection) -> setReplyToAddresses
    com.amazonaws.services.simpleemail.model.SendEmailRequest withReplyToAddresses(java.lang.String[]) -> withReplyToAddresses
    com.amazonaws.services.simpleemail.model.SendEmailRequest withReplyToAddresses(java.util.Collection) -> withReplyToAddresses
    java.lang.String getReturnPath() -> getReturnPath
    void setReturnPath(java.lang.String) -> setReturnPath
    com.amazonaws.services.simpleemail.model.SendEmailRequest withReturnPath(java.lang.String) -> withReturnPath
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.SendEmailResult -> com.amazonaws.services.simpleemail.model.SendEmailResult:
    java.lang.String messageId -> a
    java.lang.String getMessageId() -> getMessageId
    void setMessageId(java.lang.String) -> setMessageId
    com.amazonaws.services.simpleemail.model.SendEmailResult withMessageId(java.lang.String) -> withMessageId
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.SendRawEmailRequest -> com.amazonaws.services.simpleemail.model.SendRawEmailRequest:
    java.lang.String source -> a
    java.util.List destinations -> b
    com.amazonaws.services.simpleemail.model.RawMessage rawMessage -> c
    java.lang.String getSource() -> getSource
    void setSource(java.lang.String) -> setSource
    com.amazonaws.services.simpleemail.model.SendRawEmailRequest withSource(java.lang.String) -> withSource
    java.util.List getDestinations() -> getDestinations
    void setDestinations(java.util.Collection) -> setDestinations
    com.amazonaws.services.simpleemail.model.SendRawEmailRequest withDestinations(java.lang.String[]) -> withDestinations
    com.amazonaws.services.simpleemail.model.SendRawEmailRequest withDestinations(java.util.Collection) -> withDestinations
    com.amazonaws.services.simpleemail.model.RawMessage getRawMessage() -> getRawMessage
    void setRawMessage(com.amazonaws.services.simpleemail.model.RawMessage) -> setRawMessage
    com.amazonaws.services.simpleemail.model.SendRawEmailRequest withRawMessage(com.amazonaws.services.simpleemail.model.RawMessage) -> withRawMessage
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.SendRawEmailResult -> com.amazonaws.services.simpleemail.model.SendRawEmailResult:
    java.lang.String messageId -> a
    java.lang.String getMessageId() -> getMessageId
    void setMessageId(java.lang.String) -> setMessageId
    com.amazonaws.services.simpleemail.model.SendRawEmailResult withMessageId(java.lang.String) -> withMessageId
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest -> com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest:
    java.lang.String emailAddress -> a
    java.lang.String getEmailAddress() -> getEmailAddress
    void setEmailAddress(java.lang.String) -> setEmailAddress
    com.amazonaws.services.simpleemail.model.VerifyEmailAddressRequest withEmailAddress(java.lang.String) -> withEmailAddress
    java.lang.String toString() -> toString
com.amazonaws.services.simpleemail.model.package-info -> com.amazonaws.services.simpleemail.model.package-info:
com.amazonaws.services.simpleemail.model.transform.DeleteVerifiedEmailAddressRequestMarshaller -> com.amazonaws.services.simpleemail.model.transform.l:
com.amazonaws.services.simpleemail.model.transform.GetSendQuotaRequestMarshaller -> com.amazonaws.services.simpleemail.model.transform.a:
com.amazonaws.services.simpleemail.model.transform.GetSendQuotaResultStaxUnmarshaller -> com.amazonaws.services.simpleemail.model.transform.b:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpleemail.model.transform.GetSendStatisticsRequestMarshaller -> com.amazonaws.services.simpleemail.model.transform.g:
com.amazonaws.services.simpleemail.model.transform.GetSendStatisticsResultStaxUnmarshaller -> com.amazonaws.services.simpleemail.model.transform.n:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpleemail.model.transform.ListVerifiedEmailAddressesRequestMarshaller -> com.amazonaws.services.simpleemail.model.transform.h:
com.amazonaws.services.simpleemail.model.transform.ListVerifiedEmailAddressesResultStaxUnmarshaller -> com.amazonaws.services.simpleemail.model.transform.f:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpleemail.model.transform.MessageRejectedExceptionUnmarshaller -> com.amazonaws.services.simpleemail.model.transform.m:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpleemail.model.transform.SendDataPointStaxUnmarshaller -> com.amazonaws.services.simpleemail.model.transform.c:
    com.amazonaws.services.simpleemail.model.transform.SendDataPointStaxUnmarshaller instance -> a
    com.amazonaws.services.simpleemail.model.SendDataPoint unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.simpleemail.model.transform.SendDataPointStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpleemail.model.transform.SendEmailRequestMarshaller -> com.amazonaws.services.simpleemail.model.transform.e:
com.amazonaws.services.simpleemail.model.transform.SendEmailResultStaxUnmarshaller -> com.amazonaws.services.simpleemail.model.transform.d:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpleemail.model.transform.SendRawEmailRequestMarshaller -> com.amazonaws.services.simpleemail.model.transform.i:
com.amazonaws.services.simpleemail.model.transform.SendRawEmailResultStaxUnmarshaller -> com.amazonaws.services.simpleemail.model.transform.j:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.simpleemail.model.transform.VerifyEmailAddressRequestMarshaller -> com.amazonaws.services.simpleemail.model.transform.k:
com.amazonaws.services.simpleemail.package-info -> com.amazonaws.services.simpleemail.package-info:
com.amazonaws.services.sns.AmazonSNS -> com.amazonaws.services.sns.AmazonSNS:
    void setEndpoint(java.lang.String) -> setEndpoint
    com.amazonaws.services.sns.model.ConfirmSubscriptionResult confirmSubscription(com.amazonaws.services.sns.model.ConfirmSubscriptionRequest) -> confirmSubscription
    com.amazonaws.services.sns.model.GetTopicAttributesResult getTopicAttributes(com.amazonaws.services.sns.model.GetTopicAttributesRequest) -> getTopicAttributes
    com.amazonaws.services.sns.model.SubscribeResult subscribe(com.amazonaws.services.sns.model.SubscribeRequest) -> subscribe
    void setTopicAttributes(com.amazonaws.services.sns.model.SetTopicAttributesRequest) -> setTopicAttributes
    void deleteTopic(com.amazonaws.services.sns.model.DeleteTopicRequest) -> deleteTopic
    void removePermission(com.amazonaws.services.sns.model.RemovePermissionRequest) -> removePermission
    com.amazonaws.services.sns.model.ListSubscriptionsResult listSubscriptions(com.amazonaws.services.sns.model.ListSubscriptionsRequest) -> listSubscriptions
    void addPermission(com.amazonaws.services.sns.model.AddPermissionRequest) -> addPermission
    com.amazonaws.services.sns.model.CreateTopicResult createTopic(com.amazonaws.services.sns.model.CreateTopicRequest) -> createTopic
    com.amazonaws.services.sns.model.ListTopicsResult listTopics(com.amazonaws.services.sns.model.ListTopicsRequest) -> listTopics
    void unsubscribe(com.amazonaws.services.sns.model.UnsubscribeRequest) -> unsubscribe
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult listSubscriptionsByTopic(com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest) -> listSubscriptionsByTopic
    com.amazonaws.services.sns.model.PublishResult publish(com.amazonaws.services.sns.model.PublishRequest) -> publish
    com.amazonaws.services.sns.model.ListSubscriptionsResult listSubscriptions() -> listSubscriptions
    com.amazonaws.services.sns.model.ListTopicsResult listTopics() -> listTopics
    void shutdown() -> shutdown
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
com.amazonaws.services.sns.AmazonSNSAsync -> com.amazonaws.services.sns.AmazonSNSAsync:
    java.util.concurrent.Future confirmSubscriptionAsync(com.amazonaws.services.sns.model.ConfirmSubscriptionRequest) -> confirmSubscriptionAsync
    java.util.concurrent.Future getTopicAttributesAsync(com.amazonaws.services.sns.model.GetTopicAttributesRequest) -> getTopicAttributesAsync
    java.util.concurrent.Future subscribeAsync(com.amazonaws.services.sns.model.SubscribeRequest) -> subscribeAsync
    java.util.concurrent.Future setTopicAttributesAsync(com.amazonaws.services.sns.model.SetTopicAttributesRequest) -> setTopicAttributesAsync
    java.util.concurrent.Future deleteTopicAsync(com.amazonaws.services.sns.model.DeleteTopicRequest) -> deleteTopicAsync
    java.util.concurrent.Future removePermissionAsync(com.amazonaws.services.sns.model.RemovePermissionRequest) -> removePermissionAsync
    java.util.concurrent.Future listSubscriptionsAsync(com.amazonaws.services.sns.model.ListSubscriptionsRequest) -> listSubscriptionsAsync
    java.util.concurrent.Future addPermissionAsync(com.amazonaws.services.sns.model.AddPermissionRequest) -> addPermissionAsync
    java.util.concurrent.Future createTopicAsync(com.amazonaws.services.sns.model.CreateTopicRequest) -> createTopicAsync
    java.util.concurrent.Future listTopicsAsync(com.amazonaws.services.sns.model.ListTopicsRequest) -> listTopicsAsync
    java.util.concurrent.Future unsubscribeAsync(com.amazonaws.services.sns.model.UnsubscribeRequest) -> unsubscribeAsync
    java.util.concurrent.Future listSubscriptionsByTopicAsync(com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest) -> listSubscriptionsByTopicAsync
    java.util.concurrent.Future publishAsync(com.amazonaws.services.sns.model.PublishRequest) -> publishAsync
com.amazonaws.services.sns.AmazonSNSAsyncClient -> com.amazonaws.services.sns.AmazonSNSAsyncClient:
    java.util.concurrent.ExecutorService executorService -> d
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.Future confirmSubscriptionAsync(com.amazonaws.services.sns.model.ConfirmSubscriptionRequest) -> confirmSubscriptionAsync
    java.util.concurrent.Future getTopicAttributesAsync(com.amazonaws.services.sns.model.GetTopicAttributesRequest) -> getTopicAttributesAsync
    java.util.concurrent.Future subscribeAsync(com.amazonaws.services.sns.model.SubscribeRequest) -> subscribeAsync
    java.util.concurrent.Future setTopicAttributesAsync(com.amazonaws.services.sns.model.SetTopicAttributesRequest) -> setTopicAttributesAsync
    java.util.concurrent.Future deleteTopicAsync(com.amazonaws.services.sns.model.DeleteTopicRequest) -> deleteTopicAsync
    java.util.concurrent.Future removePermissionAsync(com.amazonaws.services.sns.model.RemovePermissionRequest) -> removePermissionAsync
    java.util.concurrent.Future listSubscriptionsAsync(com.amazonaws.services.sns.model.ListSubscriptionsRequest) -> listSubscriptionsAsync
    java.util.concurrent.Future addPermissionAsync(com.amazonaws.services.sns.model.AddPermissionRequest) -> addPermissionAsync
    java.util.concurrent.Future createTopicAsync(com.amazonaws.services.sns.model.CreateTopicRequest) -> createTopicAsync
    java.util.concurrent.Future listTopicsAsync(com.amazonaws.services.sns.model.ListTopicsRequest) -> listTopicsAsync
    java.util.concurrent.Future unsubscribeAsync(com.amazonaws.services.sns.model.UnsubscribeRequest) -> unsubscribeAsync
    java.util.concurrent.Future listSubscriptionsByTopicAsync(com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest) -> listSubscriptionsByTopicAsync
    java.util.concurrent.Future publishAsync(com.amazonaws.services.sns.model.PublishRequest) -> publishAsync
com.amazonaws.services.sns.AmazonSNSAsyncClient$1 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$1:
    com.amazonaws.services.sns.model.ConfirmSubscriptionRequest val$confirmSubscriptionRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    com.amazonaws.services.sns.model.ConfirmSubscriptionResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$10 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$10:
    com.amazonaws.services.sns.model.ListTopicsRequest val$listTopicsRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    com.amazonaws.services.sns.model.ListTopicsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$11 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$11:
    com.amazonaws.services.sns.model.UnsubscribeRequest val$unsubscribeRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$12 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$12:
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest val$listSubscriptionsByTopicRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$13 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$13:
    com.amazonaws.services.sns.model.PublishRequest val$publishRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    com.amazonaws.services.sns.model.PublishResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$2 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$2:
    com.amazonaws.services.sns.model.GetTopicAttributesRequest val$getTopicAttributesRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    com.amazonaws.services.sns.model.GetTopicAttributesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$3 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$3:
    com.amazonaws.services.sns.model.SubscribeRequest val$subscribeRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    com.amazonaws.services.sns.model.SubscribeResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$4 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$4:
    com.amazonaws.services.sns.model.SetTopicAttributesRequest val$setTopicAttributesRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$5 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$5:
    com.amazonaws.services.sns.model.DeleteTopicRequest val$deleteTopicRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$6 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$6:
    com.amazonaws.services.sns.model.RemovePermissionRequest val$removePermissionRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$7 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$7:
    com.amazonaws.services.sns.model.ListSubscriptionsRequest val$listSubscriptionsRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    com.amazonaws.services.sns.model.ListSubscriptionsResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$8 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$8:
    com.amazonaws.services.sns.model.AddPermissionRequest val$addPermissionRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSAsyncClient$9 -> com.amazonaws.services.sns.AmazonSNSAsyncClient$9:
    com.amazonaws.services.sns.model.CreateTopicRequest val$createTopicRequest -> a
    com.amazonaws.services.sns.AmazonSNSAsyncClient this$0 -> b
    com.amazonaws.services.sns.model.CreateTopicResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sns.AmazonSNSClient -> com.amazonaws.services.sns.AmazonSNSClient:
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> d
    java.util.List exceptionUnmarshallers -> e
    com.amazonaws.auth.QueryStringSigner signer -> f
    void init() -> b
    com.amazonaws.services.sns.model.ConfirmSubscriptionResult confirmSubscription(com.amazonaws.services.sns.model.ConfirmSubscriptionRequest) -> confirmSubscription
    com.amazonaws.services.sns.model.GetTopicAttributesResult getTopicAttributes(com.amazonaws.services.sns.model.GetTopicAttributesRequest) -> getTopicAttributes
    com.amazonaws.services.sns.model.SubscribeResult subscribe(com.amazonaws.services.sns.model.SubscribeRequest) -> subscribe
    void setTopicAttributes(com.amazonaws.services.sns.model.SetTopicAttributesRequest) -> setTopicAttributes
    void deleteTopic(com.amazonaws.services.sns.model.DeleteTopicRequest) -> deleteTopic
    void removePermission(com.amazonaws.services.sns.model.RemovePermissionRequest) -> removePermission
    com.amazonaws.services.sns.model.ListSubscriptionsResult listSubscriptions(com.amazonaws.services.sns.model.ListSubscriptionsRequest) -> listSubscriptions
    void addPermission(com.amazonaws.services.sns.model.AddPermissionRequest) -> addPermission
    com.amazonaws.services.sns.model.CreateTopicResult createTopic(com.amazonaws.services.sns.model.CreateTopicRequest) -> createTopic
    com.amazonaws.services.sns.model.ListTopicsResult listTopics(com.amazonaws.services.sns.model.ListTopicsRequest) -> listTopics
    void unsubscribe(com.amazonaws.services.sns.model.UnsubscribeRequest) -> unsubscribe
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult listSubscriptionsByTopic(com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest) -> listSubscriptionsByTopic
    com.amazonaws.services.sns.model.PublishResult publish(com.amazonaws.services.sns.model.PublishRequest) -> publish
    com.amazonaws.services.sns.model.ListSubscriptionsResult listSubscriptions() -> listSubscriptions
    com.amazonaws.services.sns.model.ListTopicsResult listTopics() -> listTopics
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller) -> a
com.amazonaws.services.sns.model.AddPermissionRequest -> com.amazonaws.services.sns.model.AddPermissionRequest:
    java.lang.String topicArn -> a
    java.lang.String label -> b
    java.util.List aWSAccountIds -> c
    java.util.List actionNames -> d
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.AddPermissionRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    com.amazonaws.services.sns.model.AddPermissionRequest withLabel(java.lang.String) -> withLabel
    java.util.List getAWSAccountIds() -> getAWSAccountIds
    void setAWSAccountIds(java.util.Collection) -> setAWSAccountIds
    com.amazonaws.services.sns.model.AddPermissionRequest withAWSAccountIds(java.lang.String[]) -> withAWSAccountIds
    com.amazonaws.services.sns.model.AddPermissionRequest withAWSAccountIds(java.util.Collection) -> withAWSAccountIds
    java.util.List getActionNames() -> getActionNames
    void setActionNames(java.util.Collection) -> setActionNames
    com.amazonaws.services.sns.model.AddPermissionRequest withActionNames(java.lang.String[]) -> withActionNames
    com.amazonaws.services.sns.model.AddPermissionRequest withActionNames(java.util.Collection) -> withActionNames
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.AuthorizationErrorException -> com.amazonaws.services.sns.model.AuthorizationErrorException:
com.amazonaws.services.sns.model.ConfirmSubscriptionRequest -> com.amazonaws.services.sns.model.ConfirmSubscriptionRequest:
    java.lang.String topicArn -> a
    java.lang.String token -> b
    java.lang.String authenticateOnUnsubscribe -> c
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.ConfirmSubscriptionRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    com.amazonaws.services.sns.model.ConfirmSubscriptionRequest withToken(java.lang.String) -> withToken
    java.lang.String getAuthenticateOnUnsubscribe() -> getAuthenticateOnUnsubscribe
    void setAuthenticateOnUnsubscribe(java.lang.String) -> setAuthenticateOnUnsubscribe
    com.amazonaws.services.sns.model.ConfirmSubscriptionRequest withAuthenticateOnUnsubscribe(java.lang.String) -> withAuthenticateOnUnsubscribe
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.ConfirmSubscriptionResult -> com.amazonaws.services.sns.model.ConfirmSubscriptionResult:
    java.lang.String subscriptionArn -> a
    java.lang.String getSubscriptionArn() -> getSubscriptionArn
    void setSubscriptionArn(java.lang.String) -> setSubscriptionArn
    com.amazonaws.services.sns.model.ConfirmSubscriptionResult withSubscriptionArn(java.lang.String) -> withSubscriptionArn
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.CreateTopicRequest -> com.amazonaws.services.sns.model.CreateTopicRequest:
    java.lang.String name -> a
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amazonaws.services.sns.model.CreateTopicRequest withName(java.lang.String) -> withName
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.CreateTopicResult -> com.amazonaws.services.sns.model.CreateTopicResult:
    java.lang.String topicArn -> a
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.CreateTopicResult withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.DeleteTopicRequest -> com.amazonaws.services.sns.model.DeleteTopicRequest:
    java.lang.String topicArn -> a
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.DeleteTopicRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.GetTopicAttributesRequest -> com.amazonaws.services.sns.model.GetTopicAttributesRequest:
    java.lang.String topicArn -> a
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.GetTopicAttributesRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.GetTopicAttributesResult -> com.amazonaws.services.sns.model.GetTopicAttributesResult:
    java.util.Map attributes -> a
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    com.amazonaws.services.sns.model.GetTopicAttributesResult withAttributes(java.util.Map) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.InternalErrorException -> com.amazonaws.services.sns.model.InternalErrorException:
com.amazonaws.services.sns.model.InvalidParameterException -> com.amazonaws.services.sns.model.InvalidParameterException:
com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest -> com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest:
    java.lang.String topicArn -> a
    java.lang.String nextToken -> b
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult -> com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult:
    java.util.List subscriptions -> a
    java.lang.String nextToken -> b
    java.util.List getSubscriptions() -> getSubscriptions
    void setSubscriptions(java.util.Collection) -> setSubscriptions
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult withSubscriptions(com.amazonaws.services.sns.model.Subscription[]) -> withSubscriptions
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult withSubscriptions(java.util.Collection) -> withSubscriptions
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.sns.model.ListSubscriptionsByTopicResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.ListSubscriptionsRequest -> com.amazonaws.services.sns.model.ListSubscriptionsRequest:
    java.lang.String nextToken -> a
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.sns.model.ListSubscriptionsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.ListSubscriptionsResult -> com.amazonaws.services.sns.model.ListSubscriptionsResult:
    java.util.List subscriptions -> a
    java.lang.String nextToken -> b
    java.util.List getSubscriptions() -> getSubscriptions
    void setSubscriptions(java.util.Collection) -> setSubscriptions
    com.amazonaws.services.sns.model.ListSubscriptionsResult withSubscriptions(com.amazonaws.services.sns.model.Subscription[]) -> withSubscriptions
    com.amazonaws.services.sns.model.ListSubscriptionsResult withSubscriptions(java.util.Collection) -> withSubscriptions
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.sns.model.ListSubscriptionsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.ListTopicsRequest -> com.amazonaws.services.sns.model.ListTopicsRequest:
    java.lang.String nextToken -> a
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.sns.model.ListTopicsRequest withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.ListTopicsResult -> com.amazonaws.services.sns.model.ListTopicsResult:
    java.util.List topics -> a
    java.lang.String nextToken -> b
    java.util.List getTopics() -> getTopics
    void setTopics(java.util.Collection) -> setTopics
    com.amazonaws.services.sns.model.ListTopicsResult withTopics(com.amazonaws.services.sns.model.Topic[]) -> withTopics
    com.amazonaws.services.sns.model.ListTopicsResult withTopics(java.util.Collection) -> withTopics
    java.lang.String getNextToken() -> getNextToken
    void setNextToken(java.lang.String) -> setNextToken
    com.amazonaws.services.sns.model.ListTopicsResult withNextToken(java.lang.String) -> withNextToken
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.NotFoundException -> com.amazonaws.services.sns.model.NotFoundException:
com.amazonaws.services.sns.model.PublishRequest -> com.amazonaws.services.sns.model.PublishRequest:
    java.lang.String topicArn -> a
    java.lang.String message -> b
    java.lang.String subject -> c
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.PublishRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    com.amazonaws.services.sns.model.PublishRequest withMessage(java.lang.String) -> withMessage
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    com.amazonaws.services.sns.model.PublishRequest withSubject(java.lang.String) -> withSubject
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.PublishResult -> com.amazonaws.services.sns.model.PublishResult:
    java.lang.String messageId -> a
    java.lang.String getMessageId() -> getMessageId
    void setMessageId(java.lang.String) -> setMessageId
    com.amazonaws.services.sns.model.PublishResult withMessageId(java.lang.String) -> withMessageId
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.RemovePermissionRequest -> com.amazonaws.services.sns.model.RemovePermissionRequest:
    java.lang.String topicArn -> a
    java.lang.String label -> b
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.RemovePermissionRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    com.amazonaws.services.sns.model.RemovePermissionRequest withLabel(java.lang.String) -> withLabel
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.SetTopicAttributesRequest -> com.amazonaws.services.sns.model.SetTopicAttributesRequest:
    java.lang.String topicArn -> a
    java.lang.String attributeName -> b
    java.lang.String attributeValue -> c
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.SetTopicAttributesRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String getAttributeName() -> getAttributeName
    void setAttributeName(java.lang.String) -> setAttributeName
    com.amazonaws.services.sns.model.SetTopicAttributesRequest withAttributeName(java.lang.String) -> withAttributeName
    java.lang.String getAttributeValue() -> getAttributeValue
    void setAttributeValue(java.lang.String) -> setAttributeValue
    com.amazonaws.services.sns.model.SetTopicAttributesRequest withAttributeValue(java.lang.String) -> withAttributeValue
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.SubscribeRequest -> com.amazonaws.services.sns.model.SubscribeRequest:
    java.lang.String topicArn -> a
    java.lang.String protocol -> b
    java.lang.String endpoint -> c
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.SubscribeRequest withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String getProtocol() -> getProtocol
    void setProtocol(java.lang.String) -> setProtocol
    com.amazonaws.services.sns.model.SubscribeRequest withProtocol(java.lang.String) -> withProtocol
    java.lang.String getEndpoint() -> getEndpoint
    void setEndpoint(java.lang.String) -> setEndpoint
    com.amazonaws.services.sns.model.SubscribeRequest withEndpoint(java.lang.String) -> withEndpoint
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.SubscribeResult -> com.amazonaws.services.sns.model.SubscribeResult:
    java.lang.String subscriptionArn -> a
    java.lang.String getSubscriptionArn() -> getSubscriptionArn
    void setSubscriptionArn(java.lang.String) -> setSubscriptionArn
    com.amazonaws.services.sns.model.SubscribeResult withSubscriptionArn(java.lang.String) -> withSubscriptionArn
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.Subscription -> com.amazonaws.services.sns.model.Subscription:
    java.lang.String subscriptionArn -> a
    java.lang.String owner -> b
    java.lang.String protocol -> c
    java.lang.String endpoint -> d
    java.lang.String topicArn -> e
    java.lang.String getSubscriptionArn() -> getSubscriptionArn
    void setSubscriptionArn(java.lang.String) -> setSubscriptionArn
    com.amazonaws.services.sns.model.Subscription withSubscriptionArn(java.lang.String) -> withSubscriptionArn
    java.lang.String getOwner() -> getOwner
    void setOwner(java.lang.String) -> setOwner
    com.amazonaws.services.sns.model.Subscription withOwner(java.lang.String) -> withOwner
    java.lang.String getProtocol() -> getProtocol
    void setProtocol(java.lang.String) -> setProtocol
    com.amazonaws.services.sns.model.Subscription withProtocol(java.lang.String) -> withProtocol
    java.lang.String getEndpoint() -> getEndpoint
    void setEndpoint(java.lang.String) -> setEndpoint
    com.amazonaws.services.sns.model.Subscription withEndpoint(java.lang.String) -> withEndpoint
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.Subscription withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.SubscriptionLimitExceededException -> com.amazonaws.services.sns.model.SubscriptionLimitExceededException:
com.amazonaws.services.sns.model.Topic -> com.amazonaws.services.sns.model.Topic:
    java.lang.String topicArn -> a
    java.lang.String getTopicArn() -> getTopicArn
    void setTopicArn(java.lang.String) -> setTopicArn
    com.amazonaws.services.sns.model.Topic withTopicArn(java.lang.String) -> withTopicArn
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.TopicLimitExceededException -> com.amazonaws.services.sns.model.TopicLimitExceededException:
com.amazonaws.services.sns.model.UnsubscribeRequest -> com.amazonaws.services.sns.model.UnsubscribeRequest:
    java.lang.String subscriptionArn -> a
    java.lang.String getSubscriptionArn() -> getSubscriptionArn
    void setSubscriptionArn(java.lang.String) -> setSubscriptionArn
    com.amazonaws.services.sns.model.UnsubscribeRequest withSubscriptionArn(java.lang.String) -> withSubscriptionArn
    java.lang.String toString() -> toString
com.amazonaws.services.sns.model.package-info -> com.amazonaws.services.sns.model.package-info:
com.amazonaws.services.sns.model.transform.AddPermissionRequestMarshaller -> com.amazonaws.services.sns.model.transform.l:
com.amazonaws.services.sns.model.transform.AuthorizationErrorExceptionUnmarshaller -> com.amazonaws.services.sns.model.transform.t:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.ConfirmSubscriptionRequestMarshaller -> com.amazonaws.services.sns.model.transform.k:
com.amazonaws.services.sns.model.transform.ConfirmSubscriptionResultStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.D:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.CreateTopicRequestMarshaller -> com.amazonaws.services.sns.model.transform.o:
com.amazonaws.services.sns.model.transform.CreateTopicResultStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.n:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.DeleteTopicRequestMarshaller -> com.amazonaws.services.sns.model.transform.h:
com.amazonaws.services.sns.model.transform.GetTopicAttributesRequestMarshaller -> com.amazonaws.services.sns.model.transform.c:
com.amazonaws.services.sns.model.transform.GetTopicAttributesResultStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.e:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.GetTopicAttributesResultStaxUnmarshaller$AttributesMapEntryUnmarshaller -> com.amazonaws.services.sns.model.transform.u:
    com.amazonaws.services.sns.model.transform.GetTopicAttributesResultStaxUnmarshaller$AttributesMapEntryUnmarshaller instance -> a
    java.util.Map$Entry unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sns.model.transform.GetTopicAttributesResultStaxUnmarshaller$AttributesMapEntryUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.InternalErrorExceptionUnmarshaller -> com.amazonaws.services.sns.model.transform.d:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.InvalidParameterExceptionUnmarshaller -> com.amazonaws.services.sns.model.transform.v:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.ListSubscriptionsByTopicRequestMarshaller -> com.amazonaws.services.sns.model.transform.a:
com.amazonaws.services.sns.model.transform.ListSubscriptionsByTopicResultStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.s:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.ListSubscriptionsRequestMarshaller -> com.amazonaws.services.sns.model.transform.r:
com.amazonaws.services.sns.model.transform.ListSubscriptionsResultStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.g:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.ListTopicsRequestMarshaller -> com.amazonaws.services.sns.model.transform.p:
com.amazonaws.services.sns.model.transform.ListTopicsResultStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.q:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.NotFoundExceptionUnmarshaller -> com.amazonaws.services.sns.model.transform.C:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.PublishRequestMarshaller -> com.amazonaws.services.sns.model.transform.w:
com.amazonaws.services.sns.model.transform.PublishResultStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.B:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.RemovePermissionRequestMarshaller -> com.amazonaws.services.sns.model.transform.A:
com.amazonaws.services.sns.model.transform.SetTopicAttributesRequestMarshaller -> com.amazonaws.services.sns.model.transform.b:
com.amazonaws.services.sns.model.transform.SubscribeRequestMarshaller -> com.amazonaws.services.sns.model.transform.y:
com.amazonaws.services.sns.model.transform.SubscribeResultStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.z:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.SubscriptionLimitExceededExceptionUnmarshaller -> com.amazonaws.services.sns.model.transform.m:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.SubscriptionStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.x:
    com.amazonaws.services.sns.model.transform.SubscriptionStaxUnmarshaller instance -> a
    com.amazonaws.services.sns.model.Subscription unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sns.model.transform.SubscriptionStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.TopicLimitExceededExceptionUnmarshaller -> com.amazonaws.services.sns.model.transform.i:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.TopicStaxUnmarshaller -> com.amazonaws.services.sns.model.transform.j:
    com.amazonaws.services.sns.model.transform.TopicStaxUnmarshaller instance -> a
    com.amazonaws.services.sns.model.Topic unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sns.model.transform.TopicStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sns.model.transform.UnsubscribeRequestMarshaller -> com.amazonaws.services.sns.model.transform.f:
com.amazonaws.services.sns.package-info -> com.amazonaws.services.sns.package-info:
com.amazonaws.services.sns.util.SignatureChecker -> com.amazonaws.services.sns.util.SignatureChecker:
    java.security.Signature sigChecker -> a
    boolean verifyMessageSignature(java.lang.String,java.security.PublicKey) -> verifyMessageSignature
    boolean verifySignature(java.lang.String,java.lang.String,java.security.PublicKey) -> verifySignature
    java.lang.String stringToSign(java.util.SortedMap) -> a
    java.util.Map parseJSON(java.lang.String) -> a
    java.util.TreeMap subscribeMessageValues(java.util.Map) -> a
com.amazonaws.services.sns.util.package-info -> com.amazonaws.services.sns.util.package-info:
com.amazonaws.services.sqs.AmazonSQS -> com.amazonaws.services.sqs.AmazonSQS:
    void setEndpoint(java.lang.String) -> setEndpoint
    void setQueueAttributes(com.amazonaws.services.sqs.model.SetQueueAttributesRequest) -> setQueueAttributes
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult changeMessageVisibilityBatch(com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest) -> changeMessageVisibilityBatch
    void changeMessageVisibility(com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest) -> changeMessageVisibility
    com.amazonaws.services.sqs.model.GetQueueUrlResult getQueueUrl(com.amazonaws.services.sqs.model.GetQueueUrlRequest) -> getQueueUrl
    void removePermission(com.amazonaws.services.sqs.model.RemovePermissionRequest) -> removePermission
    com.amazonaws.services.sqs.model.GetQueueAttributesResult getQueueAttributes(com.amazonaws.services.sqs.model.GetQueueAttributesRequest) -> getQueueAttributes
    com.amazonaws.services.sqs.model.SendMessageBatchResult sendMessageBatch(com.amazonaws.services.sqs.model.SendMessageBatchRequest) -> sendMessageBatch
    void deleteQueue(com.amazonaws.services.sqs.model.DeleteQueueRequest) -> deleteQueue
    com.amazonaws.services.sqs.model.SendMessageResult sendMessage(com.amazonaws.services.sqs.model.SendMessageRequest) -> sendMessage
    com.amazonaws.services.sqs.model.ReceiveMessageResult receiveMessage(com.amazonaws.services.sqs.model.ReceiveMessageRequest) -> receiveMessage
    com.amazonaws.services.sqs.model.ListQueuesResult listQueues(com.amazonaws.services.sqs.model.ListQueuesRequest) -> listQueues
    com.amazonaws.services.sqs.model.DeleteMessageBatchResult deleteMessageBatch(com.amazonaws.services.sqs.model.DeleteMessageBatchRequest) -> deleteMessageBatch
    com.amazonaws.services.sqs.model.CreateQueueResult createQueue(com.amazonaws.services.sqs.model.CreateQueueRequest) -> createQueue
    void addPermission(com.amazonaws.services.sqs.model.AddPermissionRequest) -> addPermission
    void deleteMessage(com.amazonaws.services.sqs.model.DeleteMessageRequest) -> deleteMessage
    com.amazonaws.services.sqs.model.ListQueuesResult listQueues() -> listQueues
    void shutdown() -> shutdown
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
com.amazonaws.services.sqs.AmazonSQSAsync -> com.amazonaws.services.sqs.AmazonSQSAsync:
    java.util.concurrent.Future setQueueAttributesAsync(com.amazonaws.services.sqs.model.SetQueueAttributesRequest) -> setQueueAttributesAsync
    java.util.concurrent.Future changeMessageVisibilityBatchAsync(com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest) -> changeMessageVisibilityBatchAsync
    java.util.concurrent.Future changeMessageVisibilityAsync(com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest) -> changeMessageVisibilityAsync
    java.util.concurrent.Future getQueueUrlAsync(com.amazonaws.services.sqs.model.GetQueueUrlRequest) -> getQueueUrlAsync
    java.util.concurrent.Future removePermissionAsync(com.amazonaws.services.sqs.model.RemovePermissionRequest) -> removePermissionAsync
    java.util.concurrent.Future getQueueAttributesAsync(com.amazonaws.services.sqs.model.GetQueueAttributesRequest) -> getQueueAttributesAsync
    java.util.concurrent.Future sendMessageBatchAsync(com.amazonaws.services.sqs.model.SendMessageBatchRequest) -> sendMessageBatchAsync
    java.util.concurrent.Future deleteQueueAsync(com.amazonaws.services.sqs.model.DeleteQueueRequest) -> deleteQueueAsync
    java.util.concurrent.Future sendMessageAsync(com.amazonaws.services.sqs.model.SendMessageRequest) -> sendMessageAsync
    java.util.concurrent.Future receiveMessageAsync(com.amazonaws.services.sqs.model.ReceiveMessageRequest) -> receiveMessageAsync
    java.util.concurrent.Future listQueuesAsync(com.amazonaws.services.sqs.model.ListQueuesRequest) -> listQueuesAsync
    java.util.concurrent.Future deleteMessageBatchAsync(com.amazonaws.services.sqs.model.DeleteMessageBatchRequest) -> deleteMessageBatchAsync
    java.util.concurrent.Future createQueueAsync(com.amazonaws.services.sqs.model.CreateQueueRequest) -> createQueueAsync
    java.util.concurrent.Future addPermissionAsync(com.amazonaws.services.sqs.model.AddPermissionRequest) -> addPermissionAsync
    java.util.concurrent.Future deleteMessageAsync(com.amazonaws.services.sqs.model.DeleteMessageRequest) -> deleteMessageAsync
com.amazonaws.services.sqs.AmazonSQSAsyncClient -> com.amazonaws.services.sqs.AmazonSQSAsyncClient:
    java.util.concurrent.ExecutorService executorService -> d
    java.util.concurrent.ExecutorService getExecutorService() -> getExecutorService
    java.util.concurrent.Future setQueueAttributesAsync(com.amazonaws.services.sqs.model.SetQueueAttributesRequest) -> setQueueAttributesAsync
    java.util.concurrent.Future changeMessageVisibilityBatchAsync(com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest) -> changeMessageVisibilityBatchAsync
    java.util.concurrent.Future changeMessageVisibilityAsync(com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest) -> changeMessageVisibilityAsync
    java.util.concurrent.Future getQueueUrlAsync(com.amazonaws.services.sqs.model.GetQueueUrlRequest) -> getQueueUrlAsync
    java.util.concurrent.Future removePermissionAsync(com.amazonaws.services.sqs.model.RemovePermissionRequest) -> removePermissionAsync
    java.util.concurrent.Future getQueueAttributesAsync(com.amazonaws.services.sqs.model.GetQueueAttributesRequest) -> getQueueAttributesAsync
    java.util.concurrent.Future sendMessageBatchAsync(com.amazonaws.services.sqs.model.SendMessageBatchRequest) -> sendMessageBatchAsync
    java.util.concurrent.Future deleteQueueAsync(com.amazonaws.services.sqs.model.DeleteQueueRequest) -> deleteQueueAsync
    java.util.concurrent.Future sendMessageAsync(com.amazonaws.services.sqs.model.SendMessageRequest) -> sendMessageAsync
    java.util.concurrent.Future receiveMessageAsync(com.amazonaws.services.sqs.model.ReceiveMessageRequest) -> receiveMessageAsync
    java.util.concurrent.Future listQueuesAsync(com.amazonaws.services.sqs.model.ListQueuesRequest) -> listQueuesAsync
    java.util.concurrent.Future deleteMessageBatchAsync(com.amazonaws.services.sqs.model.DeleteMessageBatchRequest) -> deleteMessageBatchAsync
    java.util.concurrent.Future createQueueAsync(com.amazonaws.services.sqs.model.CreateQueueRequest) -> createQueueAsync
    java.util.concurrent.Future addPermissionAsync(com.amazonaws.services.sqs.model.AddPermissionRequest) -> addPermissionAsync
    java.util.concurrent.Future deleteMessageAsync(com.amazonaws.services.sqs.model.DeleteMessageRequest) -> deleteMessageAsync
com.amazonaws.services.sqs.AmazonSQSAsyncClient$1 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$1:
    com.amazonaws.services.sqs.model.SetQueueAttributesRequest val$setQueueAttributesRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$10 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$10:
    com.amazonaws.services.sqs.model.ReceiveMessageRequest val$receiveMessageRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.ReceiveMessageResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$11 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$11:
    com.amazonaws.services.sqs.model.ListQueuesRequest val$listQueuesRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.ListQueuesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$12 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$12:
    com.amazonaws.services.sqs.model.DeleteMessageBatchRequest val$deleteMessageBatchRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.DeleteMessageBatchResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$13 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$13:
    com.amazonaws.services.sqs.model.CreateQueueRequest val$createQueueRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.CreateQueueResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$14 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$14:
    com.amazonaws.services.sqs.model.AddPermissionRequest val$addPermissionRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$15 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$15:
    com.amazonaws.services.sqs.model.DeleteMessageRequest val$deleteMessageRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$2 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$2:
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest val$changeMessageVisibilityBatchRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$3 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$3:
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest val$changeMessageVisibilityRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$4 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$4:
    com.amazonaws.services.sqs.model.GetQueueUrlRequest val$getQueueUrlRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.GetQueueUrlResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$5 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$5:
    com.amazonaws.services.sqs.model.RemovePermissionRequest val$removePermissionRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$6 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$6:
    com.amazonaws.services.sqs.model.GetQueueAttributesRequest val$getQueueAttributesRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.GetQueueAttributesResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$7 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$7:
    com.amazonaws.services.sqs.model.SendMessageBatchRequest val$sendMessageBatchRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.SendMessageBatchResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$8 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$8:
    com.amazonaws.services.sqs.model.DeleteQueueRequest val$deleteQueueRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSAsyncClient$9 -> com.amazonaws.services.sqs.AmazonSQSAsyncClient$9:
    com.amazonaws.services.sqs.model.SendMessageRequest val$sendMessageRequest -> a
    com.amazonaws.services.sqs.AmazonSQSAsyncClient this$0 -> b
    com.amazonaws.services.sqs.model.SendMessageResult call() -> call
    java.lang.Object call() -> call
com.amazonaws.services.sqs.AmazonSQSClient -> com.amazonaws.services.sqs.AmazonSQSClient:
    com.amazonaws.auth.AWSCredentialsProvider awsCredentialsProvider -> d
    java.util.List exceptionUnmarshallers -> e
    com.amazonaws.auth.QueryStringSigner signer -> f
    void init() -> b
    void setQueueAttributes(com.amazonaws.services.sqs.model.SetQueueAttributesRequest) -> setQueueAttributes
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult changeMessageVisibilityBatch(com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest) -> changeMessageVisibilityBatch
    void changeMessageVisibility(com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest) -> changeMessageVisibility
    com.amazonaws.services.sqs.model.GetQueueUrlResult getQueueUrl(com.amazonaws.services.sqs.model.GetQueueUrlRequest) -> getQueueUrl
    void removePermission(com.amazonaws.services.sqs.model.RemovePermissionRequest) -> removePermission
    com.amazonaws.services.sqs.model.GetQueueAttributesResult getQueueAttributes(com.amazonaws.services.sqs.model.GetQueueAttributesRequest) -> getQueueAttributes
    com.amazonaws.services.sqs.model.SendMessageBatchResult sendMessageBatch(com.amazonaws.services.sqs.model.SendMessageBatchRequest) -> sendMessageBatch
    void deleteQueue(com.amazonaws.services.sqs.model.DeleteQueueRequest) -> deleteQueue
    com.amazonaws.services.sqs.model.SendMessageResult sendMessage(com.amazonaws.services.sqs.model.SendMessageRequest) -> sendMessage
    com.amazonaws.services.sqs.model.ReceiveMessageResult receiveMessage(com.amazonaws.services.sqs.model.ReceiveMessageRequest) -> receiveMessage
    com.amazonaws.services.sqs.model.ListQueuesResult listQueues(com.amazonaws.services.sqs.model.ListQueuesRequest) -> listQueues
    com.amazonaws.services.sqs.model.DeleteMessageBatchResult deleteMessageBatch(com.amazonaws.services.sqs.model.DeleteMessageBatchRequest) -> deleteMessageBatch
    com.amazonaws.services.sqs.model.CreateQueueResult createQueue(com.amazonaws.services.sqs.model.CreateQueueRequest) -> createQueue
    void addPermission(com.amazonaws.services.sqs.model.AddPermissionRequest) -> addPermission
    void deleteMessage(com.amazonaws.services.sqs.model.DeleteMessageRequest) -> deleteMessage
    com.amazonaws.services.sqs.model.ListQueuesResult listQueues() -> listQueues
    com.amazonaws.ResponseMetadata getCachedResponseMetadata(com.amazonaws.AmazonWebServiceRequest) -> getCachedResponseMetadata
    java.lang.Object invoke(com.amazonaws.Request,com.amazonaws.transform.Unmarshaller) -> a
com.amazonaws.services.sqs.QueueUrlHandler -> com.amazonaws.services.sqs.QueueUrlHandler:
    void beforeRequest(com.amazonaws.Request) -> beforeRequest
com.amazonaws.services.sqs.model.AddPermissionRequest -> com.amazonaws.services.sqs.model.AddPermissionRequest:
    java.lang.String queueUrl -> a
    java.lang.String label -> b
    java.util.List aWSAccountIds -> c
    java.util.List actions -> d
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.AddPermissionRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    com.amazonaws.services.sqs.model.AddPermissionRequest withLabel(java.lang.String) -> withLabel
    java.util.List getAWSAccountIds() -> getAWSAccountIds
    void setAWSAccountIds(java.util.Collection) -> setAWSAccountIds
    com.amazonaws.services.sqs.model.AddPermissionRequest withAWSAccountIds(java.lang.String[]) -> withAWSAccountIds
    com.amazonaws.services.sqs.model.AddPermissionRequest withAWSAccountIds(java.util.Collection) -> withAWSAccountIds
    java.util.List getActions() -> getActions
    void setActions(java.util.Collection) -> setActions
    com.amazonaws.services.sqs.model.AddPermissionRequest withActions(java.lang.String[]) -> withActions
    com.amazonaws.services.sqs.model.AddPermissionRequest withActions(java.util.Collection) -> withActions
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.BatchEntryIdsNotDistinctException -> com.amazonaws.services.sqs.model.BatchEntryIdsNotDistinctException:
com.amazonaws.services.sqs.model.BatchRequestTooLongException -> com.amazonaws.services.sqs.model.BatchRequestTooLongException:
com.amazonaws.services.sqs.model.BatchResultErrorEntry -> com.amazonaws.services.sqs.model.BatchResultErrorEntry:
    java.lang.String id -> a
    java.lang.Boolean senderFault -> b
    java.lang.String code -> c
    java.lang.String message -> d
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.services.sqs.model.BatchResultErrorEntry withId(java.lang.String) -> withId
    java.lang.Boolean isSenderFault() -> isSenderFault
    void setSenderFault(java.lang.Boolean) -> setSenderFault
    com.amazonaws.services.sqs.model.BatchResultErrorEntry withSenderFault(java.lang.Boolean) -> withSenderFault
    java.lang.Boolean getSenderFault() -> getSenderFault
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    com.amazonaws.services.sqs.model.BatchResultErrorEntry withCode(java.lang.String) -> withCode
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    com.amazonaws.services.sqs.model.BatchResultErrorEntry withMessage(java.lang.String) -> withMessage
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest -> com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest:
    java.lang.String queueUrl -> a
    java.util.List entries -> b
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.util.List getEntries() -> getEntries
    void setEntries(java.util.Collection) -> setEntries
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest withEntries(com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry[]) -> withEntries
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequest withEntries(java.util.Collection) -> withEntries
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry -> com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry:
    java.lang.String id -> a
    java.lang.String receiptHandle -> b
    java.lang.Integer visibilityTimeout -> c
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry withId(java.lang.String) -> withId
    java.lang.String getReceiptHandle() -> getReceiptHandle
    void setReceiptHandle(java.lang.String) -> setReceiptHandle
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry withReceiptHandle(java.lang.String) -> withReceiptHandle
    java.lang.Integer getVisibilityTimeout() -> getVisibilityTimeout
    void setVisibilityTimeout(java.lang.Integer) -> setVisibilityTimeout
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchRequestEntry withVisibilityTimeout(java.lang.Integer) -> withVisibilityTimeout
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult -> com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult:
    java.util.List successful -> a
    java.util.List failed -> b
    java.util.List getSuccessful() -> getSuccessful
    void setSuccessful(java.util.Collection) -> setSuccessful
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult withSuccessful(com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResultEntry[]) -> withSuccessful
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult withSuccessful(java.util.Collection) -> withSuccessful
    java.util.List getFailed() -> getFailed
    void setFailed(java.util.Collection) -> setFailed
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult withFailed(com.amazonaws.services.sqs.model.BatchResultErrorEntry[]) -> withFailed
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResult withFailed(java.util.Collection) -> withFailed
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResultEntry -> com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResultEntry:
    java.lang.String id -> a
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResultEntry withId(java.lang.String) -> withId
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest -> com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest:
    java.lang.String queueUrl -> a
    java.lang.String receiptHandle -> b
    java.lang.Integer visibilityTimeout -> c
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.lang.String getReceiptHandle() -> getReceiptHandle
    void setReceiptHandle(java.lang.String) -> setReceiptHandle
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest withReceiptHandle(java.lang.String) -> withReceiptHandle
    java.lang.Integer getVisibilityTimeout() -> getVisibilityTimeout
    void setVisibilityTimeout(java.lang.Integer) -> setVisibilityTimeout
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityRequest withVisibilityTimeout(java.lang.Integer) -> withVisibilityTimeout
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.CreateQueueRequest -> com.amazonaws.services.sqs.model.CreateQueueRequest:
    java.lang.String queueName -> a
    java.util.Map attributes -> b
    java.lang.String getQueueName() -> getQueueName
    void setQueueName(java.lang.String) -> setQueueName
    com.amazonaws.services.sqs.model.CreateQueueRequest withQueueName(java.lang.String) -> withQueueName
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    com.amazonaws.services.sqs.model.CreateQueueRequest withAttributes(java.util.Map) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.CreateQueueResult -> com.amazonaws.services.sqs.model.CreateQueueResult:
    java.lang.String queueUrl -> a
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.CreateQueueResult withQueueUrl(java.lang.String) -> withQueueUrl
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.DeleteMessageBatchRequest -> com.amazonaws.services.sqs.model.DeleteMessageBatchRequest:
    java.lang.String queueUrl -> a
    java.util.List entries -> b
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.DeleteMessageBatchRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.util.List getEntries() -> getEntries
    void setEntries(java.util.Collection) -> setEntries
    com.amazonaws.services.sqs.model.DeleteMessageBatchRequest withEntries(com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry[]) -> withEntries
    com.amazonaws.services.sqs.model.DeleteMessageBatchRequest withEntries(java.util.Collection) -> withEntries
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry -> com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry:
    java.lang.String id -> a
    java.lang.String receiptHandle -> b
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry withId(java.lang.String) -> withId
    java.lang.String getReceiptHandle() -> getReceiptHandle
    void setReceiptHandle(java.lang.String) -> setReceiptHandle
    com.amazonaws.services.sqs.model.DeleteMessageBatchRequestEntry withReceiptHandle(java.lang.String) -> withReceiptHandle
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.DeleteMessageBatchResult -> com.amazonaws.services.sqs.model.DeleteMessageBatchResult:
    java.util.List successful -> a
    java.util.List failed -> b
    java.util.List getSuccessful() -> getSuccessful
    void setSuccessful(java.util.Collection) -> setSuccessful
    com.amazonaws.services.sqs.model.DeleteMessageBatchResult withSuccessful(com.amazonaws.services.sqs.model.DeleteMessageBatchResultEntry[]) -> withSuccessful
    com.amazonaws.services.sqs.model.DeleteMessageBatchResult withSuccessful(java.util.Collection) -> withSuccessful
    java.util.List getFailed() -> getFailed
    void setFailed(java.util.Collection) -> setFailed
    com.amazonaws.services.sqs.model.DeleteMessageBatchResult withFailed(com.amazonaws.services.sqs.model.BatchResultErrorEntry[]) -> withFailed
    com.amazonaws.services.sqs.model.DeleteMessageBatchResult withFailed(java.util.Collection) -> withFailed
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.DeleteMessageBatchResultEntry -> com.amazonaws.services.sqs.model.DeleteMessageBatchResultEntry:
    java.lang.String id -> a
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.services.sqs.model.DeleteMessageBatchResultEntry withId(java.lang.String) -> withId
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.DeleteMessageRequest -> com.amazonaws.services.sqs.model.DeleteMessageRequest:
    java.lang.String queueUrl -> a
    java.lang.String receiptHandle -> b
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.DeleteMessageRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.lang.String getReceiptHandle() -> getReceiptHandle
    void setReceiptHandle(java.lang.String) -> setReceiptHandle
    com.amazonaws.services.sqs.model.DeleteMessageRequest withReceiptHandle(java.lang.String) -> withReceiptHandle
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.DeleteQueueRequest -> com.amazonaws.services.sqs.model.DeleteQueueRequest:
    java.lang.String queueUrl -> a
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.DeleteQueueRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.EmptyBatchRequestException -> com.amazonaws.services.sqs.model.EmptyBatchRequestException:
com.amazonaws.services.sqs.model.GetQueueAttributesRequest -> com.amazonaws.services.sqs.model.GetQueueAttributesRequest:
    java.lang.String queueUrl -> a
    java.util.List attributeNames -> b
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.GetQueueAttributesRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.util.List getAttributeNames() -> getAttributeNames
    void setAttributeNames(java.util.Collection) -> setAttributeNames
    com.amazonaws.services.sqs.model.GetQueueAttributesRequest withAttributeNames(java.lang.String[]) -> withAttributeNames
    com.amazonaws.services.sqs.model.GetQueueAttributesRequest withAttributeNames(java.util.Collection) -> withAttributeNames
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.GetQueueAttributesResult -> com.amazonaws.services.sqs.model.GetQueueAttributesResult:
    java.util.Map attributes -> a
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    com.amazonaws.services.sqs.model.GetQueueAttributesResult withAttributes(java.util.Map) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.GetQueueUrlRequest -> com.amazonaws.services.sqs.model.GetQueueUrlRequest:
    java.lang.String queueName -> a
    java.lang.String queueOwnerAWSAccountId -> b
    java.lang.String getQueueName() -> getQueueName
    void setQueueName(java.lang.String) -> setQueueName
    com.amazonaws.services.sqs.model.GetQueueUrlRequest withQueueName(java.lang.String) -> withQueueName
    java.lang.String getQueueOwnerAWSAccountId() -> getQueueOwnerAWSAccountId
    void setQueueOwnerAWSAccountId(java.lang.String) -> setQueueOwnerAWSAccountId
    com.amazonaws.services.sqs.model.GetQueueUrlRequest withQueueOwnerAWSAccountId(java.lang.String) -> withQueueOwnerAWSAccountId
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.GetQueueUrlResult -> com.amazonaws.services.sqs.model.GetQueueUrlResult:
    java.lang.String queueUrl -> a
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.GetQueueUrlResult withQueueUrl(java.lang.String) -> withQueueUrl
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.InvalidAttributeNameException -> com.amazonaws.services.sqs.model.InvalidAttributeNameException:
com.amazonaws.services.sqs.model.InvalidBatchEntryIdException -> com.amazonaws.services.sqs.model.InvalidBatchEntryIdException:
com.amazonaws.services.sqs.model.InvalidIdFormatException -> com.amazonaws.services.sqs.model.InvalidIdFormatException:
com.amazonaws.services.sqs.model.InvalidMessageContentsException -> com.amazonaws.services.sqs.model.InvalidMessageContentsException:
com.amazonaws.services.sqs.model.ListQueuesRequest -> com.amazonaws.services.sqs.model.ListQueuesRequest:
    java.lang.String queueNamePrefix -> a
    java.lang.String getQueueNamePrefix() -> getQueueNamePrefix
    void setQueueNamePrefix(java.lang.String) -> setQueueNamePrefix
    com.amazonaws.services.sqs.model.ListQueuesRequest withQueueNamePrefix(java.lang.String) -> withQueueNamePrefix
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.ListQueuesResult -> com.amazonaws.services.sqs.model.ListQueuesResult:
    java.util.List queueUrls -> a
    java.util.List getQueueUrls() -> getQueueUrls
    void setQueueUrls(java.util.Collection) -> setQueueUrls
    com.amazonaws.services.sqs.model.ListQueuesResult withQueueUrls(java.lang.String[]) -> withQueueUrls
    com.amazonaws.services.sqs.model.ListQueuesResult withQueueUrls(java.util.Collection) -> withQueueUrls
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.Message -> com.amazonaws.services.sqs.model.Message:
    java.lang.String messageId -> a
    java.lang.String receiptHandle -> b
    java.lang.String mD5OfBody -> c
    java.lang.String body -> d
    java.util.Map attributes -> e
    java.lang.String getMessageId() -> getMessageId
    void setMessageId(java.lang.String) -> setMessageId
    com.amazonaws.services.sqs.model.Message withMessageId(java.lang.String) -> withMessageId
    java.lang.String getReceiptHandle() -> getReceiptHandle
    void setReceiptHandle(java.lang.String) -> setReceiptHandle
    com.amazonaws.services.sqs.model.Message withReceiptHandle(java.lang.String) -> withReceiptHandle
    java.lang.String getMD5OfBody() -> getMD5OfBody
    void setMD5OfBody(java.lang.String) -> setMD5OfBody
    com.amazonaws.services.sqs.model.Message withMD5OfBody(java.lang.String) -> withMD5OfBody
    java.lang.String getBody() -> getBody
    void setBody(java.lang.String) -> setBody
    com.amazonaws.services.sqs.model.Message withBody(java.lang.String) -> withBody
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    com.amazonaws.services.sqs.model.Message withAttributes(java.util.Map) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.MessageNotInflightException -> com.amazonaws.services.sqs.model.MessageNotInflightException:
com.amazonaws.services.sqs.model.OverLimitException -> com.amazonaws.services.sqs.model.OverLimitException:
com.amazonaws.services.sqs.model.QueueAttributeName -> com.amazonaws.services.sqs.model.QueueAttributeName:
    com.amazonaws.services.sqs.model.QueueAttributeName Policy -> Policy
    com.amazonaws.services.sqs.model.QueueAttributeName VisibilityTimeout -> VisibilityTimeout
    com.amazonaws.services.sqs.model.QueueAttributeName MaximumMessageSize -> MaximumMessageSize
    com.amazonaws.services.sqs.model.QueueAttributeName MessageRetentionPeriod -> MessageRetentionPeriod
    com.amazonaws.services.sqs.model.QueueAttributeName ApproximateNumberOfMessages -> ApproximateNumberOfMessages
    com.amazonaws.services.sqs.model.QueueAttributeName ApproximateNumberOfMessagesNotVisible -> ApproximateNumberOfMessagesNotVisible
    com.amazonaws.services.sqs.model.QueueAttributeName CreatedTimestamp -> CreatedTimestamp
    com.amazonaws.services.sqs.model.QueueAttributeName LastModifiedTimestamp -> LastModifiedTimestamp
    com.amazonaws.services.sqs.model.QueueAttributeName QueueArn -> QueueArn
    com.amazonaws.services.sqs.model.QueueAttributeName ApproximateNumberOfMessagesDelayed -> ApproximateNumberOfMessagesDelayed
    com.amazonaws.services.sqs.model.QueueAttributeName DelaySeconds -> DelaySeconds
    java.lang.String value -> a
    com.amazonaws.services.sqs.model.QueueAttributeName[] $VALUES -> b
    com.amazonaws.services.sqs.model.QueueAttributeName[] values() -> values
    com.amazonaws.services.sqs.model.QueueAttributeName valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.amazonaws.services.sqs.model.QueueAttributeName fromValue(java.lang.String) -> fromValue
com.amazonaws.services.sqs.model.QueueDeletedRecentlyException -> com.amazonaws.services.sqs.model.QueueDeletedRecentlyException:
com.amazonaws.services.sqs.model.QueueDoesNotExistException -> com.amazonaws.services.sqs.model.QueueDoesNotExistException:
com.amazonaws.services.sqs.model.QueueNameExistsException -> com.amazonaws.services.sqs.model.QueueNameExistsException:
com.amazonaws.services.sqs.model.ReceiptHandleIsInvalidException -> com.amazonaws.services.sqs.model.ReceiptHandleIsInvalidException:
com.amazonaws.services.sqs.model.ReceiveMessageRequest -> com.amazonaws.services.sqs.model.ReceiveMessageRequest:
    java.lang.String queueUrl -> a
    java.util.List attributeNames -> b
    java.lang.Integer maxNumberOfMessages -> c
    java.lang.Integer visibilityTimeout -> d
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.ReceiveMessageRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.util.List getAttributeNames() -> getAttributeNames
    void setAttributeNames(java.util.Collection) -> setAttributeNames
    com.amazonaws.services.sqs.model.ReceiveMessageRequest withAttributeNames(java.lang.String[]) -> withAttributeNames
    com.amazonaws.services.sqs.model.ReceiveMessageRequest withAttributeNames(java.util.Collection) -> withAttributeNames
    java.lang.Integer getMaxNumberOfMessages() -> getMaxNumberOfMessages
    void setMaxNumberOfMessages(java.lang.Integer) -> setMaxNumberOfMessages
    com.amazonaws.services.sqs.model.ReceiveMessageRequest withMaxNumberOfMessages(java.lang.Integer) -> withMaxNumberOfMessages
    java.lang.Integer getVisibilityTimeout() -> getVisibilityTimeout
    void setVisibilityTimeout(java.lang.Integer) -> setVisibilityTimeout
    com.amazonaws.services.sqs.model.ReceiveMessageRequest withVisibilityTimeout(java.lang.Integer) -> withVisibilityTimeout
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.ReceiveMessageResult -> com.amazonaws.services.sqs.model.ReceiveMessageResult:
    java.util.List messages -> a
    java.util.List getMessages() -> getMessages
    void setMessages(java.util.Collection) -> setMessages
    com.amazonaws.services.sqs.model.ReceiveMessageResult withMessages(com.amazonaws.services.sqs.model.Message[]) -> withMessages
    com.amazonaws.services.sqs.model.ReceiveMessageResult withMessages(java.util.Collection) -> withMessages
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.RemovePermissionRequest -> com.amazonaws.services.sqs.model.RemovePermissionRequest:
    java.lang.String queueUrl -> a
    java.lang.String label -> b
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.RemovePermissionRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    com.amazonaws.services.sqs.model.RemovePermissionRequest withLabel(java.lang.String) -> withLabel
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.SendMessageBatchRequest -> com.amazonaws.services.sqs.model.SendMessageBatchRequest:
    java.lang.String queueUrl -> a
    java.util.List entries -> b
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.SendMessageBatchRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.util.List getEntries() -> getEntries
    void setEntries(java.util.Collection) -> setEntries
    com.amazonaws.services.sqs.model.SendMessageBatchRequest withEntries(com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry[]) -> withEntries
    com.amazonaws.services.sqs.model.SendMessageBatchRequest withEntries(java.util.Collection) -> withEntries
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry -> com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry:
    java.lang.String id -> a
    java.lang.String messageBody -> b
    java.lang.Integer delaySeconds -> c
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry withId(java.lang.String) -> withId
    java.lang.String getMessageBody() -> getMessageBody
    void setMessageBody(java.lang.String) -> setMessageBody
    com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry withMessageBody(java.lang.String) -> withMessageBody
    java.lang.Integer getDelaySeconds() -> getDelaySeconds
    void setDelaySeconds(java.lang.Integer) -> setDelaySeconds
    com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry withDelaySeconds(java.lang.Integer) -> withDelaySeconds
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.SendMessageBatchResult -> com.amazonaws.services.sqs.model.SendMessageBatchResult:
    java.util.List successful -> a
    java.util.List failed -> b
    java.util.List getSuccessful() -> getSuccessful
    void setSuccessful(java.util.Collection) -> setSuccessful
    com.amazonaws.services.sqs.model.SendMessageBatchResult withSuccessful(com.amazonaws.services.sqs.model.SendMessageBatchResultEntry[]) -> withSuccessful
    com.amazonaws.services.sqs.model.SendMessageBatchResult withSuccessful(java.util.Collection) -> withSuccessful
    java.util.List getFailed() -> getFailed
    void setFailed(java.util.Collection) -> setFailed
    com.amazonaws.services.sqs.model.SendMessageBatchResult withFailed(com.amazonaws.services.sqs.model.BatchResultErrorEntry[]) -> withFailed
    com.amazonaws.services.sqs.model.SendMessageBatchResult withFailed(java.util.Collection) -> withFailed
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.SendMessageBatchResultEntry -> com.amazonaws.services.sqs.model.SendMessageBatchResultEntry:
    java.lang.String id -> a
    java.lang.String messageId -> b
    java.lang.String mD5OfMessageBody -> c
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.amazonaws.services.sqs.model.SendMessageBatchResultEntry withId(java.lang.String) -> withId
    java.lang.String getMessageId() -> getMessageId
    void setMessageId(java.lang.String) -> setMessageId
    com.amazonaws.services.sqs.model.SendMessageBatchResultEntry withMessageId(java.lang.String) -> withMessageId
    java.lang.String getMD5OfMessageBody() -> getMD5OfMessageBody
    void setMD5OfMessageBody(java.lang.String) -> setMD5OfMessageBody
    com.amazonaws.services.sqs.model.SendMessageBatchResultEntry withMD5OfMessageBody(java.lang.String) -> withMD5OfMessageBody
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.SendMessageRequest -> com.amazonaws.services.sqs.model.SendMessageRequest:
    java.lang.String queueUrl -> a
    java.lang.String messageBody -> b
    java.lang.Integer delaySeconds -> c
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.SendMessageRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.lang.String getMessageBody() -> getMessageBody
    void setMessageBody(java.lang.String) -> setMessageBody
    com.amazonaws.services.sqs.model.SendMessageRequest withMessageBody(java.lang.String) -> withMessageBody
    java.lang.Integer getDelaySeconds() -> getDelaySeconds
    void setDelaySeconds(java.lang.Integer) -> setDelaySeconds
    com.amazonaws.services.sqs.model.SendMessageRequest withDelaySeconds(java.lang.Integer) -> withDelaySeconds
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.SendMessageResult -> com.amazonaws.services.sqs.model.SendMessageResult:
    java.lang.String mD5OfMessageBody -> a
    java.lang.String messageId -> b
    java.lang.String getMD5OfMessageBody() -> getMD5OfMessageBody
    void setMD5OfMessageBody(java.lang.String) -> setMD5OfMessageBody
    com.amazonaws.services.sqs.model.SendMessageResult withMD5OfMessageBody(java.lang.String) -> withMD5OfMessageBody
    java.lang.String getMessageId() -> getMessageId
    void setMessageId(java.lang.String) -> setMessageId
    com.amazonaws.services.sqs.model.SendMessageResult withMessageId(java.lang.String) -> withMessageId
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.SetQueueAttributesRequest -> com.amazonaws.services.sqs.model.SetQueueAttributesRequest:
    java.lang.String queueUrl -> a
    java.util.Map attributes -> b
    java.lang.String getQueueUrl() -> getQueueUrl
    void setQueueUrl(java.lang.String) -> setQueueUrl
    com.amazonaws.services.sqs.model.SetQueueAttributesRequest withQueueUrl(java.lang.String) -> withQueueUrl
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    com.amazonaws.services.sqs.model.SetQueueAttributesRequest withAttributes(java.util.Map) -> withAttributes
    java.lang.String toString() -> toString
com.amazonaws.services.sqs.model.TooManyEntriesInBatchRequestException -> com.amazonaws.services.sqs.model.TooManyEntriesInBatchRequestException:
com.amazonaws.services.sqs.model.package-info -> com.amazonaws.services.sqs.model.package-info:
com.amazonaws.services.sqs.model.transform.AddPermissionRequestMarshaller -> com.amazonaws.services.sqs.model.transform.L:
com.amazonaws.services.sqs.model.transform.BatchEntryIdsNotDistinctExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.l:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.BatchRequestTooLongExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.q:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.BatchResultErrorEntryStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.t:
    com.amazonaws.services.sqs.model.transform.BatchResultErrorEntryStaxUnmarshaller instance -> a
    com.amazonaws.services.sqs.model.BatchResultErrorEntry unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sqs.model.transform.BatchResultErrorEntryStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.ChangeMessageVisibilityBatchRequestMarshaller -> com.amazonaws.services.sqs.model.transform.c:
com.amazonaws.services.sqs.model.transform.ChangeMessageVisibilityBatchResultEntryStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.g:
    com.amazonaws.services.sqs.model.transform.ChangeMessageVisibilityBatchResultEntryStaxUnmarshaller instance -> a
    com.amazonaws.services.sqs.model.ChangeMessageVisibilityBatchResultEntry unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sqs.model.transform.ChangeMessageVisibilityBatchResultEntryStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.ChangeMessageVisibilityBatchResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.f:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.ChangeMessageVisibilityRequestMarshaller -> com.amazonaws.services.sqs.model.transform.d:
com.amazonaws.services.sqs.model.transform.CreateQueueRequestMarshaller -> com.amazonaws.services.sqs.model.transform.S:
com.amazonaws.services.sqs.model.transform.CreateQueueResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.y:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.DeleteMessageBatchRequestMarshaller -> com.amazonaws.services.sqs.model.transform.b:
com.amazonaws.services.sqs.model.transform.DeleteMessageBatchResultEntryStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.e:
    com.amazonaws.services.sqs.model.transform.DeleteMessageBatchResultEntryStaxUnmarshaller instance -> a
    com.amazonaws.services.sqs.model.DeleteMessageBatchResultEntry unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sqs.model.transform.DeleteMessageBatchResultEntryStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.DeleteMessageBatchResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.z:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.DeleteMessageRequestMarshaller -> com.amazonaws.services.sqs.model.transform.I:
com.amazonaws.services.sqs.model.transform.DeleteQueueRequestMarshaller -> com.amazonaws.services.sqs.model.transform.j:
com.amazonaws.services.sqs.model.transform.EmptyBatchRequestExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.x:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.GetQueueAttributesRequestMarshaller -> com.amazonaws.services.sqs.model.transform.N:
com.amazonaws.services.sqs.model.transform.GetQueueAttributesResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.C:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.GetQueueAttributesResultStaxUnmarshaller$AttributesMapEntryUnmarshaller -> com.amazonaws.services.sqs.model.transform.F:
    com.amazonaws.services.sqs.model.transform.GetQueueAttributesResultStaxUnmarshaller$AttributesMapEntryUnmarshaller instance -> a
    java.util.Map$Entry unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sqs.model.transform.GetQueueAttributesResultStaxUnmarshaller$AttributesMapEntryUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.GetQueueUrlRequestMarshaller -> com.amazonaws.services.sqs.model.transform.n:
com.amazonaws.services.sqs.model.transform.GetQueueUrlResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.i:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.InvalidAttributeNameExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.m:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.InvalidBatchEntryIdExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.P:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.InvalidIdFormatExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.r:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.InvalidMessageContentsExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.J:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.ListQueuesRequestMarshaller -> com.amazonaws.services.sqs.model.transform.h:
com.amazonaws.services.sqs.model.transform.ListQueuesResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.D:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.MessageNotInflightExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.H:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.MessageStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.k:
    com.amazonaws.services.sqs.model.transform.MessageStaxUnmarshaller instance -> a
    com.amazonaws.services.sqs.model.Message unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sqs.model.transform.MessageStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.MessageStaxUnmarshaller$AttributesMapEntryUnmarshaller -> com.amazonaws.services.sqs.model.transform.a:
    com.amazonaws.services.sqs.model.transform.MessageStaxUnmarshaller$AttributesMapEntryUnmarshaller instance -> a
    java.util.Map$Entry unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sqs.model.transform.MessageStaxUnmarshaller$AttributesMapEntryUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.OverLimitExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.s:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.QueueDeletedRecentlyExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.v:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.QueueDoesNotExistExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.p:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.QueueNameExistsExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.B:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.ReceiptHandleIsInvalidExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.R:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.ReceiveMessageRequestMarshaller -> com.amazonaws.services.sqs.model.transform.Q:
com.amazonaws.services.sqs.model.transform.ReceiveMessageResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.A:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.RemovePermissionRequestMarshaller -> com.amazonaws.services.sqs.model.transform.G:
com.amazonaws.services.sqs.model.transform.SendMessageBatchRequestMarshaller -> com.amazonaws.services.sqs.model.transform.u:
com.amazonaws.services.sqs.model.transform.SendMessageBatchResultEntryStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.M:
    com.amazonaws.services.sqs.model.transform.SendMessageBatchResultEntryStaxUnmarshaller instance -> a
    com.amazonaws.services.sqs.model.SendMessageBatchResultEntry unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.services.sqs.model.transform.SendMessageBatchResultEntryStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.SendMessageBatchResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.E:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.SendMessageRequestMarshaller -> com.amazonaws.services.sqs.model.transform.O:
com.amazonaws.services.sqs.model.transform.SendMessageResultStaxUnmarshaller -> com.amazonaws.services.sqs.model.transform.o:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.model.transform.SetQueueAttributesRequestMarshaller -> com.amazonaws.services.sqs.model.transform.K:
com.amazonaws.services.sqs.model.transform.TooManyEntriesInBatchRequestExceptionUnmarshaller -> com.amazonaws.services.sqs.model.transform.w:
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.services.sqs.package-info -> com.amazonaws.services.sqs.package-info:
com.amazonaws.transform.JsonUnmarshallerContext -> com.amazonaws.transform.f:
    java.lang.String stackString -> a
    java.util.Map metadata -> b
    java.util.List metadataExpressions -> c
    java.util.Map getMetadata() -> a
    void registerMetadataExpression(java.lang.String,int,java.lang.String) -> a
    java.lang.String toString() -> toString
com.amazonaws.transform.JsonUnmarshallerContext$MetadataExpression -> com.amazonaws.transform.r:
com.amazonaws.transform.LegacyErrorUnmarshaller -> com.amazonaws.transform.q:
    java.lang.Class exceptionClass -> a
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.String getErrorPropertyPath(java.lang.String) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.MapEntry -> com.amazonaws.transform.d:
    java.lang.Object key -> a
    java.lang.Object value -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object setKey(java.lang.Object) -> a
com.amazonaws.transform.SimpleTypeStaxUnmarshallers -> com.amazonaws.transform.o:
    com.amazonaws.util.DateUtils dateUtils -> a
    org.apache.commons.logging.Log log -> b
    com.amazonaws.util.DateUtils access$000() -> a
    org.apache.commons.logging.Log access$100() -> b
com.amazonaws.transform.SimpleTypeStaxUnmarshallers$BooleanStaxUnmarshaller -> com.amazonaws.transform.c:
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$BooleanStaxUnmarshaller instance -> a
    java.lang.Boolean unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$BooleanStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.SimpleTypeStaxUnmarshallers$DateStaxUnmarshaller -> com.amazonaws.transform.l:
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$DateStaxUnmarshaller instance -> a
    java.util.Date unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$DateStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.SimpleTypeStaxUnmarshallers$DoubleStaxUnmarshaller -> com.amazonaws.transform.p:
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$DoubleStaxUnmarshaller instance -> a
    java.lang.Double unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$DoubleStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.SimpleTypeStaxUnmarshallers$FloatStaxUnmarshaller -> com.amazonaws.transform.h:
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$FloatStaxUnmarshaller instance -> a
    java.lang.Float unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$FloatStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.SimpleTypeStaxUnmarshallers$IntegerStaxUnmarshaller -> com.amazonaws.transform.i:
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$IntegerStaxUnmarshaller instance -> a
    java.lang.Integer unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$IntegerStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.SimpleTypeStaxUnmarshallers$LongStaxUnmarshaller -> com.amazonaws.transform.m:
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$LongStaxUnmarshaller instance -> a
    java.lang.Long unmarshall(com.amazonaws.transform.StaxUnmarshallerContext) -> a
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$LongStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.SimpleTypeStaxUnmarshallers$StringStaxUnmarshaller -> com.amazonaws.transform.n:
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$StringStaxUnmarshaller instance -> a
    com.amazonaws.transform.SimpleTypeStaxUnmarshallers$StringStaxUnmarshaller getInstance() -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.StandardErrorUnmarshaller -> com.amazonaws.transform.g:
    java.lang.Class exceptionClass -> a
    com.amazonaws.AmazonServiceException unmarshall(org.w3c.dom.Node) -> a
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.StaxUnmarshallerContext -> com.amazonaws.transform.e:
    com.amazonaws.javax.xml.stream.events.XMLEvent currentEvent -> b
    com.amazonaws.javax.xml.stream.XMLEventReader eventReader -> c
    java.util.Stack stack -> a
    java.lang.String stackString -> d
    java.util.Map metadata -> e
    java.util.List metadataExpressions -> f
    java.util.Iterator attributeIterator -> g
    java.lang.String readText() -> a
    boolean testExpression(java.lang.String,int) -> a
    boolean isStartOfDocument() -> b
    com.amazonaws.javax.xml.stream.events.XMLEvent nextEvent() -> c
    java.util.Map getMetadata() -> d
    void registerMetadataExpression(java.lang.String,int,java.lang.String) -> a
    com.amazonaws.services.s3.internal.crypto.EncryptionInstruction generateInstruction(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider) -> a
    com.amazonaws.services.s3.internal.crypto.EncryptionInstruction buildInstructionFromInstructionFile(com.amazonaws.services.s3.model.S3Object,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider) -> a
    com.amazonaws.services.s3.internal.crypto.EncryptionInstruction buildInstructionFromObjectMetadata(com.amazonaws.services.s3.model.S3Object,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider) -> b
    com.amazonaws.services.s3.model.PutObjectRequest encryptRequestUsingInstruction(com.amazonaws.services.s3.model.PutObjectRequest,com.amazonaws.services.s3.internal.crypto.EncryptionInstruction) -> a
    com.amazonaws.services.s3.model.S3Object decryptObjectUsingInstruction(com.amazonaws.services.s3.model.S3Object,com.amazonaws.services.s3.internal.crypto.EncryptionInstruction) -> a
    com.amazonaws.services.s3.model.PutObjectRequest createInstructionPutRequest(com.amazonaws.services.s3.model.PutObjectRequest,com.amazonaws.services.s3.internal.crypto.EncryptionInstruction) -> b
    com.amazonaws.services.s3.model.PutObjectRequest createInstructionPutRequest(java.lang.String,java.lang.String,com.amazonaws.services.s3.internal.crypto.EncryptionInstruction) -> a
    long[] getAdjustedCryptoRange(long[]) -> a
    com.amazonaws.services.s3.model.S3Object adjustOutputToDesiredRange(com.amazonaws.services.s3.model.S3Object,long[]) -> a
    javax.crypto.SecretKey generateOneTimeUseSymmetricKey() -> e
    javax.crypto.Cipher createSymmetricCipher(javax.crypto.SecretKey,int,java.security.Provider,byte[]) -> a
    byte[] getEncryptedSymmetricKey(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider) -> a
    javax.crypto.SecretKey getDecryptedSymmetricKey(byte[],com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider) -> a
    java.io.InputStream getEncryptedInputStream(com.amazonaws.services.s3.model.PutObjectRequest,javax.crypto.Cipher) -> a
    java.io.InputStream getEncryptedInputStream(com.amazonaws.services.s3.model.UploadPartRequest,javax.crypto.Cipher) -> a
    byte[] getCryptoBytesFromMetadata(java.lang.String,com.amazonaws.services.s3.model.ObjectMetadata) -> a
    java.util.Map convertJSONToMap(java.lang.String) -> a
    void updateMetadataWithEncryptionInstruction(com.amazonaws.services.s3.model.PutObjectRequest,com.amazonaws.services.s3.internal.crypto.EncryptionInstruction) -> c
    void updateMetadata(com.amazonaws.services.s3.model.ObjectMetadata,byte[],javax.crypto.Cipher,java.util.Map) -> a
    com.amazonaws.services.s3.model.ObjectMetadata updateMetadataWithEncryptionInfo(com.amazonaws.services.s3.model.InitiateMultipartUploadRequest,byte[],javax.crypto.Cipher,java.util.Map) -> a
    com.amazonaws.services.s3.model.EncryptionMaterials retrieveOriginalMaterials(java.util.Map,com.amazonaws.services.s3.model.EncryptionMaterialsAccessor) -> a
    com.amazonaws.util.json.JSONObject convertInstructionToJSONObject(com.amazonaws.services.s3.internal.crypto.EncryptionInstruction) -> a
    com.amazonaws.util.json.JSONObject parseJSONInstruction(com.amazonaws.services.s3.model.S3Object) -> a
    java.lang.String convertStreamToString(java.io.InputStream) -> a
com.amazonaws.transform.StaxUnmarshallerContext$MetadataExpression -> com.amazonaws.transform.j:
    java.lang.String expression -> a
    int targetDepth -> b
    java.lang.String key -> c
com.amazonaws.transform.Unmarshaller -> com.amazonaws.transform.k:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.VoidJsonUnmarshaller -> com.amazonaws.transform.b:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.transform.VoidStaxUnmarshaller -> com.amazonaws.transform.a:
    java.lang.Object unmarshall(java.lang.Object) -> unmarshall
com.amazonaws.util.CountingInputStream -> com.amazonaws.util.a:
    long byteCount -> a
    long getByteCount() -> a
    int read() -> read
    int read(byte[],int,int) -> read
com.amazonaws.util.DateUtils -> com.amazonaws.util.DateUtils:
    java.text.SimpleDateFormat iso8601DateParser -> a
    java.text.SimpleDateFormat alternateIso8601DateParser -> b
    java.text.SimpleDateFormat rfc822DateParser -> c
    java.util.Date parseIso8601Date(java.lang.String) -> parseIso8601Date
    java.lang.String formatIso8601Date(java.util.Date) -> formatIso8601Date
    java.util.Date parseRfc822Date(java.lang.String) -> parseRfc822Date
    java.lang.String formatRfc822Date(java.util.Date) -> formatRfc822Date
com.amazonaws.util.HttpUtils -> com.amazonaws.util.HttpUtils:
    java.lang.String urlEncode(java.lang.String,boolean) -> urlEncode
    boolean isUsingNonDefaultPort(java.net.URI) -> isUsingNonDefaultPort
com.amazonaws.util.NamespaceRemovingInputStream -> com.amazonaws.util.g:
    byte[] lookAheadData -> a
    boolean hasRemovedNamespace -> b
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
com.amazonaws.util.NamespaceRemovingInputStream$StringPrefixSlicer -> com.amazonaws.util.h:
    java.lang.String s -> a
    java.lang.String getString() -> a
    boolean removePrefix(java.lang.String) -> a
    boolean removeRepeatingPrefix(java.lang.String) -> b
    boolean removePrefixEndingWith(java.lang.String) -> c
com.amazonaws.util.ResponseMetadataCache -> com.amazonaws.util.f:
    int maxEntries -> a
    java.util.Map map -> b
    java.util.List objectList -> c
    void add(java.lang.Object,com.amazonaws.ResponseMetadata) -> a
    com.amazonaws.ResponseMetadata get(java.lang.Object) -> a
com.amazonaws.util.StringInputStream -> com.amazonaws.util.i:
com.amazonaws.util.StringUtils -> com.amazonaws.util.c:
    com.amazonaws.util.DateUtils dateUtils -> a
    java.lang.String fromInteger(java.lang.Integer) -> a
    java.lang.String fromLong(java.lang.Long) -> a
    java.lang.String fromString(java.lang.String) -> a
    java.lang.String fromBoolean(java.lang.Boolean) -> a
    java.lang.String fromDate(java.util.Date) -> a
    java.lang.String fromDouble(java.lang.Double) -> a
    java.lang.String fromByteBuffer(java.nio.ByteBuffer) -> a
com.amazonaws.util.TimingInfo -> com.amazonaws.util.b:
    java.util.Map subMeasurementsByName -> a
    java.util.Map countersByName -> b
    void addSubMeasurement(java.lang.String,com.amazonaws.util.TimingInfo) -> a
    void addCounter(java.lang.String,java.lang.Number) -> a
com.amazonaws.util.VersionInfoUtils -> com.amazonaws.util.d:
    java.lang.String version -> a
    java.lang.String platform -> b
    java.lang.String userAgent -> c
    org.apache.commons.logging.Log log -> d
    java.lang.String getVersion() -> a
    java.lang.String getPlatform() -> c
    java.lang.String getUserAgent() -> b
    void initializeVersion() -> d
com.amazonaws.util.XpathUtils -> com.amazonaws.util.e:
    javax.xml.parsers.DocumentBuilderFactory factory -> a
    org.w3c.dom.Document documentFrom(java.io.InputStream) -> a
    java.lang.String asString(java.lang.String,org.w3c.dom.Node) -> a
    java.lang.Float asFloat(java.lang.String,org.w3c.dom.Node) -> b
    java.lang.String evaluateAsString(java.lang.String,org.w3c.dom.Node) -> c
com.amazonaws.util.json.JSONArray -> com.amazonaws.util.json.b:
    java.util.ArrayList myArrayList -> a
    java.lang.String join(java.lang.String) -> a
    java.lang.String toString() -> toString
com.amazonaws.util.json.JSONException -> com.amazonaws.util.json.e:
    java.lang.Throwable cause -> a
    java.lang.Throwable getCause() -> getCause
com.amazonaws.util.json.JSONObject -> com.amazonaws.util.json.f:
    java.util.Map map -> a
    java.lang.Object NULL -> b
    java.lang.String getString(java.lang.String) -> a
    java.util.Iterator keys() -> a
    java.lang.Object opt(java.lang.String) -> d
    com.amazonaws.util.json.JSONObject put(java.lang.String,java.lang.Object) -> a
    com.amazonaws.util.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> b
    java.lang.String quote(java.lang.String) -> b
    java.lang.Object stringToValue(java.lang.String) -> c
    void testValidity(java.lang.Object) -> c
    java.lang.String toString() -> toString
    java.lang.String valueToString(java.lang.Object) -> a
    java.lang.Object wrap(java.lang.Object) -> b
com.amazonaws.util.json.JSONObject$Null -> com.amazonaws.util.json.c:
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amazonaws.util.json.JSONTokener -> com.amazonaws.util.json.d:
    int character -> a
    boolean eof -> b
    int index -> c
    int line -> d
    char previous -> e
    java.io.Reader reader -> f
    boolean usePrevious -> g
    void back() -> a
    char next() -> b
    java.lang.String next(int) -> a
    char nextClean() -> c
    java.lang.Object nextValue() -> d
    com.amazonaws.util.json.JSONException syntaxError(java.lang.String) -> a
    java.lang.String toString() -> toString
com.amazonaws.util.json.JSONWriter -> com.amazonaws.util.json.a:
    boolean comma -> a
    char mode -> b
    com.amazonaws.util.json.JSONObject[] stack -> c
    int top -> d
    java.io.Writer writer -> e
    com.amazonaws.util.json.JSONWriter append(java.lang.String) -> b
    com.amazonaws.util.json.JSONWriter array() -> a
    com.amazonaws.util.json.JSONWriter end(char,char) -> a
    com.amazonaws.util.json.JSONWriter endArray() -> b
    com.amazonaws.util.json.JSONWriter endObject() -> c
    com.amazonaws.util.json.JSONWriter key(java.lang.String) -> a
    com.amazonaws.util.json.JSONWriter object() -> d
    void push(com.amazonaws.util.json.JSONObject) -> a
    com.amazonaws.util.json.JSONWriter value(java.lang.Object) -> a
org.apache.commons.codec.DecoderException -> org.apache.commons.codec.b:
org.apache.commons.codec.EncoderException -> org.apache.commons.codec.a:
org.apache.commons.codec.binary.Base64 -> org.apache.commons.codec.binary.Base64:
    int CHUNK_SIZE -> CHUNK_SIZE
    byte[] CHUNK_SEPARATOR -> CHUNK_SEPARATOR
    int BASELENGTH -> BASELENGTH
    int LOOKUPLENGTH -> LOOKUPLENGTH
    int EIGHTBIT -> EIGHTBIT
    int SIXTEENBIT -> SIXTEENBIT
    int TWENTYFOURBITGROUP -> TWENTYFOURBITGROUP
    int FOURBYTE -> FOURBYTE
    int SIGN -> SIGN
    byte PAD -> PAD
    byte[] base64Alphabet -> base64Alphabet
    byte[] lookUpBase64Alphabet -> lookUpBase64Alphabet
    boolean isBase64(byte) -> isBase64
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    byte[] discardWhitespace(byte[]) -> discardWhitespace
    byte[] discardNonBase64(byte[]) -> discardNonBase64
    java.lang.Object encode(java.lang.Object) -> encode
    byte[] encode(byte[]) -> encode
org.apache.commons.codec.binary.Hex -> org.apache.commons.codec.binary.Hex:
    char[] DIGITS -> DIGITS
    byte[] decodeHex(char[]) -> decodeHex
    int toDigit(char,int) -> toDigit
    char[] encodeHex(byte[]) -> encodeHex
    byte[] decode(byte[]) -> decode
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.Object encode(java.lang.Object) -> encode
org.apache.commons.logging.Log -> org.apache.commons.logging.Log:
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
org.apache.commons.logging.LogConfigurationException -> org.apache.commons.logging.LogConfigurationException:
    java.lang.Throwable cause -> a
    java.lang.Throwable getCause() -> getCause
org.apache.commons.logging.LogFactory -> org.apache.commons.logging.LogFactory:
    java.lang.String PRIORITY_KEY -> PRIORITY_KEY
    java.lang.String TCCL_KEY -> TCCL_KEY
    java.lang.String FACTORY_PROPERTY -> FACTORY_PROPERTY
    java.lang.String FACTORY_DEFAULT -> FACTORY_DEFAULT
    java.lang.String FACTORY_PROPERTIES -> FACTORY_PROPERTIES
    java.lang.String DIAGNOSTICS_DEST_PROPERTY -> DIAGNOSTICS_DEST_PROPERTY
    java.io.PrintStream diagnosticsStream -> a
    java.lang.String diagnosticPrefix -> b
    java.lang.String HASHTABLE_IMPLEMENTATION_PROPERTY -> HASHTABLE_IMPLEMENTATION_PROPERTY
    java.lang.ClassLoader thisClassLoader -> c
    java.util.Hashtable factories -> d
    org.apache.commons.logging.LogFactory nullClassLoaderFactory -> e
    java.lang.Class class$java$lang$Thread -> f
    java.lang.Class class$org$apache$commons$logging$LogFactory -> g
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String[] getAttributeNames() -> getAttributeNames
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    void release() -> release
    void removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.util.Hashtable createFactoryStore() -> a
    java.lang.String trim(java.lang.String) -> c
    org.apache.commons.logging.LogFactory getFactory() -> getFactory
    org.apache.commons.logging.Log getLog(java.lang.Class) -> getLog
    org.apache.commons.logging.Log getLog(java.lang.String) -> getLog
    void release(java.lang.ClassLoader) -> release
    void releaseAll() -> releaseAll
    java.lang.ClassLoader getClassLoader(java.lang.Class) -> a
    java.lang.ClassLoader directGetContextClassLoader() -> b
    org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader) -> a
    java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader) -> a
    boolean implementsLogFactory(java.lang.Class) -> b
    java.util.Properties getConfigurationFile(java.lang.ClassLoader,java.lang.String) -> a
    java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> a
    boolean isDiagnosticsEnabled() -> c
    void logDiagnostic(java.lang.String) -> d
    void logRawDiagnostic(java.lang.String) -> a
    void logHierarchy(java.lang.String,java.lang.ClassLoader) -> b
    java.lang.String objectId(java.lang.Object) -> objectId
    java.lang.Class class$(java.lang.String) -> e
    void access$000(java.lang.String) -> b
org.apache.commons.logging.LogFactory$1 -> org.apache.commons.logging.LogFactory$1:
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$2 -> org.apache.commons.logging.LogFactory$2:
    java.lang.String val$factoryClass -> a
    java.lang.ClassLoader val$classLoader -> b
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$3 -> org.apache.commons.logging.LogFactory$3:
    java.lang.ClassLoader val$loader -> a
    java.lang.String val$name -> b
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$4 -> org.apache.commons.logging.LogFactory$4:
    java.lang.ClassLoader val$loader -> a
    java.lang.String val$name -> b
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$5 -> org.apache.commons.logging.LogFactory$5:
    java.net.URL val$url -> a
    java.lang.Object run() -> run
org.apache.commons.logging.LogFactory$6 -> org.apache.commons.logging.LogFactory$6:
    java.lang.String val$key -> a
    java.lang.String val$def -> b
    java.lang.Object run() -> run
org.apache.commons.logging.LogSource -> org.apache.commons.logging.LogSource:
    java.util.Hashtable logs -> a
    boolean log4jIsAvailable -> b
    boolean jdk14IsAvailable -> c
    java.lang.reflect.Constructor logImplctor -> d
    void setLogImplementation(java.lang.String) -> setLogImplementation
    void setLogImplementation(java.lang.Class) -> setLogImplementation
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log makeNewLogInstance(java.lang.String) -> makeNewLogInstance
    java.lang.String[] getLogNames() -> getLogNames
org.apache.commons.logging.impl.Jdk14Logger -> org.apache.commons.logging.impl.e:
    java.util.logging.Logger logger -> a
    void log(java.util.logging.Level,java.lang.String,java.lang.Throwable) -> a
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    java.util.logging.Logger getLogger() -> a
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
org.apache.commons.logging.impl.LogFactoryImpl -> org.apache.commons.logging.impl.LogFactoryImpl:
    int PKG_LEN -> a
    java.lang.String LOG_PROPERTY -> LOG_PROPERTY
    java.lang.String ALLOW_FLAWED_CONTEXT_PROPERTY -> ALLOW_FLAWED_CONTEXT_PROPERTY
    java.lang.String ALLOW_FLAWED_DISCOVERY_PROPERTY -> ALLOW_FLAWED_DISCOVERY_PROPERTY
    java.lang.String ALLOW_FLAWED_HIERARCHY_PROPERTY -> ALLOW_FLAWED_HIERARCHY_PROPERTY
    java.lang.String[] classesToDiscover -> b
    boolean useTCCL -> c
    java.lang.String diagnosticPrefix -> d
    java.util.Hashtable attributes -> e
    java.util.Hashtable instances -> f
    java.lang.reflect.Constructor logConstructor -> g
    java.lang.Class[] logConstructorSignature -> h
    java.lang.reflect.Method logMethod -> i
    java.lang.Class[] logMethodSignature -> j
    boolean allowFlawedContext -> k
    boolean allowFlawedDiscovery -> l
    boolean allowFlawedHierarchy -> m
    java.lang.Class class$java$lang$String -> n
    java.lang.Class class$org$apache$commons$logging$LogFactory -> o
    java.lang.Class class$org$apache$commons$logging$impl$LogFactoryImpl -> p
    java.lang.Class class$org$apache$commons$logging$Log -> q
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String[] getAttributeNames() -> getAttributeNames
    org.apache.commons.logging.Log getInstance(java.lang.Class) -> getInstance
    org.apache.commons.logging.Log getInstance(java.lang.String) -> getInstance
    void release() -> release
    void removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.ClassLoader getClassLoader(java.lang.Class) -> a
    void logDiagnostic(java.lang.String) -> c
    org.apache.commons.logging.Log newInstance(java.lang.String) -> d
    java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> a
    java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader) -> a
    java.lang.String getConfigurationValue(java.lang.String) -> e
    boolean getBooleanConfiguration(java.lang.String,boolean) -> a
    void informUponSimilarName(java.lang.StringBuffer,java.lang.String,java.lang.String) -> a
    java.lang.String findUserSpecifiedLogClassName() -> d
    org.apache.commons.logging.Log createLogFromClass(java.lang.String,java.lang.String,boolean) -> a
    java.lang.ClassLoader getLowestClassLoader(java.lang.ClassLoader,java.lang.ClassLoader) -> a
    void handleFlawedHierarchy(java.lang.ClassLoader,java.lang.Class) -> a
    java.lang.Class class$(java.lang.String) -> f
    java.lang.ClassLoader access$000() -> a
org.apache.commons.logging.impl.LogFactoryImpl$1 -> org.apache.commons.logging.impl.a:
    java.lang.Object run() -> run
org.apache.commons.logging.impl.LogFactoryImpl$2 -> org.apache.commons.logging.impl.c:
    java.lang.String val$key -> a
    java.lang.String val$def -> b
    java.lang.Object run() -> run
org.apache.commons.logging.impl.LogFactoryImpl$3 -> org.apache.commons.logging.impl.b:
    java.lang.ClassLoader val$cl -> a
    java.lang.Object run() -> run
org.apache.commons.logging.impl.NoOpLog -> org.apache.commons.logging.impl.d:
    void trace(java.lang.Object) -> trace
    void trace(java.lang.Object,java.lang.Throwable) -> trace
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Throwable) -> debug
    void info(java.lang.Object) -> info
    void info(java.lang.Object,java.lang.Throwable) -> info
    void warn(java.lang.Object) -> warn
    void warn(java.lang.Object,java.lang.Throwable) -> warn
    void error(java.lang.Object) -> error
    void error(java.lang.Object,java.lang.Throwable) -> error
    void fatal(java.lang.Object) -> fatal
    void fatal(java.lang.Object,java.lang.Throwable) -> fatal
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isErrorEnabled() -> isErrorEnabled
    boolean isFatalEnabled() -> isFatalEnabled
    boolean isInfoEnabled() -> isInfoEnabled
    boolean isTraceEnabled() -> isTraceEnabled
    boolean isWarnEnabled() -> isWarnEnabled
org.codehaus.jackson.Base64Variant -> org.codehaus.jackson.Base64Variant:
    int BASE64_VALUE_INVALID -> BASE64_VALUE_INVALID
    int BASE64_VALUE_PADDING -> BASE64_VALUE_PADDING
    int[] _asciiToBase64 -> a
    char[] _base64ToAsciiC -> b
    byte[] _base64ToAsciiB -> c
    java.lang.String _name -> d
    boolean _usesPadding -> e
    char _paddingChar -> f
    int _maxLineLength -> g
    java.lang.String getName() -> getName
    boolean usesPadding() -> usesPadding
    boolean usesPaddingChar(char) -> usesPaddingChar
    boolean usesPaddingChar(int) -> usesPaddingChar
    char getPaddingChar() -> getPaddingChar
    byte getPaddingByte() -> getPaddingByte
    int getMaxLineLength() -> getMaxLineLength
    int decodeBase64Char(char) -> decodeBase64Char
    int decodeBase64Char(int) -> decodeBase64Char
    int decodeBase64Byte(byte) -> decodeBase64Byte
    char encodeBase64BitsAsChar(int) -> encodeBase64BitsAsChar
    int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    byte encodeBase64BitsAsByte(int) -> encodeBase64BitsAsByte
    int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    java.lang.String toString() -> toString
org.codehaus.jackson.Base64Variants -> org.codehaus.jackson.Base64Variants:
    org.codehaus.jackson.Base64Variant MIME -> MIME
    org.codehaus.jackson.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    org.codehaus.jackson.Base64Variant PEM -> PEM
    org.codehaus.jackson.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    org.codehaus.jackson.Base64Variant getDefaultVariant() -> getDefaultVariant
org.codehaus.jackson.JsonEncoding -> org.codehaus.jackson.JsonEncoding:
    org.codehaus.jackson.JsonEncoding UTF8 -> UTF8
    org.codehaus.jackson.JsonEncoding UTF16_BE -> UTF16_BE
    org.codehaus.jackson.JsonEncoding UTF16_LE -> UTF16_LE
    org.codehaus.jackson.JsonEncoding UTF32_BE -> UTF32_BE
    org.codehaus.jackson.JsonEncoding UTF32_LE -> UTF32_LE
    java.lang.String mJavaName -> a
    boolean mBigEndian -> b
    org.codehaus.jackson.JsonEncoding[] $VALUES -> c
    org.codehaus.jackson.JsonEncoding[] values() -> values
    org.codehaus.jackson.JsonEncoding valueOf(java.lang.String) -> valueOf
    java.lang.String getJavaName() -> getJavaName
    boolean isBigEndian() -> isBigEndian
org.codehaus.jackson.JsonFactory -> org.codehaus.jackson.JsonFactory:
    int DEFAULT_PARSER_FEATURE_FLAGS -> a
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> b
    java.lang.ThreadLocal _recyclerRef -> c
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _rootCharSymbols -> d
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _rootByteSymbols -> e
    org.codehaus.jackson.ObjectCodec _objectCodec -> f
    int _parserFeatures -> g
    int _generatorFeatures -> h
    org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void enableParserFeature(org.codehaus.jackson.JsonParser$Feature) -> enableParserFeature
    void disableParserFeature(org.codehaus.jackson.JsonParser$Feature) -> disableParserFeature
    void setParserFeature(org.codehaus.jackson.JsonParser$Feature,boolean) -> setParserFeature
    boolean isParserFeatureEnabled(org.codehaus.jackson.JsonParser$Feature) -> isParserFeatureEnabled
    org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    void enableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature) -> enableGeneratorFeature
    void disableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature) -> disableGeneratorFeature
    void setGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> setGeneratorFeature
    boolean isGeneratorFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isGeneratorFeatureEnabled
    org.codehaus.jackson.JsonFactory setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.JsonParser createJsonParser(java.io.File) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.net.URL) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(byte[]) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int) -> createJsonParser
    org.codehaus.jackson.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding) -> createJsonGenerator
    org.codehaus.jackson.io.IOContext _createContext(java.lang.Object,boolean) -> a
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.InputStream,org.codehaus.jackson.io.IOContext) -> a
    org.codehaus.jackson.JsonParser _createJsonParser(java.io.Reader,org.codehaus.jackson.io.IOContext) -> a
    org.codehaus.jackson.JsonParser _createJsonParser(byte[],int,int,org.codehaus.jackson.io.IOContext) -> a
    org.codehaus.jackson.JsonGenerator _createJsonGenerator(java.io.Writer,org.codehaus.jackson.io.IOContext) -> a
    org.codehaus.jackson.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    java.io.Writer _createWriter(java.io.OutputStream,org.codehaus.jackson.JsonEncoding,org.codehaus.jackson.io.IOContext) -> a
org.codehaus.jackson.JsonGenerationException -> org.codehaus.jackson.JsonGenerationException:
org.codehaus.jackson.JsonGenerator -> org.codehaus.jackson.JsonGenerator:
    org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter -> d
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    org.codehaus.jackson.JsonGenerator configure(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> configure
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void enableFeature(org.codehaus.jackson.JsonGenerator$Feature) -> enableFeature
    void disableFeature(org.codehaus.jackson.JsonGenerator$Feature) -> disableFeature
    void setFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean) -> setFeature
    boolean isFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isFeatureEnabled
    org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter) -> setPrettyPrinter
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeBinary(byte[],int,int) -> writeBinary
    void writeBinary(byte[]) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeBooleanField(java.lang.String,boolean) -> writeBooleanField
    void writeNullField(java.lang.String) -> writeNullField
    void writeNumberField(java.lang.String,int) -> writeNumberField
    void writeNumberField(java.lang.String,long) -> writeNumberField
    void writeNumberField(java.lang.String,double) -> writeNumberField
    void writeNumberField(java.lang.String,float) -> writeNumberField
    void writeNumberField(java.lang.String,java.math.BigDecimal) -> writeNumberField
    void writeBinaryField(java.lang.String,byte[]) -> writeBinaryField
    void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    boolean isClosed() -> isClosed
    void close() -> close
org.codehaus.jackson.JsonGenerator$Feature -> org.codehaus.jackson.JsonGenerator$Feature:
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    org.codehaus.jackson.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    boolean _defaultState -> a
    int _mask -> b
    org.codehaus.jackson.JsonGenerator$Feature[] $VALUES -> c
    org.codehaus.jackson.JsonGenerator$Feature[] values() -> values
    org.codehaus.jackson.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
org.codehaus.jackson.JsonLocation -> org.codehaus.jackson.JsonLocation:
    org.codehaus.jackson.JsonLocation NA -> NA
    long _totalBytes -> a
    long _totalChars -> b
    int _lineNr -> c
    int _columnNr -> d
    java.lang.Object _sourceRef -> e
    java.lang.Object getSourceRef() -> getSourceRef
    int getLineNr() -> getLineNr
    int getColumnNr() -> getColumnNr
    long getCharOffset() -> getCharOffset
    long getByteOffset() -> getByteOffset
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonNode -> org.codehaus.jackson.JsonNode:
    java.util.List NO_NODES -> a
    java.util.List NO_STRINGS -> b
    boolean isValueNode() -> isValueNode
    boolean isContainerNode() -> isContainerNode
    boolean isMissingNode() -> isMissingNode
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isPojo() -> isPojo
    boolean isNumber() -> isNumber
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isInt() -> isInt
    boolean isLong() -> isLong
    boolean isDouble() -> isDouble
    boolean isBigDecimal() -> isBigDecimal
    boolean isBigInteger() -> isBigInteger
    boolean isTextual() -> isTextual
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isBinary() -> isBinary
    org.codehaus.jackson.JsonToken asToken() -> asToken
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.String getTextValue() -> getTextValue
    byte[] getBinaryValue() -> getBinaryValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Number getNumberValue() -> getNumberValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    org.codehaus.jackson.JsonNode get(int) -> get
    org.codehaus.jackson.JsonNode get(java.lang.String) -> get
    org.codehaus.jackson.JsonNode getFieldValue(java.lang.String) -> getFieldValue
    org.codehaus.jackson.JsonNode getElementValue(int) -> getElementValue
    java.lang.String getValueAsText() -> getValueAsText
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator getElements() -> getElements
    java.util.Iterator getFieldNames() -> getFieldNames
    org.codehaus.jackson.JsonNode path(java.lang.String) -> path
    org.codehaus.jackson.JsonNode getPath(java.lang.String) -> getPath
    org.codehaus.jackson.JsonNode path(int) -> path
    org.codehaus.jackson.JsonNode getPath(int) -> getPath
    void writeTo(org.codehaus.jackson.JsonGenerator) -> writeTo
    org.codehaus.jackson.JsonParser traverse() -> traverse
    org.codehaus.jackson.JsonGenerator append() -> append
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.JsonParseException -> org.codehaus.jackson.JsonParseException:
org.codehaus.jackson.JsonParser -> org.codehaus.jackson.JsonParser:
    int _features -> q
    org.codehaus.jackson.JsonToken _currToken -> r
    org.codehaus.jackson.JsonToken _lastClearedToken -> a
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    void close() -> close
    org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature) -> enable
    org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature) -> disable
    org.codehaus.jackson.JsonParser configure(org.codehaus.jackson.JsonParser$Feature,boolean) -> configure
    boolean isEnabled(org.codehaus.jackson.JsonParser$Feature) -> isEnabled
    void setFeature(org.codehaus.jackson.JsonParser$Feature,boolean) -> setFeature
    void enableFeature(org.codehaus.jackson.JsonParser$Feature) -> enableFeature
    void disableFeature(org.codehaus.jackson.JsonParser$Feature) -> disableFeature
    boolean isFeatureEnabled(org.codehaus.jackson.JsonParser$Feature) -> isFeatureEnabled
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonToken nextValue() -> nextValue
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    void clearCurrentToken() -> clearCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    org.codehaus.jackson.JsonToken getLastClearedToken() -> getLastClearedToken
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    java.lang.Object readValueAs(org.codehaus.jackson.type.TypeReference) -> readValueAs
    org.codehaus.jackson.JsonNode readValueAsTree() -> readValueAsTree
    org.codehaus.jackson.JsonParseException _constructError(java.lang.String) -> d
org.codehaus.jackson.JsonParser$Feature -> org.codehaus.jackson.JsonParser$Feature:
    org.codehaus.jackson.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    org.codehaus.jackson.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    org.codehaus.jackson.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    org.codehaus.jackson.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    org.codehaus.jackson.JsonParser$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    boolean _defaultState -> a
    org.codehaus.jackson.JsonParser$Feature[] $VALUES -> b
    org.codehaus.jackson.JsonParser$Feature[] values() -> values
    org.codehaus.jackson.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
org.codehaus.jackson.JsonParser$NumberType -> org.codehaus.jackson.JsonParser$NumberType:
    org.codehaus.jackson.JsonParser$NumberType INT -> INT
    org.codehaus.jackson.JsonParser$NumberType LONG -> LONG
    org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    org.codehaus.jackson.JsonParser$NumberType FLOAT -> FLOAT
    org.codehaus.jackson.JsonParser$NumberType DOUBLE -> DOUBLE
    org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    org.codehaus.jackson.JsonParser$NumberType[] $VALUES -> a
    org.codehaus.jackson.JsonParser$NumberType[] values() -> values
    org.codehaus.jackson.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
org.codehaus.jackson.JsonProcessingException -> org.codehaus.jackson.JsonProcessingException:
    org.codehaus.jackson.JsonLocation mLocation -> a
    org.codehaus.jackson.JsonLocation getLocation() -> getLocation
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.codehaus.jackson.JsonStreamContext -> org.codehaus.jackson.JsonStreamContext:
    int _type -> a
    int _index -> b
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
    boolean inArray() -> inArray
    boolean inRoot() -> inRoot
    boolean inObject() -> inObject
    java.lang.String getTypeDesc() -> getTypeDesc
    int getEntryCount() -> getEntryCount
    int getCurrentIndex() -> getCurrentIndex
    java.lang.String getCurrentName() -> getCurrentName
org.codehaus.jackson.JsonToken -> org.codehaus.jackson.JsonToken:
    org.codehaus.jackson.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    org.codehaus.jackson.JsonToken START_OBJECT -> START_OBJECT
    org.codehaus.jackson.JsonToken END_OBJECT -> END_OBJECT
    org.codehaus.jackson.JsonToken START_ARRAY -> START_ARRAY
    org.codehaus.jackson.JsonToken END_ARRAY -> END_ARRAY
    org.codehaus.jackson.JsonToken FIELD_NAME -> FIELD_NAME
    org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    org.codehaus.jackson.JsonToken VALUE_STRING -> VALUE_STRING
    org.codehaus.jackson.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    org.codehaus.jackson.JsonToken VALUE_TRUE -> VALUE_TRUE
    org.codehaus.jackson.JsonToken VALUE_FALSE -> VALUE_FALSE
    org.codehaus.jackson.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> a
    char[] _serializedChars -> b
    byte[] _serializedBytes -> c
    org.codehaus.jackson.JsonToken[] $VALUES -> d
    org.codehaus.jackson.JsonToken[] values() -> values
    org.codehaus.jackson.JsonToken valueOf(java.lang.String) -> valueOf
    java.lang.String asString() -> asString
    char[] asCharArray() -> asCharArray
    byte[] asByteArray() -> asByteArray
    boolean isNumeric() -> isNumeric
    boolean isScalarValue() -> isScalarValue
org.codehaus.jackson.ObjectCodec -> org.codehaus.jackson.ObjectCodec:
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference) -> readValue
    java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType) -> readValue
    org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) -> readTree
    void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object) -> writeValue
    void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode) -> writeTree
    org.codehaus.jackson.JsonNode createObjectNode() -> createObjectNode
    org.codehaus.jackson.JsonNode createArrayNode() -> createArrayNode
    org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode) -> treeAsTokens
    java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class) -> treeToValue
org.codehaus.jackson.PrettyPrinter -> org.codehaus.jackson.PrettyPrinter:
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
org.codehaus.jackson.impl.ArrayWContext -> org.codehaus.jackson.impl.h:
    java.lang.String getCurrentName() -> getCurrentName
    int writeFieldName(java.lang.String) -> a
    int writeValue() -> d
    void appendDesc(java.lang.StringBuilder) -> a
org.codehaus.jackson.impl.ByteSourceBootstrapper -> org.codehaus.jackson.impl.v:
    org.codehaus.jackson.io.IOContext _context -> a
    java.io.InputStream _in -> b
    byte[] _inputBuffer -> c
    int _inputPtr -> d
    int _inputEnd -> e
    boolean _bufferRecyclable -> f
    boolean _bigEndian -> g
    int _bytesPerChar -> h
    org.codehaus.jackson.JsonParser constructParser(int,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> a
    boolean checkUTF16(int) -> a
    void reportWeirdUCS4(java.lang.String) -> a
    boolean ensureLoaded(int) -> b
org.codehaus.jackson.impl.ByteSourceBootstrapper$1 -> org.codehaus.jackson.impl.e:
    int[] $SwitchMap$org$codehaus$jackson$JsonEncoding -> a
org.codehaus.jackson.impl.DefaultPrettyPrinter -> org.codehaus.jackson.impl.m:
    org.codehaus.jackson.impl.Indenter _arrayIndenter -> a
    org.codehaus.jackson.impl.Indenter _objectIndenter -> b
    boolean _spacesInObjectEntries -> c
    int _nesting -> d
    void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(org.codehaus.jackson.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(org.codehaus.jackson.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(org.codehaus.jackson.JsonGenerator,int) -> writeEndObject
    void writeStartArray(org.codehaus.jackson.JsonGenerator) -> writeStartArray
    void beforeArrayValues(org.codehaus.jackson.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(org.codehaus.jackson.JsonGenerator,int) -> writeEndArray
org.codehaus.jackson.impl.DefaultPrettyPrinter$FixedSpaceIndenter -> org.codehaus.jackson.impl.i:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> a
    boolean isInline() -> a
org.codehaus.jackson.impl.DefaultPrettyPrinter$Lf2SpacesIndenter -> org.codehaus.jackson.impl.o:
    java.lang.String SYSTEM_LINE_SEPARATOR -> a
    char[] SPACES -> b
    boolean isInline() -> a
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> a
org.codehaus.jackson.impl.Indenter -> org.codehaus.jackson.impl.s:
    void writeIndentation(org.codehaus.jackson.JsonGenerator,int) -> a
    boolean isInline() -> a
org.codehaus.jackson.impl.JsonGeneratorBase -> org.codehaus.jackson.impl.j:
    org.codehaus.jackson.ObjectCodec _objectCodec -> a
    int _features -> e
    boolean _cfgNumbersAsStrings -> b
    org.codehaus.jackson.impl.JsonWriteContext _writeContext -> c
    boolean _closed -> f
    org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature) -> enable
    org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature) -> disable
    boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature) -> isEnabled
    org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    org.codehaus.jackson.impl.JsonWriteContext getOutputContext() -> a
    void writeStartArray() -> writeStartArray
    void _writeStartArray() -> b
    void writeEndArray() -> writeEndArray
    void _writeEndArray() -> c
    void writeStartObject() -> writeStartObject
    void _writeStartObject() -> d
    void writeEndObject() -> writeEndObject
    void _writeEndObject() -> e
    void writeFieldName(java.lang.String) -> writeFieldName
    void _writeFieldName(java.lang.String,boolean) -> a
    void writeNumber(int) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void close() -> close
    boolean isClosed() -> isClosed
    void copyCurrentEvent(org.codehaus.jackson.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(org.codehaus.jackson.JsonParser) -> copyCurrentStructure
    void _verifyValueWrite(java.lang.String) -> a
    void _reportError(java.lang.String) -> b
    void _cantHappen() -> f
    org.codehaus.jackson.JsonStreamContext getOutputContext() -> getOutputContext
org.codehaus.jackson.impl.JsonGeneratorBase$1 -> org.codehaus.jackson.impl.g:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> a
org.codehaus.jackson.impl.JsonNumericParserBase -> org.codehaus.jackson.impl.l:
    java.math.BigDecimal BD_MIN_LONG -> a
    java.math.BigDecimal BD_MAX_LONG -> s
    java.math.BigDecimal BD_MIN_INT -> t
    java.math.BigDecimal BD_MAX_INT -> u
    int _numTypesValid -> v
    int _numberInt -> w
    long _numberLong -> x
    double _numberDouble -> y
    java.math.BigInteger _numberBigInt -> z
    java.math.BigDecimal _numberBigDecimal -> A
    boolean _numberNegative -> B
    int mIntLength -> C
    org.codehaus.jackson.JsonToken reset(boolean,int,int,int) -> a
    java.lang.Number getNumberValue() -> getNumberValue
    org.codehaus.jackson.JsonParser$NumberType getNumberType() -> getNumberType
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    void parseNumericValue(int) -> c
    void reportUnexpectedNumberChar(int,java.lang.String) -> a
    void reportInvalidNumber(java.lang.String) -> a
    void reportOverflowInt() -> i
    void reportOverflowLong() -> j
org.codehaus.jackson.impl.JsonParserBase -> org.codehaus.jackson.impl.n:
    org.codehaus.jackson.io.IOContext _ioContext -> b
    boolean _closed -> a
    int _inputPtr -> c
    int _inputEnd -> d
    long _currInputProcessed -> e
    int _currInputRow -> f
    int _currInputRowStart -> g
    long _tokenInputTotal -> h
    int _tokenInputRow -> i
    int _tokenInputCol -> j
    org.codehaus.jackson.impl.JsonReadContext _parsingContext -> k
    org.codehaus.jackson.JsonToken _nextToken -> l
    boolean _tokenIncomplete -> m
    org.codehaus.jackson.util.TextBuffer _textBuffer -> n
    char[] _nameCopyBuffer -> s
    boolean _nameCopied -> o
    org.codehaus.jackson.util.ByteArrayBuilder _byteArrayBuilder -> t
    byte[] _binaryValue -> p
    void _finishString() -> a
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    org.codehaus.jackson.JsonParser skipChildren() -> skipChildren
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    org.codehaus.jackson.JsonLocation getTokenLocation() -> getTokenLocation
    org.codehaus.jackson.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) -> getBinaryValue
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> a
    boolean loadMore() -> b
    void loadMoreGuaranteed() -> e
    void _closeInput() -> c
    void _releaseBuffers() -> d
    void _handleEOF() -> f
    void _reportUnexpectedChar(int,java.lang.String) -> b
    void _reportInvalidEOF(java.lang.String) -> b
    void _throwInvalidSpace(int) -> a
    void _throwUnquotedSpace(int,java.lang.String) -> c
    void _reportMismatchedEndMarker(int,char) -> a
    java.lang.String _getCharDesc(int) -> b
    void _reportError(java.lang.String) -> c
    void _wrapError(java.lang.String,java.lang.Throwable) -> a
    void _throwInternal() -> g
    org.codehaus.jackson.util.ByteArrayBuilder _getByteArrayBuilder() -> h
    org.codehaus.jackson.JsonStreamContext getParsingContext() -> getParsingContext
org.codehaus.jackson.impl.JsonParserBase$1 -> org.codehaus.jackson.impl.f:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> a
org.codehaus.jackson.impl.JsonReadContext -> org.codehaus.jackson.impl.u:
    org.codehaus.jackson.impl.JsonReadContext _parent -> c
    int _lineNr -> d
    int _columnNr -> e
    java.lang.String _currentName -> f
    org.codehaus.jackson.impl.JsonReadContext _child -> g
    void reset(int,int,int) -> a
    org.codehaus.jackson.impl.JsonReadContext createChildArrayContext(int,int) -> a
    org.codehaus.jackson.impl.JsonReadContext createChildObjectContext(int,int) -> b
    java.lang.String getCurrentName() -> getCurrentName
    org.codehaus.jackson.impl.JsonReadContext getParent() -> a
    org.codehaus.jackson.JsonLocation getStartLocation(java.lang.Object) -> a
    boolean expectComma() -> b
    void setCurrentName(java.lang.String) -> a
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.impl.JsonWriteContext -> org.codehaus.jackson.impl.a:
    org.codehaus.jackson.impl.JsonWriteContext _parent -> c
    org.codehaus.jackson.impl.JsonWriteContext _childArray -> d
    org.codehaus.jackson.impl.JsonWriteContext _childObject -> e
    org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext() -> a
    org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext() -> b
    org.codehaus.jackson.impl.JsonWriteContext getParent() -> c
    int writeFieldName(java.lang.String) -> a
    int writeValue() -> d
    void appendDesc(java.lang.StringBuilder) -> a
    java.lang.String toString() -> toString
    org.codehaus.jackson.JsonStreamContext getParent() -> getParent
org.codehaus.jackson.impl.ObjectWContext -> org.codehaus.jackson.impl.k:
    java.lang.String _currentName -> c
    java.lang.String getCurrentName() -> getCurrentName
    int writeFieldName(java.lang.String) -> a
    int writeValue() -> d
    void appendDesc(java.lang.StringBuilder) -> a
org.codehaus.jackson.impl.ReaderBasedNumericParser -> org.codehaus.jackson.impl.q:
    org.codehaus.jackson.JsonToken parseNumberText(int) -> c
org.codehaus.jackson.impl.ReaderBasedParser -> org.codehaus.jackson.impl.r:
    org.codehaus.jackson.ObjectCodec _objectCodec -> s
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _symbols -> t
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    void close() -> close
    java.lang.String _parseFieldName(int) -> d
    java.lang.String _parseFieldName2(int,int,int) -> a
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> e
    void _finishString() -> a
    void _matchToken(org.codehaus.jackson.JsonToken) -> a
    void _skipCR() -> i
    void _skipLF() -> j
    int _skipWS() -> k
    void _skipComment() -> l
    char _decodeEscaped() -> m
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> a
    java.lang.IllegalArgumentException reportInvalidChar(org.codehaus.jackson.Base64Variant,char,int,java.lang.String) -> a
org.codehaus.jackson.impl.ReaderBasedParserBase -> org.codehaus.jackson.impl.p:
    java.io.Reader _reader -> s
    char[] _inputBuffer -> a
    boolean loadMore() -> b
    char getNextChar(java.lang.String) -> e
    void _closeInput() -> c
    void _releaseBuffers() -> d
org.codehaus.jackson.impl.RootWContext -> org.codehaus.jackson.impl.b:
    java.lang.String getCurrentName() -> getCurrentName
    int writeFieldName(java.lang.String) -> a
    int writeValue() -> d
    void appendDesc(java.lang.StringBuilder) -> a
org.codehaus.jackson.impl.StreamBasedParserBase -> org.codehaus.jackson.impl.d:
    java.io.InputStream _inputStream -> s
    byte[] _inputBuffer -> a
    boolean _bufferRecyclable -> t
    boolean loadMore() -> b
    void _closeInput() -> c
    void _releaseBuffers() -> d
org.codehaus.jackson.impl.Utf8NumericParser -> org.codehaus.jackson.impl.w:
    org.codehaus.jackson.JsonToken parseNumberText(int) -> c
org.codehaus.jackson.impl.Utf8StreamParser -> org.codehaus.jackson.impl.c:
    org.codehaus.jackson.ObjectCodec _objectCodec -> s
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _symbols -> t
    int[] _quadBuffer -> u
    org.codehaus.jackson.ObjectCodec getCodec() -> getCodec
    void setCodec(org.codehaus.jackson.ObjectCodec) -> setCodec
    org.codehaus.jackson.JsonToken nextToken() -> nextToken
    void close() -> close
    org.codehaus.jackson.sym.Name parseLongFieldName(int) -> d
    org.codehaus.jackson.sym.Name parseFieldName(int,int,int) -> a
    org.codehaus.jackson.sym.Name parseFieldName(int,int,int,int) -> a
    org.codehaus.jackson.sym.Name parseEscapedFieldName(int[],int,int,int,int) -> a
    org.codehaus.jackson.sym.Name _handleUnusualFieldName(int) -> e
    org.codehaus.jackson.sym.Name findName(int,int) -> a
    org.codehaus.jackson.sym.Name findName(int,int,int) -> b
    org.codehaus.jackson.sym.Name findName(int[],int,int,int) -> a
    org.codehaus.jackson.sym.Name addName(int[],int,int) -> a
    void _finishString() -> a
    org.codehaus.jackson.JsonToken _handleUnexpectedValue(int) -> f
    void _matchToken(org.codehaus.jackson.JsonToken) -> a
    int _skipWS() -> i
    void _skipComment() -> j
    char _decodeEscaped() -> k
    int _decodeCharForError(int) -> g
    int _decodeUtf8_2(int) -> h
    int _decodeUtf8_3(int) -> i
    int _decodeUtf8_3fast(int) -> j
    int _decodeUtf8_4(int) -> k
    void _skipCR() -> l
    void _skipLF() -> m
    int nextByte() -> n
    void _reportInvalidChar(int) -> l
    void _reportInvalidInitial(int) -> m
    void _reportInvalidOther(int) -> n
    void _reportInvalidOther(int,int) -> b
    int[] growArrayBy(int[],int) -> a
    byte[] _decodeBase64(org.codehaus.jackson.Base64Variant) -> a
    java.lang.IllegalArgumentException reportInvalidChar(org.codehaus.jackson.Base64Variant,int,int,java.lang.String) -> a
org.codehaus.jackson.impl.WriterBasedGenerator -> org.codehaus.jackson.impl.t:
    char[] HEX_CHARS -> e
    org.codehaus.jackson.io.IOContext _ioContext -> f
    java.io.Writer _writer -> g
    char[] _outputBuffer -> h
    int _outputHead -> i
    int _outputTail -> j
    int _outputEnd -> k
    void _writeStartArray() -> b
    void _writeEndArray() -> c
    void _writeStartObject() -> d
    void _writeEndObject() -> e
    void _writeFieldName(java.lang.String,boolean) -> a
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeRawLong(java.lang.String) -> c
    void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> a
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(org.codehaus.jackson.JsonNode) -> writeTree
    void _verifyValueWrite(java.lang.String) -> a
    void flush() -> flush
    void close() -> close
    void _writeString(java.lang.String) -> d
    void _writeNull() -> g
    void _writeSingleEscape(int) -> a
    void _appendSingleEscape(int,char[],int) -> a
    void _flushBuffer() -> h
org.codehaus.jackson.io.BaseReader -> org.codehaus.jackson.io.a:
    org.codehaus.jackson.io.IOContext mContext -> e
    java.io.InputStream mIn -> a
    byte[] mBuffer -> b
    int mPtr -> c
    int mLength -> d
    char[] mTmpBuf -> f
    void close() -> close
    int read() -> read
    void freeBuffers() -> a
    void reportStrangeStream() -> b
org.codehaus.jackson.io.IOContext -> org.codehaus.jackson.io.b:
    java.lang.Object _sourceRef -> a
    org.codehaus.jackson.JsonEncoding _encoding -> b
    boolean _managedResource -> c
    org.codehaus.jackson.util.BufferRecycler _bufferRecycler -> d
    byte[] _readIOBuffer -> e
    byte[] _writeIOBuffer -> f
    char[] _tokenBuffer -> g
    char[] _concatBuffer -> h
    char[] _nameCopyBuffer -> i
    void setEncoding(org.codehaus.jackson.JsonEncoding) -> a
    java.lang.Object getSourceReference() -> a
    org.codehaus.jackson.JsonEncoding getEncoding() -> b
    boolean isResourceManaged() -> c
    org.codehaus.jackson.util.TextBuffer constructTextBuffer() -> d
    byte[] allocReadIOBuffer() -> e
    byte[] allocWriteIOBuffer() -> f
    char[] allocTokenBuffer() -> g
    char[] allocConcatBuffer() -> h
    char[] allocNameCopyBuffer(int) -> a
    void releaseReadIOBuffer(byte[]) -> a
    void releaseWriteIOBuffer(byte[]) -> b
    void releaseTokenBuffer(char[]) -> a
    void releaseConcatBuffer(char[]) -> b
    void releaseNameCopyBuffer(char[]) -> c
org.codehaus.jackson.io.MergedStream -> org.codehaus.jackson.io.c:
    org.codehaus.jackson.io.IOContext _context -> a
    java.io.InputStream _in -> b
    byte[] _buffer -> c
    int _ptr -> d
    int _end -> e
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void freeMergedBuffer() -> a
org.codehaus.jackson.io.NumberInput -> org.codehaus.jackson.io.d:
    java.lang.String MIN_LONG_STR_NO_SIGN -> a
    java.lang.String MAX_LONG_STR -> b
    int parseInt(char[],int,int) -> a
    long parseLong(char[],int,int) -> b
    boolean inLongRange(char[],int,int,boolean) -> a
org.codehaus.jackson.io.NumberOutput -> org.codehaus.jackson.io.g:
    int MILLION -> a
    int BILLION -> b
    long TEN_BILLION_L -> c
    long THOUSAND_L -> d
    long MIN_INT_AS_LONG -> e
    long MAX_INT_AS_LONG -> f
    java.lang.String SMALLEST_LONG -> g
    char[] LEADING_TRIPLETS -> h
    char[] FULL_TRIPLETS -> i
    int outputInt(int,char[],int) -> a
    int outputLong(long,char[],int) -> a
    int outputLeadingTriplet(int,char[],int) -> b
    int outputFullTriplet(int,char[],int) -> c
org.codehaus.jackson.io.UTF32Reader -> org.codehaus.jackson.io.e:
    boolean mBigEndian -> e
    char mSurrogate -> f
    int mCharCount -> g
    int mByteCount -> h
    int read(char[],int,int) -> read
    boolean loadMore(int) -> a
    int read() -> read
    void close() -> close
org.codehaus.jackson.io.UTF8Writer -> org.codehaus.jackson.io.f:
    org.codehaus.jackson.io.IOContext mContext -> a
    java.io.OutputStream mOut -> b
    byte[] mOutBuffer -> c
    int mOutBufferLast -> d
    int mOutPtr -> e
    int mSurrogate -> f
    java.io.Writer append(char) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    int convertSurrogate(int) -> a
    void throwIllegal(int) -> b
    java.lang.Appendable append(char) -> append
org.codehaus.jackson.sym.BytesToNameCanonicalizer -> org.codehaus.jackson.sym.f:
    org.codehaus.jackson.sym.BytesToNameCanonicalizer _parent -> a
    boolean _intern -> b
    int _count -> c
    int _mainHashMask -> d
    int[] _mainHash -> e
    org.codehaus.jackson.sym.Name[] _mainNames -> f
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket[] _collList -> g
    int _collCount -> h
    int _collEnd -> i
    boolean _needRehash -> j
    boolean _mainHashShared -> k
    boolean _mainNamesShared -> l
    boolean _collListShared -> m
    org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot() -> a
    org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean) -> a
    void release() -> b
    void initTables(int) -> b
    void mergeChild(org.codehaus.jackson.sym.BytesToNameCanonicalizer) -> a
    org.codehaus.jackson.sym.Name getEmptyName() -> c
    org.codehaus.jackson.sym.Name findName(int) -> a
    org.codehaus.jackson.sym.Name findName(int,int) -> a
    org.codehaus.jackson.sym.Name findName(int[],int) -> a
    org.codehaus.jackson.sym.Name addName(java.lang.String,int[],int) -> a
    int calcHash(int[],int) -> b
    java.lang.String toString() -> toString
    int findBestBucket() -> d
    void expandCollision() -> e
org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.h:
    org.codehaus.jackson.sym.Name mName -> a
    org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket mNext -> b
    int length() -> a
    org.codehaus.jackson.sym.Name find(int,int,int) -> a
org.codehaus.jackson.sym.CharsToNameCanonicalizer -> org.codehaus.jackson.sym.a:
    org.codehaus.jackson.sym.CharsToNameCanonicalizer sBootstrapSymbolTable -> a
    org.codehaus.jackson.sym.CharsToNameCanonicalizer _parent -> b
    boolean _intern -> c
    java.lang.String[] _symbols -> d
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> e
    int _size -> f
    int _sizeThreshold -> g
    int _indexMask -> h
    boolean _dirty -> i
    org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot(boolean) -> a
    void initTables(int) -> a
    org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean) -> b
    void mergeChild(org.codehaus.jackson.sym.CharsToNameCanonicalizer) -> a
    void release() -> a
    java.lang.String findSymbol(char[],int,int,int) -> a
    int calcHash$1ceb5030(char[],int) -> a
    int calcHash(java.lang.String) -> a
org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket -> org.codehaus.jackson.sym.i:
    java.lang.String _symbol -> a
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket mNext -> b
    java.lang.String getSymbol() -> a
    org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket getNext() -> b
    java.lang.String find(char[],int,int) -> a
org.codehaus.jackson.sym.Name -> org.codehaus.jackson.sym.g:
    java.lang.String mName -> a
    int mHashCode -> b
    java.lang.String getName() -> b
    boolean equals(int) -> a
    boolean equals(int,int) -> a
    boolean equals(int[],int) -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.codehaus.jackson.sym.Name1 -> org.codehaus.jackson.sym.c:
    org.codehaus.jackson.sym.Name1 sEmptyName -> a
    int mQuad -> b
    org.codehaus.jackson.sym.Name1 getEmptyName() -> a
    boolean equals(int) -> a
    boolean equals(int,int) -> a
    boolean equals(int[],int) -> a
org.codehaus.jackson.sym.Name2 -> org.codehaus.jackson.sym.d:
    int mQuad1 -> a
    int mQuad2 -> b
    boolean equals(int) -> a
    boolean equals(int,int) -> a
    boolean equals(int[],int) -> a
org.codehaus.jackson.sym.Name3 -> org.codehaus.jackson.sym.e:
    int mQuad1 -> a
    int mQuad2 -> b
    int mQuad3 -> c
    boolean equals(int) -> a
    boolean equals(int,int) -> a
    boolean equals(int[],int) -> a
org.codehaus.jackson.sym.NameN -> org.codehaus.jackson.sym.b:
    int[] mQuads -> a
    int mQuadLen -> b
    boolean equals(int) -> a
    boolean equals(int,int) -> a
    boolean equals(int[],int) -> a
org.codehaus.jackson.type.JavaType -> org.codehaus.jackson.type.b:
    int hashCode() -> hashCode
org.codehaus.jackson.type.TypeReference -> org.codehaus.jackson.type.a:
org.codehaus.jackson.util.BufferRecycler -> org.codehaus.jackson.util.e:
    byte[][] mByteBuffers -> a
    char[][] mCharBuffers -> b
    byte[] allocByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> a
    void releaseByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType,byte[]) -> a
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> a
    char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,int) -> a
    void releaseCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,char[]) -> a
org.codehaus.jackson.util.BufferRecycler$ByteBufferType -> org.codehaus.jackson.util.d:
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType READ_IO_BUFFER -> a
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType WRITE_IO_BUFFER -> b
    int size -> c
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] $VALUES -> d
    org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] values() -> a
    int access$000(org.codehaus.jackson.util.BufferRecycler$ByteBufferType) -> a
org.codehaus.jackson.util.BufferRecycler$CharBufferType -> org.codehaus.jackson.util.b:
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TOKEN_BUFFER -> a
    org.codehaus.jackson.util.BufferRecycler$CharBufferType CONCAT_BUFFER -> b
    org.codehaus.jackson.util.BufferRecycler$CharBufferType TEXT_BUFFER -> c
    org.codehaus.jackson.util.BufferRecycler$CharBufferType NAME_COPY_BUFFER -> d
    int size -> e
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] $VALUES -> f
    org.codehaus.jackson.util.BufferRecycler$CharBufferType[] values() -> a
    int access$100(org.codehaus.jackson.util.BufferRecycler$CharBufferType) -> a
org.codehaus.jackson.util.ByteArrayBuilder -> org.codehaus.jackson.util.a:
    byte[] NO_BYTES -> a
    java.util.LinkedList _pastBlocks -> b
    int _pastLen -> c
    byte[] _currBlock -> d
    int _currBlockPtr -> e
    void reset() -> a
    void append(int) -> a
    void appendTwoBytes(int) -> b
    void appendThreeBytes(int) -> c
    byte[] toByteArray() -> b
org.codehaus.jackson.util.CharTypes -> org.codehaus.jackson.util.c:
    char[] HEX_CHARS -> a
    int[] sInputCodes -> b
    int[] sInputCodesUtf8 -> c
    int[] sInputCodesJsNames -> d
    int[] sInputCodesUtf8JsNames -> e
    int[] sInputCodesComment -> f
    int[] sOutputEscapes -> g
    int[] sHexValues -> h
    int[] getInputCodeLatin1() -> a
    int[] getInputCodeUtf8() -> b
    int[] getInputCodeLatin1JsNames() -> c
    int[] getInputCodeUtf8JsNames() -> d
    int[] getInputCodeComment() -> e
    int[] getOutputEscapes() -> f
    int charToHex(int) -> a
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> a
org.codehaus.jackson.util.InternCache -> org.codehaus.jackson.util.f:
    org.codehaus.jackson.util.InternCache instance -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.String intern(java.lang.String) -> a
org.codehaus.jackson.util.TextBuffer -> org.codehaus.jackson.util.g:
    char[] NO_CHARS -> a
    org.codehaus.jackson.util.BufferRecycler _allocator -> b
    char[] _inputBuffer -> c
    int _inputStart -> d
    int _inputLen -> e
    java.util.ArrayList _segments -> f
    boolean _hasSegments -> g
    int _segmentSize -> h
    char[] _currentSegment -> i
    int _currentSize -> j
    java.lang.String _resultString -> k
    char[] _resultArray -> l
    void releaseBuffers() -> a
    void resetWithEmpty() -> m
    void resetWithShared(char[],int,int) -> a
    void resetWithCopy(char[],int,int) -> b
    char[] findBuffer(int) -> b
    void clearSegments() -> n
    int size() -> b
    int getTextOffset() -> c
    char[] getTextBuffer() -> d
    java.lang.String contentsAsString() -> e
    char[] contentsAsArray() -> o
    java.math.BigDecimal contentsAsDecimal() -> f
    double contentsAsDouble() -> g
    char[] getCurrentSegment() -> h
    char[] emptyAndGetCurrentSegment() -> i
    int getCurrentSegmentSize() -> j
    void setCurrentLength(int) -> a
    char[] finishCurrentSegment() -> k
    char[] expandCurrentSegment() -> l
    java.lang.String toString() -> toString
    void unshare(int) -> c
    void expand(int) -> d
